=============================================================================
=            Twilight Terminal version 2.06c Instruction Booklet            =
=============================================================================
   Congratulations on choosing a fine terminal program!  In this informal
text we'll explain a few things about Twilight Term for you.  I'm sure
everyone who uses it wants to know everything about it, even some of the
history behind it's making.
   First off,  Twilight Terminal is a Shareware program.  This means that you
can recieve this program from any source without cost to you.  This program
should be free to obtain.  You may also pass out copies of it to anyone you
know.  The only conditions to this agreement are that the Twilight Terminal
program itself should not be modified in any way and that if you use the
program regularly - please send 20 dollars to the starving programmer who
slaved away at creating it.  If you do find a version of the program that
seems to have been tampered with, please write to me about it.

-----------------------
- History of Twi-Term -
-----------------------  The origins of the program go back to late 1993.  I
was considering adding extended ASCII support to my BBS. (You know, all those
fancy/funny characters that most BBSes these days like drawing pictures
with.)  But running the BBS on a Coco doesn't allow you to see anything
except the regular Coco 7bit ASCII characters.  I decided to just make a
terminal program that runs in a graphics screen and drew a proper 256
character extended ASCII font on it.  The very first test program just did
that, and ran at a locked in speed of 2400 baud.  It still didn't show
exactly what a PC user would have seen when they called my BBS, so I decided
to make it color.  The problem is that we only get 4 colors in the hi-res
graphics screen, and 4 colors just isn't enough to make the display look very
good.  I had been experimenting with schemes to push more colors out of the
Coco in the past, I decided to take one of my successful experiments and
adapt it to work in a terminal program.  The scheme works when you draw three
copies of your graphics in memory, each with slightly offset phases of
dithered pixels...each screen pretty much contains the same thing as each
other, but has the dither pattern offset.  If you kept cycling between the
three screens, the eye would be fooled into thinking it was a single image
but with more colors than any of the screens by themselves.  It was pretty
complex to program, but the result was very nice.  I even got carried away
and shrunk the font by a pixel to try to squeeze more lines into the screen.
The result?  A screen capable of showing full extended ASCII, in 80 columbs
by 32 lines with 20 simultaneous colors!   The oldest version of this program
I can find is from Jan 14, 1994.  It boots up looking very similar to the
newest version, but it runs so much slower that it's scary.  (Having to draw
3 seperate graphics screens of data, each slightly different than the other
takes a lot of processor power!)   Anyways, the next couple of versions added
things like smooth scrolling text, and upping the baud rate support a few
notches.   The real BIG change came with Twi-Term version 2 - Pop up windows
for your configurations and stuff.   Because of that, I could now add in some
extra features like a pop-up auto-dialer, macros, configuration
save/load..etc..    All throughout the whole process I was also on a quest to
accomplish the impossible.  I wanted the program to have more colors than
ever seen before, more lines of text on the screen ever before, more font
characters than seen before, the smoothest scrolling anyone's ever seen on a
terminal, and lastly... It should be the damned fastest terminal program ever
made for the Coco!   (I had a hard time making it go fast, though.  Since it
runs in graphics mode, and has to draw many copies of each thing on the
screen, it has no way of competing against someone else's terminal that just
runs in a 4k text screen (Twi-Term has to draw on a 140k graphics screen) but
the newest version allows you to BBS at 19200 baud, and still draws on the
screen faster than any other terminal program I have seen on the Coco!)


------------------------
- Features in Twi-Term -
------------------------   Version 2.06c isn't vastly different from the last
version, but there are a few improvements.  It's a little faster, it finally
has proper decoding of virtually all ANSI codes.  (there are still a very few
ANSI codes not supported, but I have never actually seen any BBS use them, so
nobody should miss them.  I'll try to add them in a future version.)  And of
course, I fixed a few bugs that managed to creep into the previous release of
Twi-term.  Version 2.06c has been out for a while now, and I haven't spotted
or heard of any bugs in it except for one (tell you about that later).

Version 2.06c of Twi-Term has - big 80 column by 32 line screen.
                              - full extended ASCII (256 character) font.
                              - full color ANSI capability, also including
                                  most other ANSI effects such as cursor
                                  relocation...etc.
                              - selectable smooth scrolling (makes it MUCH
                                  easier to read at high baud rates!).
                              - 300K of fast response scrollback buffer.
                              - ten number autodial directory (which can
                                  also remember passwords & RS-232
                                  preferen!)s for each entry).
                              - ten selectable macro keys.
                              - ANSI arrow key ability.
                              - ability to 'type' extended ASCII (with ALT
                                  key depressed).
                              - RS-232 PAK support up to 19200 baud!
                              - Serial (bitbanger) port support to 9600 baud!


------------------
- Pop-up windows -
------------------   There are Pop-up windows to allow you to select and
configure all sorts of things in Twi-term.  I'll try to explain the functions
of each one without making it too boring to read!  All Pop-up windows are
called up by holding the F1 key down while simultaneously hitting another
key.  Here are the keys and information about each pop-up window they call
up.

F1+H   F1+Key Command List.  If ever you need to remember which F1 commands
         to use, press F1 and H to see the command list.

F1+O   Default Parameters menu.  It can be called the 'MAIN' mee  of Twi-
         Term.  By pressing the highlighted letters shown here, you call up
         other pop-up menus.  If you made any changes to your settings
         anywhere and want to make sure that Twi-Term remembers them next
         time you load it in, make sure to use the 'S'ave settings function.

F1+R   RS232 Configuration.  From here you can change your baud rate, and
         other RS-232 settings.  You can also select either a Tandy RS-232
         PAK, a Disto RS-232 card, or the Cocos own serial port on the back.
         Make sure not to select an RS-232 device you don't have because it
         could possibly crash your computer.
         Lastly, there is also an Interrupt select.  Unless you are
         absolutely sure of what you are doing, it is recommended that you
         leave it set to GIME.  This just makes the GIME generate the
         interrupt to drive the RS-232.  If you set it to 6551, you must be
         sure that your RS-232 chip actually has a wire going to the CPU's
         IRQ or FIRQ (Yes, Twi-Term should work with either.  But FIRQ will
         waste less CPU power hence run faster).  Unless you have an RS-232
         modified to run at 38400 baud, there is no real advantage to using
         the 6551 as the interrupt source (the extra programming logic needed
         to decode the interrupts actually make the terminal program run
         SLOWER than if simply using the GIME's RS-232 polling interrupt).


F1+M   Modem Parameter Strings.  This window contains the codes that your
         modem responds with when calling out, and also the commands that
         the terminal sends to the modem when it wants it to dial out.
         Check your modem's manual to find out what strings your modem needs
         if the default values in Twi-Term do not work.   '1' is the dial
         prefix (usually ATDT on most modems).  '2' is the dial suffix (in
         case you need to add something after the phone number is sent).
         The 'funny' characters you might see in here are 'cr's (ENTER codes)
         and the triangles pointing to the right are codes representing half
         second pauses in the sending of the strings.

F1+E   Edit Macros window.  From here you see a list of all your macros, and
         can edit any of them by simply pressing the highlighted number
         before the macro you want to edit.

----   "Edit/Type in new string. Ctrl+P=1/2 sec pause, Shift+Esc=Esc."  In
         this pop-up window, you are simply expected to edit a string and
         the apress your 'Break/Esc' key when you are done.  If you press
         ENTER, it records a 'cr' code as part of the string, if you don't
         want those make sure to backspace them.  Pressing Ctrl-P will add a
         half second delay at that point every time that string is sent out.
         If you need an actual Escape code in your string, you can type one
         in by pressing Shift+'Break/Esc' on your keyboard.

F1+D   Dial Directory window.  This window shows you all the numbers in your
         dial directory.  By pressing the highlighted number before each
         entry, you can mark or unmark those numbers for dialing.  When you
         press 'D' to dial, Twi-Term will dial in sequence all the numbers
         have marked off until it connects to one of them.  To edit an entry
         press 'E' and then the number of the entry.

----   "Dial Directory Editor. Esc=exit."   In this window you edit all the
         details about the numbers you want put in your dial directory.  Each
         number can have a different baud rate and number of bits/parity etc.
         This way you don't have to manually select these things each time
         you try calling a system with non-standard settings.  Pressing 'H'
         lets you edit the phone number, 'W' lets you make youself a little
         note (a good place to keep track of your passwords, user numbers or
         other details about a BBS).  'N' lets you edit the name of the
         system you are currently adding to your dial directory.

F1+mb  Video Settings.  Of all the pop-up windows, this is probably the one
         that confuses most people.  From here, you can pretty much edit any
         of the colors that you see in the terminal program.  Just because
         you see 32 colors here, doesn't mean this graphics mode actually
         supports that many colors.  As far as the GIME in your Coco is
         concerned, you are looking at a 4 color screen.  (The four colors
         are shown at the bottom marked by 7, 8, 9 and 0 before them.)
         Lets start with the bottom half of this window.  To edit the 4 base
          palette colors of Twi-Term, first press the number before the color
          you want to change (7,8,9 or 0)  Then, press from numbers 1 to 6 to
          adjust t t Red,Green or Blue contents of that color.
            Hitting '1' lowers the  RED  in the color, '4' raises the  RED
            Hitting '2' lowers the GREEN in the color, '5' raises the GREEN
            Hitting '3' lowers the  BLUE in the color, '6' rstses the  BLUE
          You can see the effect of changing the 4 base colors when you look
          at the colored blocks under the word 'Choices'.  Make sure that all
          the important colors are all there when you customize your palette.
         Now, lets go over to the top half of the window.  This part lets you
         select which 16 choices of colors to use for your ANSI emulation.
         The left side of the window should contain in alphabetical order -
         Black,Red,Green,Yellow,Blue,Purple(Magenta),Cyan(Pale blue),White.
         And then repeat those colors again only brighter in 'I' through 'P'.
         To change the value of a color in the SET, press the letter shown
         before that color,  Then press the letter before a color from the
         CHOICES list on the right.  You have now just changed one of the
         base 16 colors of Twi-term.
         A note to remember - It matters if you press upper or lower case
         characters!  If you want to set color 'H' with 'n' for example, you
         must type capital H followed by lowercase n for it to work.

F1+Z   "Hang up modem? (Y/N)"  This window is pretty self explanatory.
         Pressing 'Y' makes Twi-Term hang up the modem, pressing anything
         else cancels the command.

F1+S   Smooth Scroll select.  This function was so simple, I neglected to
         make a pop-up window for it.  Press it once, it turns off the smooth
         scrolling of the screen.  Press it again, it turns it back on.

F1+'arrow keys'   ANSI arrow keys.  Since the arrow keys are already used for
         things like the backspace and tab codes,  I had to think of some
         other way of typing ANSI arrow keys (for BBSes with fancy ANSI
         graphics and arrow key controlled menus).  By holding F1 and then
         pressing an arrow key, you can send the proper ANSI code for
         directional cursor control.

F1+'0 to 9'   Macro keys.  You can trigger any of your ten selectable macros
         by holding down F1 and pressing a number key.  Any macro can be up
         to 64 characters long, and can include control codes and escape
         sequences in them.  You can even put Extended ASCII in your macros.


--------------
- Conclusion -
--------------    Well, I think that aboin covers most of what you would want
to know about Twilight Terminal.  I'm sure I probably forgot something, but
I'll try to include it in the next release of Twi-Term and it's instruction
file.   I hope you enjoy the program,  and I hope it also gives new life and
functionality to your Color Computer 3!


I Thank everyone who have helped me out in my projects for the CoCo.  I hope
that my programs are good enough to return the favour!


                                                December 14th, 1995.
                                                John Kowalski (Sock Master)
                                                sock@axess.com
