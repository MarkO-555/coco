00100 	TITLE	MLF - MLFINDER00110 * MLFinder by Robert Gault00120 * Usage: Find Load and Execution addresses of ml programs stored on00130 *        disk. Report the track and sector locations where code is00140 *        stored. Report to printer or screen.00150 * For syntax see HELP message below.00160 00170 *	GENERAL METHOD:00180 *	GET FILE NAME, OPEN FILE SEQUENTIAL FOR INPUT THEN00190 *	READ LENGTH OF SECTION, GET START ADDRESS, ADD LENGTH TO START00200 *	READ CHARACTERS FOR LENGTH, CHECK FOR END OR NEXT SECTION.00210 00220 CR	EQU	$0D		CARIAGE RETURN00230 SPACE	EQU	$2000240 00250 DEVNUM	EQU	$6F		0=SCREEN, 1-N=DISK, -1=CASS., -2=PRINTER00260 BUFLG	EQU	$70		BUFFER IN FLAG 0=DATA -1=EMPTY00270 ZERO	EQU	$8A		ALWAYS = $000000280 GETNCH	EQU	$9F		GET NEXT CHARACTER00290 GETCCH	EQU	$A5		GET CURRENT CHARACTER00300 TRACK	EQU	$EC		DSKCON VARIABLES00310 SECTOR	EQU	$ED		"	"00320 DFLTYP	EQU	$957		DISK FILE TYPE 0=BAS, 1=DATA, 2=ML, 3=TXT00330 CLOSEF	EQU	$A42D		CLOSE FILE00340 ERROR	EQU	$AC46		BASIC ERROR ROUTINE00350 BASIC	EQU	$AC73		PRINT CR, OK00360 COMMA	EQU	$B26D		TEST FOR COMMA00370 GETNM	EQU	$B73D		EVALUATE POS NUMBER RETURN IN REG.X00380 PRINTS	EQU	$B99C		PRINT STRING TO SCREEN00390 ***********************************************************************00400 * MACROS - DEFINED FOR CLARITY IN SUBSEQUENT CODE00410 ***********************************************************************00420 PUTCHR	MACRO00430 	JSR	[$A002]		OUTPUT CHARACTER VIA $6F DEVICE00440 	ENDM00450 00460 SETDEV	MACRO00470 	LDA	MODE		POINT DEVICE TO PRINTER OR SCREEN00480 	STA	DEVNUM00490 	ENDM00500 00510 RSETDV	MACRO00520 	LDA	DIMAGE		RESET DEVICE TO DISK FILE00530 	STA	DEVNUM00540 	ENDM00550 00560 TSTPTR	MACRO00570 	LDA	$FF22		TEST FOR PRINTER READY00580 	BITA	#1		RS232 INPUT LINE00590 	BEQ	\.A00600 	LEAX	<OFFLIN-1,PCR00610 	JMP	PRINTS00620 OFFLIN	FCC	/Printer is off line!/00630 	FCB	000640 \.A	EQU	*00650 	ENDM00660 00670 **********************************************************************00680 00690 	ORG	$CB	EXTENDED BASIC SCRATCH PAD00700 LOFFST	RMB	2	LOAD OFFSET00710 LENGTH	RMB	2	LENGTH OF LOAD BLOCK00720 LDADDR	RMB	2	LOAD ADDRESS00730 MODE	RMB	1	OUTPUT PATH: 0=SCREEN, FE=PRINTER00740 LOCAT	RMB	2	POINTER TO DISK SECTOR00750 TRSEC	RMB	2	TRACK, SECTOR00760 DOS	RMB	1	DOS INDICATOR: 0=1.0 1=1.100770 DIMAGE	RMB	1	IMAGE OF $6F00780 00790 ************************************************************************00800 00810 	ORG	$E0000820 START	CLR	MODE		RESET LINE PRINTER FLAG00830 	CLR	DOS00840 A@	JSR	GETNCH00850 	LBEQ	HELP00860 	CMPA	#'H		HELP00870 	LBEQ	HELP00880 	CMPA	#'P		FOR LINE PRINTER00890 	BNE	B@00900 	TSTPTR00910 	LDA	#-200920 	STA	MODE		INDICATE LINE PRINTER00930 	BRA	A@00940 B@	LDX	$C00400950 	CMPX	#$D66C		DOS1.000960 	BEQ	C@00970 	INC	DOS00980 	CMPX	#$D75F		DOS1.100990 	BEQ	C@01000 	LDB	#20		I/O ERROR; CLOSEST TO UNKNOWN DOS01010 	JMP	ERROR01020 C@	EQU	*01030 01040 	TST	DOS01050 	BNE	A@01060 	JSR	$CEDF		DEFAULT .BIN & GET FILE NAME01070 	JSR	$C959		OPEN SEQUENTIAL FILE FOR INPUT01080 	BRA	B@01090 A@	JSR	$CFBB01100 	JSR	$CA0701110 B@	EQU	*01120 01130 	LDA	DEVNUM		GET PATH #01140 	STA	DIMAGE		SAVE IT01150 	LDD	DFLTYP		DISK FILE TYPE CODE01160 	SUBD	#$200		ML+BIN01170 	LBNE	$A616		BAD FILE MODE ERROR CALL01180 	STD	LOFFST		REG.D = 0; CLEAR LOAD OFFSET01190 	STD	LOCAT		CLEAR DISK SECTOR LOCATION01200 * NOW LOOK FOR AN OFFSET LOAD AS IN "LOADM FILE,&H2000"01210 	JSR	GETCCH		MORE PARAMETER?01220 	BEQ	A@01230 	JSR	COMMA		TEST FOR COMMA01240 	JSR	GETNM		GET NUMBER; MAKE INTEGER IN REG.X01250 	STX	LOFFST		UPDATE OFFSET LOAD VALUE01260 A@	JSR	$A5C7		GETCCH WITH ERROR CHECK; NO MORE ENTRIES01270 01280 MAINLP	LBSR	GET1BF		GET CHARACTER FROM BUFFER; BLOCK CODE01290 	PSHS	A		SAVE IT; 0=NEXT SEGMENT, FF=END01300 	LBSR	GET2BF		GET 2 CHARACTERS FROM BUFFER01310 	STD	LENGTH		BLOCK LENGTH FOR LOADING01320 	LDX	TRACK		READ DISCON01330 	STX	TRSEC		SAVE DATA FOR REPORT01340 	TFR	D,X		SAVE BLOCK LENGTH01350 	LBSR	GET2BF		2 MORE CHARACTERS; LOAD POINTER01360 	ADDD	LOFFST		ADD START OFFSET TO POINTER01370 	STD	LDADDR		LOAD ADDRESS01380 	LDA	,S+		RETRIEVE BLOCK CODE AND SET Z FLAG01390 	BNE	CLOSE		CLOSE FILE01400 01410 A@	TST	DOS		SKIP THROUGH ONE CODE BLOCK01420 	BNE	B@01430 	JSR	$C597		GET BYTE FROM FILE01440 	LDB	BUFLG01450 	LBNE	$C334		INPUT PAST END OF FILE01460 	BRA	C@01470 B@	JSR	$C5C401480 	LDB	BUFLG01490 	LBNE	$C352		EOF01500 C@	LEAX	-1,X01510 	BNE	A@		END OF SECTION YET ?01520 01530 	LEAX	LOAD,PCR	POINT TO MESSAGE01540 	SETDEV			POINT OUTPUT TO CORRECT DEVICE01550 	LDD	LDADDR		GET VALUE01560 	BSR	PRINT01570 	LEAX	END,PCR		POINT TO MESSAGE01580 	LDD	LDADDR		LOAD ADDRESS01590 	ADDD	LENGTH01600 	SUBD	#101610 	BSR	PRINT01620 	LEAX	TRKMSG,PCR	POINT TO MESSAGE01630 	CLRA01640 	LDB	TRSEC		GET TRACK VALUE01650 	BSR	PRINT01660 	LEAX	SECTR,PCR	POINT TO MESSAGE01670 	CLRA01680 	LDB	TRSEC+1		GET SECTOR VALUE01690 	BSR	PRINT01700 	LEAX	LOC,PCR		POINT TO MESSAGE01710 	LDD	LOCAT		GET POINTER TO SECTOR01720 	ADDD	#5		ACCOUNT FOR SUBHEADER01730 	PSHS	D		SAVE TRUE LOCATION IN SECTOR01740 	BSR	PRINT01750 	RSETDV			RESET DEVICE TO CORRECT DISK PATH01760 	PULS	D		RECOVER LOCATION01770 	ADDD	LENGTH		ADD BLOCK LENGTH01780 	STD	LOCAT		SAVE NEW VALUE01790 	BRA	MAINLP01800 01810 CLOSE	JSR	CLOSEF01820 	SETDEV01830 	LEAX	<XFER,PCR01840 	LDD	LDADDR01850 	BSR	PRINT01860 	LDA	#CR		FLUSH PRINTER01870 	BRA	FINI01880 01890 PRINT	PSHS	D		PRINT TO SCREEN AS INDEXED BY REG. X01900 A@	LDA	,X+		READ MESSAGE01910 	BEQ	C@01920 	PUTCHR			SEND REG.A TO CORRECT PATH01930 	BRA	A@01940 C@	PULS	A		GET MSB01950 	BSR	D@01960 	PULS	A		GET LSB01970 D@	TFR	A,B01980 	LSRA			MSN01990 	LSRA02000 	LSRA02010 	LSRA02020 	BSR	E@02030 	TFR	B,A02040 	ANDA	#$0F		LSN02050 E@	CMPA	#902060 	BLS	F@02070 	ADDA	#702080 F@	ADDA	#'002090 FINI	PUTCHR02100 	RTS02110 02120 GET2BF	BSR	A@		GET TWO CHARACTERS FROM BUFFER02130 A@	BSR	GET1BF		STORE RESULT IN D REG.02140 	EXG	A,B02150 	RTS02160 02170 GET1BF	TST	DOS02180 	BNE	A@02190 	JMP	$CCE2		GET CHAR FROM BUFFER02200 A@	JMP	$CDBC02210 02220 LOAD	FCB	CR02230 	FCC	/LOAD:/02240 	FCB	002250 END	FCC	/ END:/02260 	FCB	002270 XFER	FCC	/ XFER:/02280 	FCB	002290 TRKMSG	FCC	/ TRACK:/02300 	FCB	002310 SECTR	FCC	/ SECTOR:/02320 	FCB	002330 LOC	FCC	/ LOCATION:/02340 	FCB	002350 02360 HELP	LEAX	<MESAGE,PCR02370 A@	LDA	,X+02380 	BEQ	B@02390 	PUTCHR02400 	BRA	A@02410 B@	JMP	BASIC02420 MESAGE	FCB	CR02430 	FCC	"USAGE:    [ ]=OPTIONAL"02440 	FCB	CR02450 	FCC	/      EXEC:"NAME"[,offset]    /02460 	FCC	/prints info to screen/02470 	FCB	CR02480 	FCC	/      EXEC:P"NAME"[,offset]   /02490 	FCC	/sends  info to printer/02500 	FCB	CR,002510 	END	START