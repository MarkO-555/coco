<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\Basic09 - Ch 11Pg 127-150.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000059.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Repeat<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can repeat identical sequences of specifications using parentheses within a format specification. Enclose the group of specifications you wish to repeat, preceded by a repetition count, such
as:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>.~2tX2,r1 0.5)" </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in place of 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IIX2,R1 0.5,X2,R10.511<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>--2C I2,2CX1 ,S4))" </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in place of 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"I2,X1 ,S4,X1 ,S4, I2,X1 ,<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>S4,X1 ,S4"<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This program looks at memory locations 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
32000 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
32010 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and displays their contents in decimal, hexadecimal, and binary. PRINT
USING formats the display in columns.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE memlook<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM NUMHER,T,MEM,VALUE:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM X,NUM:INTEGER; CHARACTER ,HI :STRING<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPR I NT "DAddr ODec .0Hex.[1BinE100=ASCI I"<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR Z=32000 TO 32010<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OH I = ""<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONUMHER=PEEKCZ)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF NUMBER&gt;0 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OGOSUH 1 0 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF PEEKCZ)&lt;32 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCHARACTER=""<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OELSE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCHARACTER=CHR$CPEEKCZ))<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND I F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF PEEKCZ)&gt;0 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT USING "I6&lt;,T7,I4&lt;,X2,H4&lt;,X1,S8&lt;,X2,S1",Z,<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PEEKCZ),PEEKCZ),HI,CHARACTER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DELSE PRINT USING "I6&lt;,T7,I4&lt;,X2,H4&lt;,X1,S8&gt;,X2,<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>S1",Z,0,0,"0000"," "<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT Z<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000060.JPG" WIDTH="16" HEIGHT="2">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000061.JPG" WIDTH="389" HEIGHT="315">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1 000NUM=LOG1 0CNUMHER)/ . 3<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONUM=2^NUM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pREPEAT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FIX=NUMBER/NUM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF X&gt;0 THEN HI=HI+"1"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENUMHER=MODCNUMHER,NUM)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pELSE HI=HI+"0"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONUM=NUM/2<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OUNTIL NUM&lt;=1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pIF NUMBER&gt;0 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OBI =BI </TT>
</FONT>
<FONT SIZE="1" FACE="Garamond1" COLOR="#000000">
+111 11<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pELSE HI=HI+"0"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND I F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ORETURN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000062.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000063.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000064.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-128<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
PUT 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Writes to a direct access </B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
ale<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000065.JPG" WIDTH="24" HEIGHT="9">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>PUT # pa th, da to
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Writes a fixed-size binary data record to a file or
device. Use PUT to store data in random access files.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Although you usually use PUT with files, you can also use it
to send data to a device.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
For information about storing data in random access files, see
Chapter 8, "Disk Files". Also, see GET, SEEK, and SIZE.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
path A variable name you chose to use in an OPEN
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or CREATE statement that stores the number
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
of the path to the file or device to which you
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
are directing data.
</UL>
</UL>
<BR>
 <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
data Either a variable containing the data you
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
want to send or a string of data.
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PUT #PATH,DATA$
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PUT INPUT,ARRAY$
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure is a simple inventory data base. You type in the
information for an item name, list cost, actual cost, and quantity. Using PUT, the procedure stores data in a file named
Inventory.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE inventory
OTYPE INV-ITEM=NAME:STRINGL253; LIST,COST:REAL;
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>,i'~ QTY: INTEGER<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ED IM INV-ARRAYC1 00): INV-ITEM
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OD I M WORK-.REC : I NV-ITEM
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH:HYTE
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000066.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-129<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000067.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DELETE "inventory"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>100ON ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pCREATE #PATH,"inventory" ~.,,~<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pWORK-REC. NAME=1111<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pWORK-REC. L I ST=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. COST=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. QTY=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR N=1 TO 1 00<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPUT #PATH,WORK-REC<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONE XT N<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pL00P<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DINPUT "Record number? ",recnum<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OI F recnum&lt;1 OR recnum)-1 00 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DPR I NT "End of Se55 ion"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pINPUT "Item name? ",WORK-REC. NAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "List price? ",WORK-REC.LIST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DINPUT "Cost price? " WORK-REC. COST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>]INPUT "Quantity? ",WORK-REC.QTY<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK *PATH,Crecnum-1)*SIZECWORK-REC)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPUT *PATH,WORK-REC<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pENDL00P<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000068.JPG" WIDTH="25" HEIGHT="7">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000069.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000070.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-130<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
RAD 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Returns trigonometric calculations in
radians
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
tax: RAD
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Set a procedure's state flag so that a procedure uses
radians in SIN, COS, TAN, ACS, ASN, and ATN functions.
Because this is the BASIC09 default, you do not need to use
the RAD statement unless you previously used a DEG statement in the procedure.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RAD<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This program calculates sine, cosine, and tangent for a value you
supply. It calculates one set of results in degrees, using DEG,
and the second set of results in radians using RAD.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE trigcalc
ODIM ANGLE:REAL
ODEG
DINPUT "Enter the angle of two sides of a
triangle...",ANGLE
OPRINT
OPRINT "[10[1[1[10=Angle","S1NE", -TOSINE" "TAN"
OPR I NT "OOOOOOOOO------_---------------------------<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>------------------<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Degrees = "; ANGLE,SINCANGLE),COSCANGLE),
TANCANGLE)
GRAD
OPRINT "Radians = "; ANGLE,SINCANGLE),COSCANGLE),
TANCANGLE)
OPRINT
REND<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-131
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000071.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000072.JPG" WIDTH="100" HEIGHT="1">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
READ 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Reads data from a device or DATA
statement
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: READ [#path,] 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>varname
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Reads either an ASCII record from a sequential file
or device, or an item from a DATA statement.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>path<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>varname<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
A variable containing the path number of the
file you want to access. You can also specify
one of the standard I/O paths (0, 1, or 2).<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The variable in which you want to store the
data read from a file, device, or DATA line.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Notes:<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following information deals with reading sequential disk
files:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
e To read file records, you must first dimension a variable to
contain the path number of the file, then use OPEN or
CREATE to open a file in the READ or UPDATE access
mode. The command begins reading records at the first
record in the file. After it reads each item, it updates the
pointer to the next item.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Records can be of any length within a file. Make sure the
variable you use to store the records is dimensioned large
enough to store each item. If the variable storage is too
small, BASIC09 truncates the record to the maximum size
for which you dimensioned the variable. If you do not indicate a variable size with the DIM statement, the default -is
32 characters.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 separates individual data items in the input
record with ASCII null characters. You can also separate
numeric items with comma or space character delimiters.
Each input record is terminated by a carriage return
character.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000073.JPG" WIDTH="10" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-132<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000074.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000075.JPG" WIDTH="26" HEIGHT="7">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000076.JPG" WIDTH="20" HEIGHT="4">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 <U>Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following information deals with reading DATA items:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
READ accesses DATA line items sequentially. Each string
type item in a DATA line must be surrounded by quotation
marks. Items in a DATA line must be separated with
commas.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Each READ command copies an item into the specified
variable storage and updates the data pointer to the next
item, if any.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; You can independently move the pointer to a selected DATA
statement. To do this, use line numbers with the DATA
lines See the DATA and RESTORE commands for more
information on using this function of READ.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>READ #PATH,DATA<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>READ #1,RESPONSE$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>READ #INPUT,INDEXCX)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR T=1 TO 1 0<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>READ NAME$CT)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>. NEXT T<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DATA "JIM", "JOE","SUE","TINA","WENDY"<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DATA "SALL", "MICK I E", "FRED", --MARV--, --WI NNIP-<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000077.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000078.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000079.JPG" WIDTH="302" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-133<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure puts random values between 1 and 10 into a disk
file, then READS the values and uses asterisks to indicate how
many times RND selected each value.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE randlist<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM SHOW,HUCKET:STRING<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM T,PATH,SELECTC10),R:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OHUCKET="************************'I<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSELECTCT)=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "DEL RANDFILE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1000N ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCREATE #PATH,"randfile":UPDATE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OR=RNDC9)+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWRITE #PATH,R<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Random Distribution"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,O<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DREAD #PATH,NUM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSELECTCNUM)=SELECTCNUM)+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHOW=RIGHT$CHUCKET,SELECTCT))<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT USING "S6&lt;,I3&lt;,S2&lt;,S20&lt;","Number",<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>T,":",SHOW<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000080.JPG" WIDTH="25" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000081.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000082.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000083.JPG" WIDTH="302" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-134<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
REM 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Inserts remarks in a procedure<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000084.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000085.JPG" WIDTH="24" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000086.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>RE M 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>[text]<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>(* [text][*)]<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Inserts remarks inside a procedure. BASIC09
ignores these remarks; they serve only to document a procedure and its functions. Use remarks to title a procedure, show
its creation date, show the name of the programmer, or to
explain particular features and operations of a procedure.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>text<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Notes:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Comments you want to include within a
procedure<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; You can insert remarks at any point in a procedure.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The second form of REM, using parentheses and asterisks,
is compatible with Pascal programming structure.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When editing programs, you can use the exclamation character "!" in place of the keyword REM.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>0 </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09's initial compilation retains remarks, but the
PACK compile command strips them from procedures.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~21\GR000087.JPG" WIDTH="10" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REM this is a comment<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>C* Insert text between parentheses and
asterisks*)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>C* or use only one parenthesis and asterisk<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-135<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses the various forms of REM to explain its
operations.<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
PROCEDURE copydir<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OREM Use this program with the<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
00 GET sample program to 
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
00 create a file of directory)<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
00 filenames, then copy they)<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
0(* files to another directory)<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
ODIM PATH,T,COUNT:INTEGER; FILE,JOH,DIRNAME:STRING<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OOPEN #PATH,"dirfile":READ (* open the file<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
DINPUT "Name of new directory...",DIRNAME (* get the directory<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OSHELL "MAKDIR "+DIRNAME (* create a newdirectory<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OSHELL "LOAD COPY"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OWHILE NOT(EOF(#PATH)) DO<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
DREAD #PATH,FILE (* get a filename<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OJOH=FILE+" "+DIRNAME+"/"+FILE (* create the COPY syntax<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
DON ERROR GOTO 10<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OPRINT "COPY "; JOB (* display the operation<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OSHELL "COPY "+JOB ( copy the file<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
1000N ERROR<BR>
</FONT>
<FONT SIZE="1" FACE