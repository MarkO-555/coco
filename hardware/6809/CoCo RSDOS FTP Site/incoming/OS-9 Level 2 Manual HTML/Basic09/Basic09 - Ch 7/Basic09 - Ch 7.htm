<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\Basic09 - Ch 7.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Chapter 7
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="CENTER">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Expressions, Operators, and
</FONT>
</H2>
<H2 ALIGN="CENTER">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Functions
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<B>Manipulating Data<BR>
</B>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 uses expressions to manipulate data. (Expressions are
pieces of data connected by operators.)
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
An operator is a symbol or a word that signifies some action to
be performed on the specified data. Each data item is a value.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Expressions<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When an expression is evaluated, the result is a value of some
data type (real, integer, string, byte, or Boolean).
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
An expression might look like this:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>First First SecondSecond<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Value Operator Value Operator Result<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
6 + 5 =  11<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or like this:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>First First SecondSecond<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Value Operator Value Operator Result<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
"Seaside" + "Villa" = Seaside<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Villa<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When BASIC09 evaluates an expression, it copies each value onto
an 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>expression </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
stack. Functions and operators take their input
values from this stack and return their results to it. Many
expressions result in assignments, as do the examples shown.
The BASIC09 makes the resulting assignment only after it computes the entire expression. This lets you use the variable that is
being modified as one of the values in the expression, such as in
this example:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
X=X+1
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
7-1
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000000.JPG" WIDTH="339" HEIGHT="400">
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 </I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I><U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The result of an expression is always one of the five BASIC09
data types. However, you can often mix data types within an
expression and, in some cases, the result of an expression is of a
different data type than any of the values in the expression.
Such is the case if you use the 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>less-than </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
symbol (&lt;), in this
manner:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
24 &lt; 1 0 0
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The less-than operator compares two integer values. The result
of the comparison is Boolean; in this case, the value is TRUE.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Type Conversion<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Because BASIC09 performs automatic type conversion of values,
you can mix any of the three numeric data types in an expression. When you mix numeric data types, the result is always of
the same type as the value having the largest representation, in
this order: real &lt; integer &lt; byte.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can use any numeric type in an expression that produces a
real number. If you want an expression to produce a byte or integer type value, the result must be small enough to fit the
desired type.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<B>Operators<BR>
</B>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 has operators to deal with all types of data. Each operator, except NOT and negation (unary -), takes two values or
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>operands, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and performs an operation to produce a result. NOT
can accept only one value. The following table lists the operators
available and the types of data they accept and produce.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Because the same operators function on the three types of
numeric data (byte, integer, and real), these types are referred to
by the operand type "numeric."
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000001.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000002.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000003.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-2<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Expressions, Operators, and Functions / 7
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>BASIC09 Expression Operators<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Operand Result<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Operator  Function  Type </B>Type<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
- Negation numeric  numeric<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
A 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or ** Exponentiation numeric  numeric<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
* Multiplication numeric  numeric<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
/ Division numeric  numeric<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
+ Addition numeric  numeric<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
- Subtraction numeric  numeric<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
NOT Logical Negation Boolean  Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
AND Logical AND Boolean  Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OR Logical OR Boolean  Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
XOR Logical Exclusive OR Boolean Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
+ Concatenation string string<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
= Equal to all types Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&lt; &gt; or &gt; &lt; Not equal to all types Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&lt; Less than numeric, string's Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&lt; = or = &lt; Less than or equal numeric, string 
</FONT>
<FONT SIZE="1" FACE="Tahoma1" COLOR="#000000">
t 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&gt; Greater than numeric, string 
</FONT>
<FONT SIZE="1" FACE="Tahoma1" COLOR="#000000">
t 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Boolean<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>&gt; = or = &gt; Greater than or equal numeric, string </U>
</FONT>
<FONT SIZE="1" FACE="Tahoma1" COLOR="#000000">
<U>t </U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>Boolean<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
i When comparing strings, <U>1RASIC09 </U>uses the ASCII values of
characters as the basis for comparison. Therefore, 0 &lt; 1, 9 &lt; A,
<U>A&lt;B,A&lt;b,b&lt;z,andsoon.</U>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Arithmetic Operators<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Arithmetic operators </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
perform operations on numeric data. Therefore, both operands in the expression -must be numeric. The following table lists the arithmetic operators.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Negation The single dash negates a number's sign:<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>-10 is negative 10.<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Exponentiation </B>Use a caret C) or two asterisks (**) to raise<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a number to a power: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>2^3 is 8 (2 x 2 x 2).<BR>
 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Similarly, 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>2**3 is 8.<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Multiplication </B>A single asterisk causes multiplication:<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>2*3is6.<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Division A slash causes division: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>6 / 2 is 3.<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-3
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000004.JPG" WIDTH="18" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Addition  </B>The plus sign causes addition: 3 + 3 is 6.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Subtraction  </B>A dash causes subtraction: 6 - 3 is 2.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Hierarchy of Operators<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 uses the standard hierarchy of operations when calculating expressions with multiple operators. This means that
BASIC09 has an order in which it performs calculations involving more than one operator.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following BASIC09 operators are listed in order of
precedence:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
NOT - (negate)
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
AND
OR XOR
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Also, BASIC09:<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Performs operations enclosed in parentheses <B>before </B>operations not in parentheses.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Performs the leftmost operations first when two or more
operations are of equal precedence.
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can use parentheses to override this standard precedence.
Fbr example:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
2 + 1 * 3 =
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
but<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
C 2 + 1 ) * 3 = 9
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following examples show BASIC09 expressions on the left,
and the way BASIC09 evaluates them on the right. You can
enter the expressions in either form, but the decompiler generates the simpler form, shown on the left.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-4<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000005.JPG" WIDTH="112" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000006.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000007.JPG" WIDTH="8" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000008.JPG" WIDTH="274" HEIGHT="1">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Expressions, Operators, and Functions / 7<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="CENTER">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC 09</I>
</FONT>
</P>
<P ALIGN="CENTER">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Representation</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="CENTER">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Equivalent</B>
</FONT>
</P>
<P ALIGN="CENTER">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Form</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000009.JPG" WIDTH="16" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000010.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a=b+c**2/d<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a = b&gt;c AND d&gt;e OR<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
c=e<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a=(b+c+d)/e
a = b**c**d/e
a = -(b)**2<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a=b=c<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a = b + ((c**2)/d)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a = ((b&gt;c) AND (d&gt;e))
OR (c = e)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a = ((b + c) + d)/e
a = (b**(c**d))/e<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a = (-b)**2<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000011.JPG" WIDTH="218" HEIGHT="13">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Relational Operators<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Relational operators </I>make logical comparisons of any type of data
and return a result of either TRUE or FALSE. An explanation of
the relational operators follows. All relational operators have
equal precedence.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000012.JPG" WIDTH="12" HEIGHT="91">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Equal. Returns TRUE if both operands are
equal, or FALSE if they are not equal.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Less than: Returns TRUE if the first operand is
less than the second, or FALSE if is not.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Greater than: Returns TRUE if the first operand
is greater than the second, or FALSE if it is not.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&lt; &gt; or &gt; &lt; Unequal: Returns TRUE if the operands are not<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
equal or FALSE if they are.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&lt; = or = &lt; Less than or equal to: Returns TRUE if the first<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
operand is less than or equal to the second<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
operand. Otherwise, the operation returns<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FALSE.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&gt; = or<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000013.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Greater than or equal to: Returns TRUE if the<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
first operand is greater than or equal to the<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
second. Otherwise, the operation returns FALSE.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000014.JPG" WIDTH="306" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-5<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
You normally use relational operators in IF/THEN statements.
For example, if your procedure has two numeric variables, Payments and Income, you might include command lines like this:
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF PAYMENTS &gt; INCOME THEN
</UL>
<BR>
 <UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "You're Broke!"
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
When you combine arithmetic and relational operators in the
same expression, BASIC09 evaluates the arithmetic operations
first. For example:
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF X*Y/2 &lt;= 14 THEN
</UL>
<BR>
 <UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "Average Score </TT>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
i5 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"; X*Y/2
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
BASIC09 performs the arithmetic operation x*y/2, then compares
the result with the value 14.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
When you use relational operators with strings, BASIC09 compares the strings character by character. When it finds two characters that do not match, it checks to see which character has
the lower ASCII code value. The string containing the character
with the lower value comes first.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Consider this example:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "hunt" &gt; "hung"
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
BASIC09 compares each character in each string. Because the
first three characters are the same, the result of the operation is
based on the comparison of t and g. Because t (ASCII value
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
116) is "greater than" g (ASCII value = 103), the command
prints TRUE.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>String Operators<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>string operator is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
the plus sign (+ ). This symbol appends
one string to another. All operands must be strings, and the
resulting value is one string. Examine, for example, the following line, which appends three strings:
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT My friends are + Jack and +  Jill.
</UL>
<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
It prints: 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>My friends are Jack and Jill.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000015.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000016.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
7-6<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Expressions, Operators, and Functions / 7
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Logical Operators<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The logical, or Boolean, operators make logical comparisons of
Boolean values. The following table describes the results yielded
by each logical operator given the specified TRUE/FALSE values:<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
Meaning of <B>First Second
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<B>Operator Operation </B>Operand Operand <B>Result<BR>
</B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<B>NOT </B>The result is the opposite of TRUE  FALSE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
the operand. FALSE  TRUE<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
AND When both values are TRUE, TRUE TRUE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
the result is TRUE. TRUE FALSE FALSE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
Otherwise, the result is FALSE TRUE FALSE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
FALSE. FALSE FALSE FALSE<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
OR when both values are TRUE TRUE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
FALSE, the result is FALSE. TRUE FALSE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
Otherwise, the result is FALSE TRUE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
TRUE. FALSE FALSE FALSE<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
XOR when only one of the values TRUE TRUE FALSE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
is TRUE, the result is TRUE FALSE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
TRUE. Otherwise the result FALSE TRUE TRUE<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
is FALSE. FALSE FALSE FALSE<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Use logical operators in IF/THEN statements such as:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF PAYMENTS &lt; INCOME AND INCOME+SAVINGS &gt;
PAYMENTS THEN
</UL>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "You'll have to use your savings to get
out of this mess."
</UL>
</TT>
</FONT>
</P>
<UL>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF
</UL>
<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
Functions<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Functions </I>are operation sequences the system performs on data.
In a statement, BASIC09 performs functions first. Chapter 11,
"Command Reference," describes the following functions.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000017.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-7<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions returning results of type real<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SIN<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>COs<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TAN<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>ASN<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>ACS<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>ATN<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LOG<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>EXP<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric sine of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric cosine of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric tangent of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric arcsine of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric arccosine of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric arctangent of a<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the natural logarithm (base e) of a<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LOG10 </B>Calculates the logarithm (base 10) of a number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates a (2.71828183) raised to the specified<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
positive power.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FLOAT </B>Converts byte or integer type numbers to real<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
numbers.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the largest whole number less than or<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
equal to the specified number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PI Represents the constant 3.14159265.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the square root of a positive number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the square root of a positive number. Its<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
function is identical to SQR.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Returns a random number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>INT<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SQR<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SQRT<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>RND<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000018.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-8<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000019.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000020.JPG" WIDTH="20" HEIGHT="4">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Expressions, Operators, and Functions l 7
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions returning results of any numeric type<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The resulting type depends on the input type.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ABS Calculates the absolute value of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
SGN Returns a value to indicate the sign of the specified<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number (-1 if the number is less than 0, 0 if the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number is 0, or 1 if the number is greater than 0).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
SQ Calculates the square of a number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
VAL Converts a string to a numeric value.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions returning results of type integer or type byte<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FIX </B>Rounds a real number and converts it to an<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
integer.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
MOD Calculates the modulus (remainder) of two<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
numbers.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000021.JPG" WIDTH="16" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000022.JPG" WIDTH="19" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>ADDR </B>Returns the absolute memory address of a<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
variable, an array, or a structure.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SIZE </B>Returns (in bytes) the storage size of a variable,<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
an array, or a structure.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ERR Returns the error code of the most recent error.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>PEEK </B>Returns the byte value at a specified memory<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
address.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
POS Returns the current character position of the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
print buffer.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ASC Returns the numeric value (ASCII code) of a<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string character.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LEN Returns the length of a string. _<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SUBSTR </B>Returns the starting position of the specified<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
substring within a string, or returns 0 if it<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cannot find the substring.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000023.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-9<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions performing bit-by-bit logical operations on integer or byte data and returning integer results. Do not confuse these functions with Boolean type operators.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LAND </B>Calculates the logical AND of two values.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LOR Calculates the logical OR of two values.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LXOR </B>Calculates the logical EXCLUSIVE OR of two<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
values.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LNOT </B>Calculates the logical NOT of a value.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions returning a result of type string<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>CHR$ </B>Returns the character having a specified ASCII<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>DATE$ Returns </B>the system's current date and time.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LEFT$ </B>Returns the specified number of characters<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
beginning at the leftmost character of the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
specified string.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>RIGHT$ Returns </B>the specified number of characters<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
beginning at the rightmost character of the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
specified string and counting backward.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
MID$ Returns the specified number of characters<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
starting at the specified position in a string.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
STR$ Converts numeric type data to string type.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TRIM$ </B>Removes trailing spaces from the specified<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Functions returning Boolean values<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TRUE </B>Always returns TRUE.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FALSE </B>Always returns FALSE.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
EOF Tests for the end of a disk file. Returns TRUE<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
when the end of the file occurs.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
7-10<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000024.JPG" WIDTH="26" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC0~8\GR000025.JPG" WIDTH="20" HEIGHT="5">
</FONT>
</BODY>
</HTML>
