<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\Basic09 - Ch 11 Pg 177-188.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
TYPE 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Defines a data type<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000000.JPG" WIDTH="24" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000001.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>TYPE name = typedeclar [; typedeclar[;...]]<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Defines new data types (complex data structures).
New data types are 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>vectors </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(one-dimensional arrays) of previously defined types. Structures created by TYPE differ from
arrays in that they can consist of elements of different types,
and BASIC09 accesses elements by field names rather than by
an indexed position.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>name </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The name you select for the new data type.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>typedecrar </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
One or more type declarations, which can con<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sist of field names, type declarations, and sub<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
scripts. Separate different types or different<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
lengths of string declarations with semicolons.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Notes:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Complex data structures allow you to create data types that
are appropriate for a specific task. You can organize, read,
and write associated data naturally. Also, BASIC09 establishes and defines element positions at compilation time.
This saves time and overhead at run time because
BASIC09 can access the elements of a data structure faster
than it can access the elements of an array.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When you define new data structures using TYPE, you can
can include any of the five existing data types (string, real,
integer, byte, and Boolean), or you can include data structure types that you previously defined with TYPE. This
means that your structures can be simple or very complex,
such as non-rectangular data lists or trees.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
TYPE does not create storage. You create storage using the
DIM statement, after using TYPE.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
To access elements of a data structure, use the field name
as well as any appropriate element index.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000002.JPG" WIDTH="21" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>11-177<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000003.JPG" WIDTH="25" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>0 </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
For more information on creating and using complex data
types, see "Complex Data Types" in Chapter 6.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Examples:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>TYPE LIBRARY=TITLE,AUTHOR,PUBLISHER:STRINGL25J;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REFERENCE: INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM BOOKC500):LIBRARY<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>TYPE PARTS=ITEM,LOCATION:STRINGL201; CAT:REAL;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>QUANTITY;INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM INVENTORYC1000):PARTS<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure builds an array to contain a book reference list,
including the book title, the author's name, the publisher, and a
reference number. It does so by using TYPE to create a special
data structure to store all the information for each book.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE books<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pTYPE LIBRARY=TITLE,AUTHOR,PUBLISHER:STRINGL30l;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REFERENCE: INTEGER<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM BOOKSC100):LIBRARY<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT = 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pL00P<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT=T+ 1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT "BOOK TITLE...",BT$
OBOOKSCT).TITLE=BT$
DEXITIF BOOKSCT).TITLE="" THEN
pGOTO 1 0 0
DENDEXIT<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Book Author...
OBOOKSCT).AUTHOR=BA$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Book Publisher...",BP$
OBOOKSCT).PUBLISHER=BP$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Reference Number...
DENDLOOP
1 000FOR X=1 TO T-1<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT BOOKSCX).TITLE;<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
go ;<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OHOOKSCX).PUHLISHER; "<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT X<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>[]END<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>",HA$<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000004.JPG" WIDTH="8" HEIGHT="5">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>,HOOKSCT).REFERENCE<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"; BOOKSCX).AUTHOR;<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"&middot; HOOKSCX).REFERENCE<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000005.JPG" WIDTH="306" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-178<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000006.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000007.JPG" WIDTH="22" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000008.JPG" WIDTH="56" HEIGHT="7">
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
UNTIL 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Terminates a REPEAT loop on specified
condition
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax:  REPEAT<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>procedure lines
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
UNTIL expression
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Ends a REPEAT loop. REPEAT establishes a loop
that executes the encompassed procedure lines until the
result of the expression following UNTIL is true. Because the
loop is tested at the bottom, the lines within the loop are executed at least once.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>procedures </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Statements you want to execute in the loop.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>lines<BR>
 </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>expression A </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Boolean expression (the result must be<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
either True or False).<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REPEAT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>COUNT = COUNT+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>UNTIL COUNT &gt; 1 0 0<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT X,Y
REPEAT
X = X-1
Y = Y-1
UNTIL X&lt;1 OR Y&lt;0<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
See REPEAT for more information.<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-179
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000009.JPG" WIDTH="18" HEIGHT="5">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 <U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
USING 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Formats PRINT output<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Syntax:  PRINT </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>[#pa th] USING [format,] da to[;data...]<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Prints data using a format you specify. This statement is especially useful for printing report headings,
accounting reports, checks, or any document requiring a specific format.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
USING is actually an extension of the PRINT statement. The
same rules that apply to the PRINT statement also apply to
the PRINT USING statement (see PRINT).<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
path The number to an opened device or file. If you<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
do not specify path the default is #1, the video<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
screen (standard output device). To print to<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
another device or file, first OPEN a path to<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
that file or device (see OPEN).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
format An expression specifying the arrangement of<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the displayed data.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
data Any numeric or string constant or variable.<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Always enclose string constants within quota<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tion marks. Separate all data items with<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
semicolons or commas.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
See PRINT USING for more information.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000010.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000011.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000012.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>11-180<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
VAL 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Converts string data to numeric data<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000013.JPG" WIDTH="19" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000014.JPG" WIDTH="10" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000015.JPG" WIDTH="19" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: vAL(string)<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Converts string-type data to numeric-type. VAL is
the inverse of the STR$ function. It returns the real value
represented by the characters in a string. If any character in
the specified string is not numeric, 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
returns an error.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string An ASCII string containing one or more of the
following characters: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0123456789. + $-.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
PRINT VAL(123)<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
A$="44.66"<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
PRINT VALCA$)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calculates an exponential value, then adds the
necessary number of zeroes to convert it to standard notation. It
uses STR$ to convert the original number to a string, then uses
VAL to convert the exponent into a value to determine the correct decimal place.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
PROCEDURE bignum<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
pDIM C,PLACES,H,SIGN:STRING; EX,COUNT,NEWCOUNT,<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
DECIMAL: INTEGER<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
ODIM NEW,ZERO,NEWEST:STRINGL1001
pCOUNT=-1
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
pZERO="000000000000000000000000000000000000"
ANEW="" NEWEST=""
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
C]INPUT "What number do you want to raise to the
power of 14?...",NUM
</FONT>
</P>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
DA=NUM^14<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
DH=STR$CA)<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
DEX=SUHSTRC"E",H)<BR>
</FONT>
<FONT SIZE="1" FACE="Verdana" COLOR="#000000">
pS IGN=MID$CH, EX+1 , 1<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000016.JPG" WIDTH="35" HEIGHT="8">
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPLACES=RIGHT$CH,LENCH)-EX-1)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=1 TO LENCH)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OC=MID$CH,T,1 )<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF C="." THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODECIMAL=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OGOTO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND I F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODECIMAL=DECIMAL+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DI F C="E" THEN 1 00<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEW=NEW+C<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1 00NEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>100ONEWCOUNT=VALCPLACES)-DECIMAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEW=NEW+LEFT$CZERO,NEWCOUNT+1)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=LENCNEW) TO 1 STEP -1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCOUNT=COUNT+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEWEST=MID$CNEW,T,1)+NEWEST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF MODCCOUNT,3)=2 AND T&gt;1 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEWEST=","+NEWEST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND I F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT NUM; " to the power of 14 = "; A<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "_ "; NEWEST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000017.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000018.JPG" WIDTH="22" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000019.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-182<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
WHILE/DO/ENDWHILE 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Establishes<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>a loop
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: WHILE expression DO<BR>
<UL>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>procedure lines
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>ENDWHILE
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Establishes a loop that executes the encompassed
procedure lines while the result of the expression following
WHILE is true. Because the loop is tested at the top, the
lines within the loop are never executed unless the expression
is true.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>expression </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
A Boolean expression (has a result of True or<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
False).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>procedure </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Program lines to execute if the expression is<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>lines </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
true.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
WHILE COUNT &lt; 12 DO
COUNT = COUNT+1
ENDWHILE<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You must create a file of directory names using the GET sample
program before you can use the following procedure. Copyutil
uses the filenames created by the GET sample program to copy a
directoty's files to another directory you specify. You must specify a directory name that does not exist. Copyutil uses a
WHILE/DO/ENDWHILE loop to continue copying until BASIC09
reaches the end of the file.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000020.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>11-183<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE copyutil<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH,T,COUNT:INTEGER; FILE,JOH,DIRNAME:STRING<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OOPEN #PATH,"dirfile":READ<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pINPUT "Name of new directory...",DIRNAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "MAKDIR "+DIRNAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pSHELL "LOAD COPY"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>AWHILE NOTCEOFC*PATH)) DO<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DREAD #PATH,FILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pJOH=FILE+" "+DIRNAME+"/"+FILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "COPY "; JOB<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "COPY "+JOB<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>100ON ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDWHILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DEN D<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000021.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000022.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000023.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-184<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
WRITE 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Writes data to a sequential file or
device
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Syntax: WRITE [#Path,] data
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Writes an ASCII record to a sequential file or to a
device.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>path A </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
variable containing the path number of the<BR>
  
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
file or device to which you want to send data.<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Path </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
can be one of the the standard I/O paths<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>(0, 1, 2).<BR>
 </I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
data The data you want to send over the specified<BR>
  
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
path.<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Notes:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The following information deals with writing sequential disk
files:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>0 </TT>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
To write file records, you must first dimension a variable to<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
contain the path number of the file, then use OPEN or<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
CREATE to open a file in the WRITE or UPDATE access<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
mode.<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Records can be of any length within a file.<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Individual data items in the input record are separated by
ASCII null characters. You can also separate numeric items
with comma or space character delimiters. Each input
record is terminated by a carriage return character.
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WRITE #PATH,DATA$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WRITE #1,RESPONSE$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WRITE #OUTPUT,INDEXCX)<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-185
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000024.JPG" WIDTH="22" HEIGHT="9">
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPEN #PATH,"namefile":WRITE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR T=1 TO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>READ NAME$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WRITE #PATH, NAME$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>NEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>CLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DATA "JIM", "JOE","SUE","TINA","WENDY"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DATA "SALL", "MICKIE","FRED","MARV","WINNIE"<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure selects 100 random values between 1 and 10. It
uses WRITE to place the values into a disk file. Next, it reads
the values from the file and uses asterisks to indicate how many
times RND selected each value.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE randlist<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM SHOW,HUCKET:STRING<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM T,PATH,SELECTC10),R:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OHUCKET="************************'I<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pSELECTCT)=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONE XT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pON ERROR GOTO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pSHELL "DEL RANDFILE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>100 ON ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pCREATE *PATH,"randfile":UPDATE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 1 0 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pR=RNDC9)+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pWRITE *PATH,R<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pNEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "Random Distribution"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=1 TO 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pREAD #PATH,NUM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSELECTCNUM)=SELECTCNUM)+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T _<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHOW=RIGHT$CHUCKET,SELECTCT))<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT USING "S6&lt;,I3&lt;,S2&lt;,S20&lt;","Number",T,":".<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHOW<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-186<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000025.JPG" WIDTH="133" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000026.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000027.JPG" WIDTH="22" HEIGHT="5">
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
XOR 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Returns the exclusive OR of two values
Syntax: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>operandl XOR operand2<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="CENTER">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>Performs the logical exclusive OR operation on two
</FONT>
</P>
<P ALIGN="CENTER">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or more values, returning a value of either TRUE or FALSE.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>operandl </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Boolean values or expressions (that result in<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>operand2 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
values of True or False).<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT 02 XOR H&gt;3<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT A$="YES" XOR H$="YES"<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000028.JPG" WIDTH="18" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
A<BR>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure lets two people type numbers until one of them
guesses the number that the computer picks. It uses XOR to
determine that one of the numbers typed is the correct number,
but not both.
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE draw5traw
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM NUM1,NUM2,R:INTEGER; A:BOOLEAN
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "This program will help you pick"
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "between two people. Choose who will be"
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Person 1 and who will be Person 2."
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Then, enter numbers between 1 and 10"
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "when requested."
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OR=RND(1 0
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1 00I NPUT "Per Son 1 , type a number and pre55
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENTER...",NUM1
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Person 2, type a number and pre55
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENTER...",NUM2
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DA=NUM1 =R XOR NUM2=R
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>EIF A=FALSE THEN
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "You'll have to try again..."
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000029.JPG" WIDTH="306" HEIGHT="3">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-187<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pGOTO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDI F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pI F NUM1 =R THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "You win, Person 1"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>EIEND I F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF NUM2=R THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "You win, Person 2"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "The Number was..."; R<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OEND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000030.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000031.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~23\GR000032.JPG" WIDTH="302" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-188<BR>
</FONT>
</BODY>
</HTML>
