<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-76.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
FALSE 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Assi Boolean value<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax:  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
variable =FALSE<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FALSE is a Boolean function that always returns
False. You can use FALSE and TRUE to assign values to Boolean variables.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM TEST:BOOLEAN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>TEST-FALSE<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The procedure uses a Boolean variable to store True or False,
depending on whether you answer some questions correctly or
incorrectly.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE quiz
ODIM REPLY,VALUE:BOOLEAN; ANSWER:STRINGf1J;
QUESTION:STRINGL801
OFOR T-1 TO S
OREAD QUESTION,VALUE
OPRINT QUESTION
OPRINT "CT) = TRUE0000000CF) = FALSE"
OPRINT "Select T or F:00";
OGET x1,ANSWER
OIF ANSWER="T" THEN
OREPLY=TRUE
OELSE
OREPLY=FALSE
OEND I F
OIF REPLY=VALUE THEN
OPRINT \ PRINT "That's Correct ...Good Show!"
OELSE
OPRINT "Sorry, you're wrong ...Better Luck next
time."
OEND I F
OPRINT \ PRINT \ PRINT<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-51
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000025.JPG" WIDTH="24" HEIGHT="9">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000052.JPG" WIDTH="41" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>i 1.s2<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T
ODATA "In computer talk, CPU stands for Central
Packaging Unit.", FALSE
ODATA "The actual value of 64K is 6SS36
bytes.",TRUE
ODATA "The bits in a byte are normally numbered 0
through 7?",TRUE
ODATA "BASIC09 has four data types.",FALSE
ODATA "The LAND function is a Boolean type
operator.",FALSE
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-762.gif" WIDTH="296" HEIGHT="2">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-763.gif" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-764.gif" WIDTH="26" HEIGHT="7">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-765.gif" WIDTH="22" HEIGHT="6">
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
FIX 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Round a real number<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-766.gif" WIDTH="17" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: FIX(value)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Rounds a real number to the nearest whole number
and converts it to an integer-type number. Fix performs a
function that is the opposite of the FLOAT function.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value  Any real number.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>A=RND(1 0 )<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(A)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure displays the FIXed values of seven constants.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE printfix<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(1.2)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(1.3)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(1.5)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT FIX(1.8)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(99.566666)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(50.1 )<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPR I NT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX (.7654321 )<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(-12.44)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="2" FACE="Verdana1" COLOR="#000000">
FIX(-9.99)<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-767.gif" WIDTH="24" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-768.gif" WIDTH="16" HEIGHT="2">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-769.gif" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-53<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
FLOAT 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Convert from integer or byte to real<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: FLOAT(value)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Converts an integer- or byte-type value to real type.
FLOAT performs a function that is the opposite of the FIX
function.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value  An integer- or byte-type number.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM TEST: INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>TEST=44<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT FLOAT(TEST)/3<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses FLOAT to produce a real number result of
an inch to centimeter conversion.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE convert<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM T: INTEGER; MEASURE:STRINGL11J<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DI F T=1 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OMEASURE="centimeter "<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OELSE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pMEASURE="centimeters"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDIF<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT T; " "; MEASURE;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>" inches."<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7610.gif" WIDTH="8" HEIGHT="5">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"; FLOATCT)*.3937;<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-54<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000053.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000054.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000055.JPG" WIDTH="20" HEIGHT="4">
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Command Reference l 11<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
FOR/NEXT/STEP 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Establi<U>sh a loop<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000056.JPG" WIDTH="127" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000057.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Syntax:
FOR <B><I>variable = init val TO end val </I></B>[STEP <B><I>value]
[procedure statements]
</I></B>NEXT <B><I>variable<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Establishes a procedure loop that lets BASIC09 execute one or more procedure statements a specified number of
times. The variables you use can be either integer or real type
and can be negative, positive, or both. Loops using integer
values execute faster than loops using real values.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>BASIC09 executes the lines following the FOR statement until
it encounters a NEXT statement. Then it either increases or
decreases the initial value by one (the default) or by the value</B>
</FONT>
</P>
 <FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>given STEP.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Variable </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Any legal numeric variable name.<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>init val </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Any numeric constant or variable.<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>end Ual </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Any numeric constant or variable.<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Value </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Any numeric constant or variable.<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>procedure </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Procedure lines you want to be executed<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>statements </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>within the loop.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Notes:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>If you provide an initial value that is greater than the final
value, BASIC09 skips the program loop entirely unless you
specify a negative STEP value. Specifying a negative value
for STEP causes the loop to decrement from the initial
value to the end value.
</UL>
</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>11-55
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000058.JPG" WIDTH="24" HEIGHT="9">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 <U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When execution reaches the NEXT statement in a positive
stepping loop, and the step value is less than or equal to
the end value, BASIC09 branches back to the line after
FOR and repeats the process. When the step value is
greater than the end value, BASIC 09 transfers execution to
the statement following the NEXT statement.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>0 </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When execution reaches the NEXT statement in a negative
stepping loop, and the step value is greater than or equal
to the end value, BASIC09 branches back to the line after
FOR and repeats the process. When the step value is less
than the end value, execution continues following the NEXT
statement.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR COUNTER = 1 to 100 STEP .5
PRINT COUNTER
NEXT COUNTER<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR X = 1 0 TO 1 STEP -1
PRINT X
NEXT X<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR TEST = A TO B STEP RATE
PRINT TEST
NEXT TEST<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses two <I>nested </I>FOR/NEXT loops to produce a
multiplication table.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE multable
pPRINT USING "S45-",--MULTIPLICATION TABLE"
OPR I NT
pDIM I,J:INTEGER
OFOR I=1 TO 9
pFOR J=1 TO 9
DIF J&gt;1 THEN
OPRINT I*J; TABCS*J);
CIELSE PRINT I * J ; "~ ";
DENDIF
ONEXT J
OIF I=1 THEN
OPRINT ""<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-56<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7617.gif" WIDTH="12" HEIGHT="7">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000059.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000060.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000061.JPG" WIDTH="20" HEIGHT="5">
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
pPRINT '---_____________________________________<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
pEND I F<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
OPRINT<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
ONEXT I<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
REND<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
11-57<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
GET 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Read a direct-access file record
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>GET #path,varname
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Reads a fixed-size binary data record from a file or
device. Use GET to retrieve data from random access files.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Although you usually use GET with files, you can also use it
to receive data for any outputting device, such as a keyboard
or another computer. By dimensioning a string variable to the
length of input you want, you can use GET to read a specified
number of keystrokes, then continue program execution without requiring 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENTER </TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to be pressed.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Fbr information about storing data in random access files, see
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
' Chapter 8, "Disk Files." Also see PUT, SEEK, and SIZE.<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>path A </I>variable name you choose in which BASIC09
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
stores the number of the path it opens to the
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device you specify or one of the standard I/O
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
paths (0, 1, or 2).
</UL>
</UL>
<BR>
 <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>varname </I>The variable in which you want to store the
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
data read by the GET statement.
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:
</UL>
</UL>
<BR>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>GET #PATH,DATA$
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>GET #1,RESPONSE$
</UL>
</UL>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>GET #INPUT,INDEXCX)
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure directs a directory listing to a file named Dirfile.
GET then reads the file, one character at a time in order to
determine which characters are valid filename character. The
procedure creates a file containing all the filenames in the
directory.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-58
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000062.JPG" WIDTH="26" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000063.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000064.JPG" WIDTH="32" HEIGHT="1">
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000065.JPG" WIDTH="16" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000066.JPG" WIDTH="10" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7626.gif" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000068.JPG" WIDTH="24" HEIGHT="7">
<BR>
</FONT>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
PROCEDURE filenames
pDIM DIRECTORY,FILENAME:STRING; CHARACTER:STRINGt1J; FILES(125):STRINGf15J;
PATH,COUNT,T:INTEGER
pCOUNT=8
pFILENAME=""
pFOR T=1 TO 125 0 initialize array elements to null.
pFILES(T)=""
pNEXT T
pINPUT "Pathlist of directory to read...",DIRECTORY (* dir to copy.
pON ERROR GOTO 18
pDELETE "dirfile" 0 if dirfile already exists, delete it.
18pON ERROR
pSHELL "DIR "+DIRECTORY+' ) dirfile" 0 copy directory into file.
pOPEN xPATH,"dirfile":READ (* open the file for reading.
pREPEAT
OREM Get characters from the file until the first carriage return - the
beginning of the first filename.
pGET xPATH,CHARACTER 0 get characters from the file.
pUNTII CHARACTER=CHRS(13)
OREM
20OLOOP
pEXITIF EOF(xPATH) THEN
pGOTO 288 0 quit when end of file.
pENDEXIT
OREM get a character from the file until it finds a. non-valid filename
character.
pGET xPATH,CHARACTER
OREM
pEXITIF CHARACTER&lt;=" " OR CHARACTER&gt;"z" THEN
pGOTO 10 8
pENDEXIT
pFILENAME=FILENAME+CHARACTER 0 build the filename.
pENDL00P
188pWHILE NOT(EOF(xPATH)) DO
pGET #PATH,CHARACTER 0 check for non-valid filename characters.
pEXITIF CHARACTER" " AND CHARACTERS="z" THEN (* check if valid char,
pCOUNT=COUNT+1
pFILES(COUNT)=FILENAME 0 store filename in array.
pPRINT FILENAME, 0 display the extracted filename.
pFILENAME="" 0 set variable to NULL.
pFILENAME=FILENAME+CHARACTER 0 last character begins new filename.
pGOTO 28 (* go get the rest of filename.
pENDEXIT
pENDWHILE
2000CLOSE #PATH<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000069.JPG" WIDTH="304" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
<B>11-59<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I><U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
DELETE "dirfile" (# names are all in array so delete file.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pCREATE OPATH,"dirfile":WRITE (* create the file again.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OFOR T-1 TO COUNT<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pWRITE OPATH,FILES(T) (* fill the file with individual filenames.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
ONEXT T<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pCLOSE #PATH<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pPR I NT<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pPRINT "0000000*The directory has "; COUNT; " entries."<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OPRINTO"ppp0ppppThey are now stored in a file named Dirf ile."<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pEND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000070.JPG" WIDTH="66" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000071.JPG" WIDTH="26" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000072.JPG" WIDTH="22" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000073.JPG" WIDTH="22" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000074.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
11-60<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command <U>Reference </U>11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
GOSUB/RETURN
</FONT>
</H2>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Jump to subroutine/ Return from subroutine<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>GOSUB linenumber<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Branches program execution to the specified line
number.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 lets you write programs with line numbers or without. You can also mix numbered and un-numbered lines
within a single procedure. This means that, to use GOSUB,
you need to number only the first line of the subroutine to
which you want to branch.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Every subroutine you access with GOSUB must contain a
RETURN statement. You can call a subroutine in this manner as many times as you want. When BASIC09 encounters
the RETURN, it transfers program execution to the line following the GOSUB statement.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can precede GOSUB with a test statement, such as IF or
WHEN, that makes branching conditional.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can nest GOSUB statements to any depth, depending on
your computer's free memory.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>linenumber </I>The number of the line where procedure exe<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cution is to continue.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
GOSUH 1 0 0<BR>
   
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
11-61<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000075.JPG" WIDTH="18" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000076.JPG" WIDTH="24" HEIGHT="9">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 <U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following procedure asks you for two numbers and an operator. It determines the line to jump to by the position of the operator in a table. GOSUB sends the procedure to execute the
proper routine. RETURN sends the execution back to the main
routine. To quit, enter a negative value.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
PROCEDURE calc<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
ODIM NUM1,NUM2:REAL; OP:STRINGL1J; A:INTEGER
1 EI NPUT "NUMBER 1 "; NUM1
</FONT>
</P>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
DIF NUM1 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
c0 
</FONT>
<FONT SIZE="2" FACE="Arial Narrow1" COLOR="#000000">
THEN<BR>
</FONT>
<FONT SIZE="2" FACE="Arial Narrow1" COLOR="#000000">
pEND "THAT'S ALL"<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
pINPUT "NUMBER 2 ";NUM2
OINPUT "OPERATOR ";OP
0A=SUBSTRCOP,"+-*/"")
00N A GOSUB 10,20,30,40,50
pGOTO 1
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
1 00PR I NT NUM1 +NUM2 \ RETURN
200PRINT NUM1 -NUM2 \ RETURN
300PRINT NUM1 *NUM2 \ RETURN
400PRINT NUM1 /NUM2 \ RETURN
500PR I NT NUM1 NUM2 \ RETURN
REND
</FONT>
</P>
<FONT SIZE="2" FACE="Arial Narrow" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7636.gif" WIDTH="25" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7637.gif" WIDTH="20" HEIGHT="6">
<BR>
</FONT>
<FONT SIZE="1" FACE="Garamond" COLOR="#000000">
11-11<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7638.gif" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-62<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7639.gif" WIDTH="17" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7640.gif" WIDTH="24" HEIGHT="9">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
IF/THEN/ELSE/ENDIF
</FONT>
</H2>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Vest a Boolean expression<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>IF condition THEN linenumber<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>[ELSE<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>secondary action<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>ENDIF]<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>IF condition THEN
action
[ELSE
secondary action]
ENDIF<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Tests a Boolean expression and executes 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>action if </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
the
expression is true. Optionally, the statements execute a secondary action if the expression is not true. Each IF statement
must be accompanied by THEN. If 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>action is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
a line number,
you can omit the ENDIF statement. For instance, both of the
following statements operate in the same manner:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
IF T=5 THEN 10<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
IF T=5 THEN<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
GOTO 1 0<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
ENDIF<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>condition<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
A Boolean expression (produces True or False).<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>linenumber </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
A line to which the procedure is to transfer<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
execution if 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>condition is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
true.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>action<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>secondary<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>action<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
One or more procedure statements to be executed if 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>condition is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
true.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
One or more procedure statements to execute
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>if condition is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
false.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7641.gif" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>11-63<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF AFB THEN 100<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF A&lt;B THEN 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ELSE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>A=A-1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF TEST=TRUE THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT </TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT><B>"The test i5 a 5ucce55..."<BR>
</B></TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>I F A &lt; B THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "A </TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT><B>i5 1e55 than </B></TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>B"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>.ELSE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "B </TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT><B>i5 1e55 than </B></TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>A"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDIF<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following procedure is a purge procedure. Use it only with
the GET Sample Program to delete one or more files from your
current directory. .
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Filenames procedure (see GET) stores the current directory's-filenames in Dirfile. This procedure reads Dirfile, displays
all the filenames, then asks you for a wildcard. Type in characters that identify a group of files you want to delete. The program deletes all files that contain, in the same order and case,
the characters you type.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
For instance, if you have four files named Test, File 1, Filet, and
File3, and you type a wildcard of "File," the procedure deletes
Filel, Filet, and File3, but does not delete Test. Delete all of the
files in a directory by typing "*" as the wildcard.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Use this program carefully. </B>Be sure you are in the right
directory and that the wildcard characters you type are not contained in filenames other than the ones you want to delete. You
might want to add a prompt to the procedure that lets you confirm each deletion before it happens.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-64<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\Basic09 - Ch 11 Pg 51-7642.gif" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000077.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000078.JPG" WIDTH="20" HEIGHT="22">
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000079.JPG" WIDTH="18" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000080.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000081.JPG" WIDTH="24" HEIGHT="7">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE purge
ODIM PATH: INTEGER
pDIM NAMEC100):STRING
ODIM WILDCARD:STRING
OX=0
DOPEN #PATH,"dirfile":READ
OWH I LE NOTC EOF C #PATH)) DO
pX=X+1
DREAD *PATH,NAMECX)
OENDWHILE
pFOR T=1 TO X
OPRINT NAMECT),
ONEXT T
pINPUT "Wildcard Character5...",WILDCARD
OFOR T=1 TO X
pON ERROR GOTO 100
OIF SUHSTRCWILDCARD,NAMECT))&gt;0 OR WILDCARD ="*"
THEN<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "DELETING "; NAMECT);
ODELETE NAMECT)
OENDI F
1 0ONEXT T
OEND<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>100[]PRINT "* * * ERROR * * * "; NAMECT)
be deleted..continuing."
OGOTO 1 0<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000082.JPG" WIDTH="54" HEIGHT="3">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>" cannot<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-65<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
INKEY 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Read a keypress<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000083.JPG" WIDTH="20" HEIGHT="6">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax:  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
RUN INKEY(string)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Reads a keypress, and stores the character of the
key in the specified string variable.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string is a string variable into which INKEY stores
the character you press.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM CHAR:STRINGL1J<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>CHAR=""<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WHILE CHAR="" DO<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RUN INKEY(CHAR)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ENDWHILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT ASC(CHAR)<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000084.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000085.JPG" WIDTH="302" HEIGHT="25">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-66<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC 09 Command Reference l Il<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE Calculate
OD I M CHAR : STR I NG L 1 J
ODIM LOOKUP:STRINGf71
ODIM FIRST,SECOND:REAL
ODIM FLAG:INTEGER
OLOOKUP="+-*/"&lt;&gt;"
1 FLAG=0 \CHAR=""
OPRINT "Enter the first number to evaluate.
DINPUT FIRST
OIF FIRST=0 THEN
OGOTO 1 0 0
REND I F<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Enter the Second number to evaluate...";
DINPUT SECOND
OPRINT "Pre55 the key of the operator you want to
use..."<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
" + - * / w &lt; &gt;
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWHILE CHAR="" DO
ORUN INKEYCCHAR)
DENDWHILE
OPRINT<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFLAG=SUHSTRCCHAR,LOOKUP)
DON FLAG GOTO 10,20,30,40,50,60,70
10 PRINT FIRST+SECOND \ GOTO 1
20 PRINT FIRST-SECOND \ GOTO 1
30 PRINT FIRST*SECOND \ GOTO 1
40 PRINT FIRST/SECOND \ GOTO 1
50 PRINT FIRST ^SECOND \ GOTO 1
60 PRINT FIRST&lt;SECOND \ GOTO 1
70 PRINT FIRST&gt;SECOND \ GOTO 1
100 PRINT "Procedure Terminated Due to 0
Input..."
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000086.JPG" WIDTH="25" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000087.JPG" WIDTH="33" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000088.JPG" WIDTH="22" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000089.JPG" WIDTH="24" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000090.JPG" WIDTH="22" HEIGHT="8">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT><B>11-67<BR>
</B></TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
INPUT 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Get data from a device path<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000091.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Syntax:  INPUT [#path,] [promp4] variable [,variable...]<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
INPUT accepts input from the specified path. (The
default is the keyboard.) When a procedure encounters
INPUT, it displays a question mark and awaits data from the
specified path. If you provide a string type prompt for INPUT,
it displays the text of the prompt, rather than a question
mark.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
INPUT stores the data it collects in the variable you specify.
The type of the receiving variable must match the type of
data received.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Because INPUT sends data (the question mark prompt or the
user-specified string prompt), it is really both an input and an
output statement. This means that, if you use a path other
than the standard input path, you should not use the
UPDATE mode. If you do, the prompts produced by INPUT
write to the file specified by the path number.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
If the data received does not match the type of data INPUT
expects, it displays the message:
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
**INPUT ERROR - RETYPE**
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
followed by a new prompt. You must then enter the entire
input line, of the correct type, to satisfy INPUT. For more
information, see GET.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000092.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000093.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000094.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
11-68<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference / </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I><U>11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>Parameters:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>path </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Either a variable containing the path number,<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or the absolute path number to the file or<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device from which you want to receive input. If<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
you want to receive input from the keyboard,<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
do not include a path number.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>prompt </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Text you type as a message to be displayed<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
when BASIC09 executes an INPUT statement.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>variable </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The variable name in which you want to store<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the data received by INPUT. The type of vari<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
able must match the type of input.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT NUMBER,NAME$,LOCATION<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT #PATH,X,Y,Z<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT "What is your selection: ";CHOICE<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000095.JPG" WIDTH="20" HEIGHT="3">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>'~ INPUT #HOST,"What's your ID number? ",IDNUM<BR>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calculates the day of the week for a specified
date. It asks you for the date using the INPUT command.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE weekday
ODIM X,Y,D,M,CALC:INTEGER; DAY,MONTH:STRINGL2J;
YEAR:STRINGL4J; WEEKDAY C7):STRINGL9J
EDIM ANUM,BNUM,CNUM,DNUM,ENUM,FNUM,GNUM,HNUM,
INUM:INTEGER
OPRINT USING "S80 ","Day of the Week Program","For
any year after 1 752"
OPRINT
OPRINT "Enter day (e.g. 08): "; \ INPUT DAY
SPRINT " Enter month (e.g. 12): "; \ INPUT MONTH
OPRINT " Enter year (e.g. 1986): "; \ INPUT YEAR
DY=VALCYEAR) \M=VALCMONTH) \D=VALCDAY)
OFOR X=1 TO 7
EREAD WEEKDAYCX)
ONEXT X
DANUM= I NTC .6+1 /M)
OBNUM=Y-ANUM<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-69
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCNUM=M+12*ANUM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODNUM=HNUM/ 1 0 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENUM=INTCDNUM/4)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFNUM=INTCDNUM)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pGNUM-INTCS*HNUM/4)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OHNUM- I NTC 1 3* C CNUM+ 1) / S )<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINUM=HNUM+GNUM-FNUM+ENUM+D-1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINUM-INUM-7*INTCINUM/7)+1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPR I NT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "The day of the week on "; M; "/"; D;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"/"; Y; " i5</TT>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
..."; 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>WEEKDAY CINUM)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODATA "Sunday","Monday","Tuesday","Wednesday",<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>"Thursday","Friday","Saturday"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000096.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000097.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000098.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-?0<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000099.JPG" WIDTH="387" HEIGHT="1">
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Command Reference l Il<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
INT 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Convert real number to whole <U>number
</U>Syntax: INT( 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Converts a real number to a whole number by truncating any fractional part of the real number.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value  Any negative or positive real number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Examples:<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT INT(77.89)
PRINT INTCNUM)
PRINT INT(-8.12)<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000100.JPG" WIDTH="127" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000101.JPG" WIDTH="18" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000102.JPG" WIDTH="18" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The RND function produces real numbers. This procedure uses
INT to convert the real RND output to integer values.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE integer<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM T: INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DR=RNDC50)-25<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SPRINT R,INTCR)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pNEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-71
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
KILL 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Remove a procedure from memory<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: KILL </B><I>procedure<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Unlinks (removes) an external procedure from the
BASIC09 procedure directory. If the procedure is not external,
but resides in BASIC09's workspace, KILL has no effect.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Use KILL to remove auto-loaded (packed) procedures that are
called by RUN or CHAIN. You can also use KILL with autoloading procedures as a method to overlay programs within
BASIC09.<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Warning: </B>Be certain you do not KILL an active procedure. Also be certain that when you use RUN and KILL
together, that both statements use the same string variable that contains the name of the procedure to RUN
and KILL.
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000103.JPG" WIDTH="22" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Parameters:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>procedure </I>The name of the external procedure you want<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to KILL. <I>Procedure </I>can either be a name or a<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
variable containing the procedure name.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Examples:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURENAME$ _ "AVERAGE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RUN PROCEDURENAME$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>KILL PROCEDURENAME$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>INPUT "Which test do you want to run? ",TEST$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RUN TEST$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>KILL TESTS<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000104.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000105.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-72<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calls a procedure named Show to display ASCII
values on the screen. When it no longer needs the Show procedure, it removes Show from memory using KILL.<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE produce<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ODIM T,U:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ODIM NUM,NUM1,NUM2,TAHLE,PROCNAME:STRING<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OPROCNAME-SHOW<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OTAHLE-"123456789AHCDEF"<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OFOR T-8 TO 15<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OFOR U-1 TO 15<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ONUM1-MIDS(TAHLE,T,1)<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ONUM2=MIDS(TAHLE,U,1)<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ONUM=NUM1+NUM2 (* parameter to pass to Show.<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ORUN PROCNAME(NUM)<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ONEXT U<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OKILL "PROCNAME" (* remove Show from the workspace.<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OEND<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE SHOW<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OPARAM NUM:STRING<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OSHELL "DISPLAY "+NUM<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>OEND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000106.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000107.JPG" WIDTH="24" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000108.JPG" WIDTH="304" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="1" FACE="Courier" COLOR="#000000">
<TT>11-73<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
LAND 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns the logical AND of two numbers<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000109.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>LAND(numl,n=2)<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Performs the logical AND function on a byte- or
integer-type value. The operation involves a bit-by-bit logical
AND of the two numbers you specify. For instance, if you
LAND 5 and 6, the logic is like this:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Decimal 5 = Binary 0101<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Decimal 6 = Binary 0110<BR>
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0101<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>AND 0110<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
= 0100 = 4 Decimal<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>numl  </I>A byte- or integer-type number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>num2  </I>A byte- or integer-type number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT LAND(1 1 , 1 2 )<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT LAND($20,$FF)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following procedure asks eight questions and uses the eight
bits of one byte (contained in the variable STORAGE) to indicate
either a "yes" or "no" answer. If the answer is "yes," it sets a
corresponding bit to 1. If the answer is "no," it sets a corresponding bit to 0, using LAND. This procedure operates in conjunction with the sample program for LXOR.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000110.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000111.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-?4<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
PROCEDURE que5tion5<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DIM QUESTION;STRINGI68J; T;INTEGER; X,STORAGE;HYTE<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DIM ANSWER;STRINGI1)<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OX-1<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]FOR T=1 TO 8<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
DREAD QUESTION<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]PRINT QUESTION; " (Y/N)? ";<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OGET 1B,ANSWER<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]PRINT<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pIF ANSWER="y" OR ANSWER="Y" THEN<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]STORAGE=LOR(STORAGE,X) (* OR STORAGE if yes.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]ELSE<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]STORAGE-LAND(STORAGE,LNOT(X)) (* LAND STORAGE with NOT value if no.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]END I F<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pX=X#2<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]NEXT T<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]RUN 5ummary(STORAGE)<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
REND<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you have more than one Color Computer"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer for games"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer for word processing"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer for business applications"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer at home"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer at the office"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you use your Color Computer more than two hours a day"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
[]DATA "Do you share your Color Computer with others"<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
<B>11-75<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
LEFT 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Returns characters from the left portion
of a string
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: LEFT$(stringlength)
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Returns the specified number of characters from the
specified string, beginning at the leftmost character. If 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>length
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
is the same as or greater than the number of characters in
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>string, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
then LEFT$ returns all the characters in the string.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>string A </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sequence of ASCII characters or a string<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
variable name.<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>length </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The number of characters you want to access.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT LEFT$("H0TD0G",3)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT LEFT$(A$,6)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following procedure extracts the first name from a list of ten
names with the LEFT$ function.<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
PROCEDURE firstname<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
ODIM NAMES:STRING; FIRSTNAME:STRINGI10J<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pPRINT "Here are the first names:"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OFOR T--1 TO 10<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pREAD NAMES<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pPOINTER=SUHSTR(" ",NAMES) (* find space between first and last names.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pFIRSTNAME=LEFT=(NAMES,POINTER-1) (* extract first name,<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
OPRINT FIRSTNAME (# print first name.<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
ONEXT T<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pEND<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
ODATA "Joe Blonski","Mike Marvel","Hal Skeemish","Fred Laungly"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pDATA "Jane Mistey","Wendy Paston","Martha Upshong","Jacqueline Rivers"<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
pDATA "Susy Reetmore","Wilson Creding"<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Arial Narrow" COLOR="#000000">
11-?6<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000112.JPG" WIDTH="26" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~18\GR000113.JPG" WIDTH="22" HEIGHT="5">
</FONT>
</BODY>
</HTML>
