<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\Basic09 - Ch 11 Pg 151-176.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Command Reference l </U>11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE half5ine<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM FORMULA,CALCULATE,POSITION:REAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "DISPLAY 0C"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFORMULA=CPI+2)/15<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE=FORMULA<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "TMODE -PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=0 TO 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE=CALCULATE+FORMULA<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPOSITION=INTCSINCCALCULATE)*10+16)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF SGNCSINCCALCULATE))&gt;0 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT TAHCPOSITION); "*"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDI F<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "TMODE PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000000.JPG" WIDTH="283" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-151<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
SHELL 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Forks another shell<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000001.JPG" WIDTH="20" HEIGHT="5">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>SHELL ["string"][ + "string"...][ + variable]
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
[ + <B>variable...]
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Executes OS-9 commands or programs from within
a BASIC09 procedure. Using SHELL, you can access OS-9
functions, including multiprogramming, utilities, commands,
terminal and input/output control, and so on.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When you use the SHELL command, OS-9 creates a new process to handle the commands you provide. If you specify an
operation, BASIC09 evaluates the expression and passes it to
the shell for execution. If you do not specify an operation,
BASIC09 temporarily halts, and the shell process displays
prompts and accepts commands in the normal manner. In this
case, press 
</FONT>
<FONT SIZE="1" FACE="Tahoma1" COLOR="#000000">
CTRL BREAK 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to return to BASIC09.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When the shell process terminates, BASIC09 becomes active
and resumes execution at the statement following the SHELL
statement.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>string </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any OS-9 command or function. String con<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
stants must be enclosed in quotation marks.<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Concatenate string constants and string vari<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ables using a plus symbol (+ ).<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>variable </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any string variable containing an OS-9 com<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
mand or function.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000002.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000003.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>11-152<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Examples:<BR>
 </I>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "COPY FILE1 FILE2"<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000004.JPG" WIDTH="20" HEIGHT="5">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "COPY FILE1 FILE2&amp;"<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "COPY "+FILE$+" "+DIRNAME+"/"FILE$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "LIST DOCUMENT"<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "KILL "+STR$CN)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Program:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You must use this procedure with the GET sample program.
Using the two programs together enables you to copy all the files
from one directory to another directory. The GET sample program reads the files in a directory and stores them in a file
named Dirfile. This procedure reads the filenames from Dirfile
and uses SHELL to copy them to the directory you specify.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE copyutil<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH,T,COUNT:INTEGER; FILE,JOB,DIRNAME:STRING<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DOPEN #PATH , "d i r f i 1 e" :READ<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Name of new directory...",DIRNAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "MAKDIR "+DIRNAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "LOAD COPY"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWHILE NOTCEOFC#PATH)) DO<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREAD *PATH,FILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OJOB-FILE+" "+DIRNAME+"/"+FI,LE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "COPY "; JOB<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "COPY "+JOB<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1000N ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDWHILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-153
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
SIN 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns the sine of a number<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000005.JPG" WIDTH="20" HEIGHT="6">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SIN(n um ber)<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric sine of <I>number. You
</I>can use the DEG or RAD commands to cause <I>number to </I>represent a value in either degrees or radians. Unless you specify
DEG, the default is radians. SIN returns a real number.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number </I>The angle of two sides of a triangle for which
you want to find the ratio.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT SIN(4S)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calculates sine, cosine, and tangent values
for a number you type.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE ratiocalc
pDEG
ODIM ANGLE:REAL
DINPUT "Enter the angle of two sides of a
triangle...",ANGLE
OPRINT
OPRINT "Angle", "SINE", "COS I NEI' _IITANII<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT </TT>
</FONT>
<FONT SIZE="1" FACE="Garamond1" COLOR="#000000">
11------------_-----------------------------<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000006.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000007.JPG" WIDTH="123" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="1" FACE="Garamond" COLOR="#000000">
-------------<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT ANGLE,SIN(ANGLE),COS(ANGLE).,TAN(ANGLE)
OPRINT
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000008.JPG" WIDTH="20" HEIGHT="19">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000009.JPG" WIDTH="300" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-154<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Command Reference / 1</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>1
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
SIZE 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns the size of a data structure<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>SIZE(variable)<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Returns the size in bytes of a variable, array, or
data structure. SIZE is especially useful with random access
files to determine the size of records to store in a file. You can
also use SIZE to determine the size of variable storage for
other purposes.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
SIZE returns the size of assigned storage, not necessarily the
size of a string. For example, if you dimension a variable for
15 characters, and assign a 10-character string to it, SIZE
returns 15, not 10. SIZE returns the total size of arrays. That
is, it returns the number of elements multiplied by the size of
the elements.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>variable </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The variable, array, or data structure for<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
which you want to find the size.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RECORDLENGTH = SIZE(A$)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT "YOUR NAME IS STORED IN A "; SIZE(NAME$);
" CHARACTER STRING."<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure creates a simple inventory, stored in a
file named Inventory. It uses SIZE to calculate the size
of each element to be stored in the file, and to move
the pointer to the beginning of each record's storage
space.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-155
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000010.JPG" WIDTH="16" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000011.JPG" WIDTH="24" HEIGHT="8">
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE inventory<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pTYPE INV-ITEM=NAME:STRING125J; LIST,COST:REAL;<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>QTY: INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OD I M I NV-ARRAY( 1 0 0) : I NV-I TEM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OD I M WORK-REC : I NV-ITEM<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH:BYTE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODELETE "inventory"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1000N ERROR<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCREATE #PATH,"inventory"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. NAME="<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. L I ST= 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. COST= 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWORK-REC. QTY=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR N=1 TO 100<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPUT `PATH,WORK-REC<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT N<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OLOOP<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DINPUT "Record number? ",recnum<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF recnum&lt;1 OR recnum&gt;100 THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPR I NT "End of Session"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDIF<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Item name? ",WORK-REC.NAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DINPUT "List price? ",WORK-REC.LIST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Cost price? ",WORK-REC.COST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Quantity? ",WORK-REC.QTY<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,(recnum-1)*SIZE(WORK-REC)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPUT #PATH,WORK-REC<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDLOOP<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000012.JPG" WIDTH="162" HEIGHT="2">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000013.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000014.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000015.JPG" WIDTH="20" HEIGHT="20">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000016.JPG" WIDTH="289" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT><B>11-156<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</B></TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I><U>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
SQ 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
R<U>eturns the value of a number raised to the
</U>power of 2
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>SQ(number)
</UL>
</UL>
<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the value of a number raised to the
power of 2.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number  </I>The number you want raised to the power of 2.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT SQC188)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT PI&middot;SQ(R)<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000017.JPG" WIDTH="18" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000018.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses SQ in a formula that positions asterisks on
the screen in a sine wave pattern.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE </TT>
</FONT>
<FONT SIZE="1" FACE="Tahoma1" COLOR="#000000">
5inedown<BR>
 
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM FORMULA,CALCULATE,POSITION:REAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pSHELL "DISPLAY 0C"<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FORMULA=CPI+2)/1 S<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>CALCULATE=FORMULA<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "TMODE -PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=0 TO 200<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pCALCULATE=CALCULATE+SQCFORMULA)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>POSITION=INTCSINCCALCULATE)*12+16)
OPRINT TAHCPOSITION); "*"<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>NEXT T<BR>
 </TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SHELL "TMODE PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000019.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-1s7<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
SQR/SQRT 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns the square root of a<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>number
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
SQR(number)<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
SQRT(n um <B>ber)
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the square root of a number. SQR and
SQRT serve the same function.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number </I>The number for which you want the square
root.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT SQR(188)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT PI*SQRT(R)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses SQRT in a formula to position asterisks on
the screen in a sine wave pattern.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE sqrdown<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM FORMULA,CALCULATE,POSITION:REAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "DISPLAY 0C"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DFORMULA-P I / 1 5<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE-FORMULA<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "TMODE -PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=0 TO 200<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE-CALCULATE+SQRT(FORMULA).<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPOSITION-INT(SIN(CALCULATE)*12+16)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT TAH(POSITION); "*"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pSHELL "TMODE PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-158<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000020.JPG" WIDTH="20" HEIGHT="6">
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
STEP 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Establishes the size of increments in a
FOR loop
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Syntax:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FOR variable = init val TO end val [STEP value]
[procedure statements]
NEXT variable<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
STEP provides an increment value in a FOR/NEXT
loop. If you do not specify a STEP value, the loop steps in
increments of 1.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
BASIC09 executes the lines following the FOR statement until
it encounters a NEXT statement. Then it either increases or
decreases the initial value by 1 (the default) or by the value
given by STEP. If you give the loop an initial value that is
greater than the final value, and specify a negative value for
STEP, the loop decreases from the initial value to the end
</FONT>
</P>
 <FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value.<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Parameters:<BR>
 </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>variable </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any legal numeric variable name.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>init val </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any numeric constant or variable.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>end val </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any numeric constant or variable.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>value </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any numeric constant or variable.<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>procedure </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Procedure lines you want to be executed<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>statements </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
within the loop.<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000021.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000022.JPG" WIDTH="24" HEIGHT="9">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>11-159<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR COUNTER = 1 to 100 STEP .S
PRINT COUNTER
NEXT COUNTER<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR X = 1 0 TO 1 STEP -1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT X<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>NEXT X<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FOR TEST = A TO B STEP RATE
PRINT TEST
NEXT TEST<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure reverses the order of characters in a word or
phrase you type. It uses STEP to decrement a counter that
points to each character in the string in reverse order.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE reverse
pDIM PHRASE:STRING; T,BEGIN:INTEGER
pPRINT "Type a word or phrase you want to
reverse:";
OPRINT
OINPUT PHRASE
OBEGIN=LENCPHRASE)
OPRINT "This is how your phrase looks backwards:"
OFOR T=BEGIN TO 1 STEP -1
OPRINT MID$CPHRASE,T,1);
ONEXT T
OPRINT
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000023.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000024.JPG" WIDTH="25" HEIGHT="8">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-160<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000025.JPG" WIDTH="306" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
STOP 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Terminates a procedure<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000026.JPG" WIDTH="16" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000027.JPG" WIDTH="24" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000028.JPG" WIDTH="20" HEIGHT="7">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
STOP <B>["string"]<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Causes a procedure to cease execution, print the
message "STOP Encountered", and return control to
BASIC09's command mode. You can also specify additional
text to display when BASIC09 encounters STOP.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Use stop when you want a procedure to terminate without
entering the DEBUG mode.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string  Text to display when STOP executes.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>STOP "Program terminated b<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000029.JPG" WIDTH="4" HEIGHT="6">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>fore completion."<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>IF RESPONSE = "Y" THEN STOP "Program terminated
at your request."
ENDIF<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000030.JPG" WIDTH="35" HEIGHT="9">
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I><U>BASIC09 Reference<BR>
</U></I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
STR$ 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>Converts numeric data to string data
Syntax: STR$(numbex)<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Converts a numeric type to a string type. This lets
you display the number as a string or use string operators on
a number. The conversion replaces the numeric values with
the ASCII characters of the number. STR$ is the inverse of
the VAL function.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>Parameters:<BR>
</B></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number  </I>Any numeric-type data.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><I>Examples:<BR>
</I></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT STRt(1010)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM I:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>I=44<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT STRtCI)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM H:HYTE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>H=001<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT STRt(H)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM R:REAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>R=1234.56<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT STRi(R)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calculates an exponential value, then adds the
necessary number of zeroes to convert it to standard notation. It
uses STR$ to convert the number you type to a string type value
so that it can use string functions to add the zeroes.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-162<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000031.JPG" WIDTH="207" HEIGHT="1">
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 Command Reference / 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
PROCEDURE bignum
ODIM C,PLACES,H,SIGN:STRING; EX,COUNT,NEWCOUNT,
DECIMAL: INTEGER
ODIM NEW,ZERO,NEWEST:STRINGL100J
OCOUNT=-1
OZERO="000000000000000000000000000000000000"
ONEW="" NEWEST=""
OINPUT "What number do you want to raise to the
power of 14?...", NUM
DA=NUM"14
OH=STR$(A)
OEX=SUHSTR("E",H)
OSIGN=MID$(H,EX+1 ,1 )
OPLACES=RIGHT$(H,LEN(H)-EX-1)
OFOR T=1 TO LEN(H)
OC=MID$(H,T, 1 )
OIF C="." THEN
ODECIMAL=0
OGOTO 1 0
REND I F
ODECIMAL=DECIMAL+1
OIF C="E" THEN 100
ONEW=NEW+C
10ONEXT T
100ONEWCOUNT=VALCPLACES)-DECIMAL
ONEW=NEW+LEFT$(ZERO,NEWCOUNT+1)
OFOR T=LEN(NEW) TO 1 STEP -1
OCOUNT=COUNT+1
ONEWEST=MID$(NEW,T,1)+NEWEST
OIF MOD(COUNT,3)=2 AND T),1 THEN
ONEWEST=","+NEWEST
REND I F
ONEXT T
OPRINT NUM; " to the power of 14 = "; a
OPRINT "_ "; NEWEST
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000032.JPG" WIDTH="129" HEIGHT="2">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000033.JPG" WIDTH="16" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
<B>11-163<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
SUBSTR 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Searches for specified characters in
a string
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>SUBSTR(targetstringsearchstring)<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Searches for the first occurrence of 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>targetstring
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
within 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>searchstring </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and returns the numeric value of its location. SUBSTR counts the first character in 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>searchstring </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
as
character Number 1. Therefore, if you searched for the string
"worth" in the string "Fortworth", SUBSTR returns a value of
5.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If SUBSTR cannot find 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>targetstring, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
it returns a value of 0.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>targetstring </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The group of characters you want to locate.<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>searchstring </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The string in which you want to find
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>targetstring.
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT SUBSTR("THREE","ONETWOTHREEFOURFIVESIX")<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>X=SUBSTR(" ",FULLNAME$)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure selects the last name from a string containing both a first name and a last name. It uses
SUBSTR to find the space between the two names in
order to determine where the last name begins.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000034.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000035.JPG" WIDTH="22" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000036.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11-164<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE la5tname<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM NAMES:STRING; LASTNAME:STRINGL101<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "Here are the last names:"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pFOR T=1 TO 1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DREAD NAMES<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPOINTER=SUHSTRC" ",NAMES)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPOINTER=LENCNAMES)-POINTER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pLASTNAME=RIGHT$tNAMES,POINTER)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT LASTNAME<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODATA "Joe Blonski","Mike Marvel","Hal<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>Skeemish","Fred Laungly"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODATA "Jane Misty","Wendy Paston","Martha<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>Up5hong","Jacqueline Rivers"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODATA "Su5y Reetmore","Wilson Creding"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000037.JPG" WIDTH="22" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000038.JPG" WIDTH="19" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-165<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000039.JPG" WIDTH="64" HEIGHT="1">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
SYSCALL 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Executes an OS-9 System Call<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000040.JPG" WIDTH="25" HEIGHT="8">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>SYSCALL callcode registers<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Lets you execute any OS-9 system call from
BASIC09. Use this command to directly manipulate your system or data or to directly access devices.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Be careful! </B>Used improperly, SYSCALL can cause undesirable results you might unintentionally format a disk or
destroy disk or memory data. Before using SYSCALL, you
should be familiar with assembly language programming and
should understand the system call information in the OS-9
<I>Technical Reference </I>manual. The OS-9 <I>Technical Reference
</I>manual provides information about all OS-9 system calls.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
To pass required register values to the SYSCALL command,
create a complex data structure that contains values for all
registers. Fbr example:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>TYPE REGISTERS=CC,A,B,DP:HYTE; X,Y,U:INTEGER
DIM REGS:REGISTERS
DIM CALLCODE:BYTE
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The complex data type REGISTERS contains values for all
registers. Unless you specifically assign values to variables
(for instance, REGS.CC, REGS.A, and REGS.B in the previous example), they contain random values. See the TYPE
command for further information.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
callcode is the request code of the system call you wish<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to use. All system call codes are referenced in<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the OS-9 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Technical Reference </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
manual.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
registers is a list of the register entry values required<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
for the system call you are using.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>Examples: </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
see "Sample <B>Programs."<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>11-166<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000041.JPG" WIDTH="22" HEIGHT="5">
<UL>
<UL>
<UL>
<I>BASIC 09 Command Reference / 11
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Sample Programs:<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following programs set up a data type (REGISTERS) for the
register variables. Before executing SYSCALL, the procedures
store the required register entry values in the complex data
structure REGS. The procedures also establish CALLCODE as a
variable to hold the request code of the system call you want to
use.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Writecall procedure uses the string variable TEST to store
text that it writes to the screen through Path 0 (the standard
output path) using System Call $8A, I$Write. Before the procedure calls I$Write, it stores the appropriate path number (0) in
Register A. The ADDR command calculates the address of the
variable TEST, and the LEN command determines the length of
the variable. The procedure stores these two values in Registers
X and Y.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Readcall uses System Call $8B, I$ReadLn to perform a
function that is the opposite of Writecall. Readcall establishes
TEST as a string variable into which it writes the characters
you type. Because the length of TEST is restricted to ten characters 
</FONT>
<FONT SIZE="2" FACE="Tahoma1" COLOR="#000000">
(DIM TEST: STRING[ 1 0 1 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
), the terminal bell sounds if you
attempt to type more than 10 characters. <B>Pressing [ENTER]
</B>terminates the call and the procedure prints the contents of
TEST the characters you typed.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000042.JPG" WIDTH="300" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="2" FACE="Tahoma" COLOR="#000000">
11-167<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I><U>Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE WriteCall<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OTYPE REGISTERS=CC,A,B,DP:BYTE; X,Y,U:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM REGS:REGISTERS<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH,CALLCODE:BYTE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM TEST:STRINGL50l<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OTEST="This is a test of I$Write,,Sy5tem call<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>$8A..."<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREGS.A=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREGS.X=ADDRCTEST)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREGS.Y=LENCTEST)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALLCODE=$8A<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ORUN SYSCALLCCALLCODE,REGS)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE Readcall<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OTYPE REGISTERS=CC,A,B,DP:BYTE; X,Y,U:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM REGS:REGISTERS<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM PATH,CALLCODE:BYTE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM TEST:STRINGf10l<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREGS.A=0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREGS.X=ADDRCTEST)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DREGS . Y=1 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALLCODE=$8B<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ORUN SYSCALLCCALLCODE,REGS)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT TEST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000043.JPG" WIDTH="45" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000044.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000045.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000046.JPG" WIDTH="20" HEIGHT="4">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-168<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000047.JPG" WIDTH="389" HEIGHT="1">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000048.JPG" WIDTH="16" HEIGHT="3">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
TAB 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Causes PRINT to jump to the specified
column
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TAB(number)
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Causes PRINT to display the next PRINT item to
display in the column specified by <I>number. If </I>the cursor is
already past the desired tab position, BASIC09 ignores TAB.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Use POS to determine the current cursor position when displaying characters on the screen.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Screen display columns are numbered from 1, the leftmost column, to a maximum of 255. The size <I>of </I>BASIC09 output
buffer varies according to the stack size.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can also use TAB with PRINT USING statements.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
,^ <B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number </I>The column at which you want PRINT to
begin.
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT TAB(20);TITLE$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT TAH(X);ITEMNUMBER;ITEM$<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure uses asterisks to simulate a sine wave on the
screen. It uses TAB to position each asterisk in the proper
location.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000049.JPG" WIDTH="19" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000050.JPG" WIDTH="22" HEIGHT="8">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000051.JPG" WIDTH="53" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
11469<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE 5inewave<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pDIM FORMULA,CALCULATE,POSITION:REAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "DISPLAY 0C"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFORMULA=CPI+2)/1 S<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE=FORMULA<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "TMODE -PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFOR T=0 TO 200<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCALCULATE=CALCULATE+SQCFORMULA)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPOSITION=INTCSINCCALCULATE)*12+16)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT TAHCPOSITION); "*"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSHELL "TMODE PAUSE"<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000052.JPG" WIDTH="20" HEIGHT="5">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-170<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
TAN 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns the tangent of a value<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000053.JPG" WIDTH="20" HEIGHT="7">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000054.JPG" WIDTH="19" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000055.JPG" WIDTH="10" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TAN(n um ber)<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Calculates the trigonometric tangent of <I>number.
</I>Using DEG or RAD, you can specify the measure of the angle
<I>(number) </I>in either degrees or radians. Radians are the default
units.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>number </I>The angle for which you want to find the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tangent.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT TANC45)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure calculates sine, cosine, and tangent values for a
number you type.<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE ratiocalc<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODEG<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM ANGLE:REAL
pINPUT "Enter the angle of two sides of a
triangle...",ANGLE
pPRINT
pPRINT "Angle", "SINE","COSINE","TAN"<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000056.JPG" WIDTH="123" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000057.JPG" WIDTH="148" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SPRINT ANGLE,SINCANGLE),COSCANGLE),TANCANGLE)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPR I NT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pEND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000058.JPG" WIDTH="35" HEIGHT="8">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I><U>BASIC09 Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
TRI<U>M$ </U>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<U>Removes spaces from the end of a strin</U>g<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000059.JPG" WIDTH="22" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Syntax: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
T RIM$(,string)<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Function: 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Removes any trailing spaces from the end of the
specified string. This function is particularly useful for trimming records you recover from a random access file.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Parameters:<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
string The string or string variable from which you
wish to remove trailing spaces.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Examples:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT TRIM$(A$)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>GET A$,B$,C$<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PRINT TRIM$(A$),TRIM$(B$),TRIM$(C$)<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Sample Program:<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This program takes names you type and puts them in a
random access disk file. Because random access files use
the same amount of storage for each item, short names
are pfd with extra spaces. When reading the names
back from the file, the procedure uses TRIM$ to remove
these extra spaces.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE namestor<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ODIM NAMES,TEMP1,NAME(100):STRINGL261; FIRST,LAST:
STRINGf15l; INITIAL:STRINGL1J</TT>
</FONT>
</P>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DDIM PATH,T:INTEGER<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONAMES=""<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DON ERROR GOTO 10<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FIDELETE "nameli5t"
100ON ERROR</TT>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCREATE #PATH,"nameli5t":UPDATE
OFOR T=1 TO 1 00</TT>
</FONT>
</P>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>[INA ME (T)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONEXT T<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT = 0<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000060.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000061.JPG" WIDTH="22" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000062.JPG" WIDTH="302" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-172<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Command Reference l 11<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pL00P<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DINPUT "First Name: ",FIRST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DEXITIF FIRST="" THEN<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OGOTO 1 0 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDEXIT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Initial: ",INITIAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINPUT "Last: ",LAST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT=T+ 1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONAMECT)=FIRST+" "+INITIAL+" "+LAST<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPUT #PATH,NAMECT)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,T*26<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OENDLOOP<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>1000OPEN #PATH,"namelist":READ<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT \ PRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT "Lastname","Firstname","Initial<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREM Print underline C40 characters)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT " -<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,O<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT = 0<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OWHILE NOTCEOFC#PATH)) DO<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OGET #PATH,NAMES<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OT=T+ 1<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>ONAMES=TRIM$CNAMES)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OX=SUHSTRC" ",NAMES)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OFIRST=LEFT$CNAMES,X-1)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OTEMP1=RIGHT$CNAMES,LENCNAMES)-X+1)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OINITIAL=MID$CTEMP1 ,2,1 )<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OLAST=RIGHT$CTEMP1,LENCTEMP1)-3)<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT LAST,FIRST,INITIAL<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OSEEK #PATH,T*26<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DENDWHILE<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OCLOSE #PATH<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000063.JPG" WIDTH="16" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000064.JPG" WIDTH="10" HEIGHT="5">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000065.JPG" WIDTH="24" HEIGHT="9">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000066.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000067.JPG" WIDTH="10" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000068.JPG" WIDTH="10" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000069.JPG" WIDTH="12" HEIGHT="4">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000070.JPG" WIDTH="302" HEIGHT="2">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT><B>11-173<BR>
</B></TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
TRON/TROFF 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Turns on/off trace function<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Syntax:  TRON<BR>
<UL>
<UL>
<UL>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>TROFF
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Turns on or off the BASIC09 trace mode. When
trace is turned on (TRON), BASIC09 decompiles and displays
each statement in a procedure before execution. BASIC09 also
displays the result of each expression after evaluation. This
function lets you follow program flow and is helpful in debugging and analyzing the execution of a procedure. After the
procedure is debugged, remove the TRON statement.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If you want to view only a portion of a procedure's execution,
surround that portion with TRON and TROFF. Tracing
begins immediately after the TRON statement and ends at
the TROFF statement. The rest of the program executes
normally.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
H$="00000000000000000000"+H$
N=1 +LEN(H$
FOR I=4 TO 1 STEP -1
TRON
N=N-4
A(I)=VAL(MID$(H$,N,4))
TROFF
NEXT I<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Tahoma" COLOR="#000000">
11-174<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000071.JPG" WIDTH="22" HEIGHT="6">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>BASIC09 Command Reference / 11
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
TRUE 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Returns a Boolean TRUE value
tax: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>variable </B>= TRUE
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Function: </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
TRUE is a Boolean function that always returns
True. You can use TRUE and FALSE to assign values to Boolean variables.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Parameters:
</UL>
</UL>
<BR>
 <UL>
<UL>
</B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>variable </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Boolean storage unit you want to set to
</UL>
</UL>
<BR>
  <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
True.
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Examples:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DIM TEST:HOOLEAN
TEST=TRUE
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sample Program:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This procedure asks five questions. If your answer is correct, it
stores the Boolean value TRUE in a Boolean type variable. If
your answer is incorrect, .it stores the Boolean value FALSE in
the variable.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>PROCEDURE quiz
pDIM REPLY,VALUE:BOOLEAN; ANSWER:STRINGf1l;
QUESTION:STRINGL80J
pFOR T=1 TO 5
DREAD QUESTION,VALUE
pPRINT QUESTION
OPR I NT "CT) = TRUEE100000pCF) = FALSE"
OPRINT "Select T or F:OO";
OGET x1,ANSWER
OIF ANSWER="T" THEN
OREPLY=TRUE
</UL>
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>,~` DELSE<BR>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OREPLY=FALSE
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>REND I F
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OIF REPLY=VALUE THEN
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OPRINT \ PRINT "That's Correct ...Good Show!"
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>DELSE
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-175
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>BASIC09 .Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>pPRINT "Sorry, you're wrong ...Hetter Luck next
time."
DENDI F
OPRINT \ PRINT \ PRINT
ONEXT T
ODATA "In computer talk, CPU stands for Central
Packaging Unit.", FALSE
ODATA "The actual value of 64K is 65536
bytes.",TRUE
ODATA "The bits in a byte are normally numbered 0
through 7.",TRUE
ODATA "HASIC09 has four data types.",FALSE
ODATA "The LAND function is a Boolean type
operator.",FALSE
REND<BR>
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000072.JPG" WIDTH="20" HEIGHT="6">
<IMG SRC="file:///H:\NANIOS~2\OS-9LE~3\BASIC09\BASIC~22\GR000073.JPG" WIDTH="20" HEIGHT="5">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>11-176<BR>
</FONT>
</BODY>
</HTML>
