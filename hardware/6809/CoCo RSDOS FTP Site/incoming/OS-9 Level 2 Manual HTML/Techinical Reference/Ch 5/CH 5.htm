<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>C:\CH5~1\CH 5.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<P ALIGN="CENTER">
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<U>Chapter 5</U>
</FONT>
</P>
<H2 ALIGN="CENTER">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Random Block File Manager</B>
</FONT>
</H2>
<H2 ALIGN="LEFT">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000000.JPG" WIDTH="300" HEIGHT="1">
</FONT>
</H2>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The random block file manager (RBF manager) supports 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>disk</I>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>storage. </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
It is a re-entrant subroutine package called by the I/O
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
manager for I/O system calls to random-access devices. It main
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tains the logical and physical file structures.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
During normal operation, the RBF manager requests allocation
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and deallocation of 256-byte data buffers. Usually, one buffer is
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
required for each open file. When physical I/O functions are nec
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
essary, the RBF manager directly calls the subroutines in the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
associated device drivers. All data transfers are performed using
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
256-byte data blocks (pages).
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The RBF manager does not deal directly with physical addresses
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
such as tracks and cylinders. Instead, it passes to the device
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
drivers address parameters, using a standard address called a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>logical sector number, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>LSN. </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSNs are integers from 0 to 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>n-1,</I>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
where 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>n is </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the maximum number of sectors on the media. The
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
driver translates the logical sector number to actual cylinder/
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
track/sector values.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Because the RBF manager supports many devices that have dif
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ferent performance and storage capacities, it is highly parame
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ter-driven. The physical parameters it uses are stored on the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
media itself.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
On disk systems, the parameters are written on the first few
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sectors of Track 0. The device drivers also use the information,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
particularly the physical parameters stored on Sector 0. These
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
parameters are written by the FORMAT program that initial
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
izes and tests the disk.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<B>Logical and Physical Disk Organization<BR>
</B>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
All <B>disks used by OS-9 </B>store basic identification, file structure,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and storage allocation information on these first few sectors.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSN 0 is the 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>identification sector. </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSN 1 is the 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>disk allocation</I>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>map sector. </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSN 2 marks the beginning of the disk's ROOT
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directory. The following section tells more about LSN 0 and LSN
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-1
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000001.JPG" WIDTH="17" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Identification Sector (LSN 0)<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
LSN 0 contains a description of the physical and logical charac-<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
teristics of the disk. These characteristics are set by the FOR-<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
MAT command program when the disk is initialized.<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The following table gives the OS-9 mnemonic name, byte<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
address, size, and description of each value stored in this LSN 0.<BR>
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Name Address (Bytes)</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Use<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.TOT $00  3 Number of sectors on disk<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.TKS $03  1 Track size (in sectors)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.MAP $04  2 Number of bytes in the alloca<BR>
    
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tion bit map<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.BIT $06  2 Number of sectors per cluster<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.DIR $08  3 Starting sector of the ROOT<BR>
    
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
directory<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.OWN $OB  2 Owner's user number<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.ATT $OD  1 Disk attributes<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.DSK $OE  2 Disk identification (for internal<BR>
    
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
use)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DDYMT $10  1 Disk format, density, number<BR>
  
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
;-/ of sides<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD. SPT $11  2 Number of sectors per track<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.RES $13 2  Reserved for future use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.BT $15 3 Starting sector of the boot<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
strap file<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.BSZ $18 2 Size of the bootstrap file (in<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
bytes)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.DAT $lA 5  Time of creation (Y:M:D:H:M)<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.NAM $1F 32 Volume name in which the last
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
character has the most signifi
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
cant bit set
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DD.OPT $3F  Path descriptor options<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
5-2<BR>
<IMG SRC="file:///C:\CH5~1\GR000002.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000003.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000004.JPG" WIDTH="20" HEIGHT="3">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Random Block File Manage</U>r <U>/ 5
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Disk Allocation Map Sector (LSN 1)<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSN 1 contains the 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>disk allocation map, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
which is created by
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FORMAT. This map shows which sectors are allocated to the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
files and which are free for future use.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Each bit in the allocation map represents a sector or cluster of
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sectors on the disk. If the bit is set, the sector is considered to be
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in use, defective, or non-existent. If the bit is cleared, the corre
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sponding cluster is available. The allocation map usually starts
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
at LSN1. The number of sectors it requires varies according to
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
how many bits are needed for the map. DD.MAP specifies the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
actual number of bytes used in the map.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Multiple sector allocation maps allow the number of sectors/clus
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ter to be as small as possible for high volume media.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The FORMAT utility bases the size of the allocation map on the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
size and number of sectors per cluster.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The DD.MAP value in LSN 0 specifies the number of bytes (in
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LSN 1) that are used in the map.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Each bit on the disk allocation map corresponds to one sector
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cluster on the disk. The DD.BIT value in LSN 0 specifies the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number of sectors per cluster. The number is an integral power
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
of 2 (1, 2, 4, 8, 16, and so on).
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If a cluster is available, the corresponding bit is cleared. If it is
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
allocated, non-existent, or physically defective, the corresponding
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
bit is set.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
ROOT Directory<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This file is the parent directory of all other files and directories
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
on the disk. It is the directory accessed using the physical device
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
name (such as /D1). Usually, it immediately follows the Alloca
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tion Map. The location of the ROOT directory file descriptor is
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
specified in DD.DIR. The ROOT directory contains an entry -for
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
each file that resides in the directory, including other
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directories.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000005.JPG" WIDTH="19" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000006.JPG" WIDTH="17" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
File Descriptor Sector<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The first sector of every file is the 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>file </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor. It contains the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
logical and physical description of the file.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000007.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-3<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000008.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following table describes the contents of the file descriptor.<BR>
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes)</B>Use<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.ATT $00 1 File attributes: D S PE PW PR<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
E W R (see next chart)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.OWN $01 2 Owner's user ID<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.DAT $03 5 Date last modified: (Y M D H<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
M)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.LNK $08 1 Link count<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.SIZ $09 4 File size (number of bytes)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.CREAT $OD 3 Date created (Y M D)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
FD.SEG $10 240 Segment list (see next chart)<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FD.ATT. </B>(The attribute byte) contains the file permission bits.
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When set the bits indicate the following:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 7 Directory
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 6 Single user
</UL>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 5 Public execute
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 4 Public write
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 3 Public read
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 2 Execute
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 1 Write
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 0 Read
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>FD.SEG </B>(the segment list) consists of a maximum of 48 5-byte
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
entries that have the size and address of each file block in logical
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
order. Each entry has the block's 3-byte LSN and 2-byte size (in
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sectors). The entry following the last segment is zero.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
After creation, a file has no data segments allocated to it until
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the first write. (Write operations past the current end-of-file
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cause sectors to be added to the file. The first write is always
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
past the end-of-file.)
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If the file has no segments, it is given an initial segment. Usu
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ally, this segment has the number of sectors specified by the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
minimum allocation entry in the device descriptor. If, however,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the number of sectors requested is more than the minimum, the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
initial segment has the requested number.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-4<BR>
<IMG SRC="file:///C:\CH5~1\GR000009.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000010.JPG" WIDTH="18" HEIGHT="3">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Random Block File Manager l 5
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Later expansions of the file usually are also made in minimum
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
allocation increments. Whenever possible, OS-9 expands the last
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
segment, instead of adding a segment. When the file is closed,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS-9 truncates unused sectors in the last segment.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS-9 tries to minimize the number of storage segments used in
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a file. In fact, many files have only one segment. In such cases,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
no extra Read operations are needed to randomly access any byte
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in the file.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If a file is repeatedly closed, opened, and expanded, it can
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
become fragmented so that it has many segments. You can avoid
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
this fragmentation by writing a byte at the highest address you
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
want to be used on a file. Do this before writing any other data.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Directories<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Disk directories </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
are files that have the D attribute set. A direc
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tory contains an integral number of entries, each of which can
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
hold the name and LSN of a file or another directory.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Each directory entry contains 29 bytes for the filename, followed
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
by the three bytes for the LSN of the file's descriptor sector. The
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
filename is left justified in the field, with the most significant bit
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
of the last character set. Unused entries have a zero byte in the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
first filename character position.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Every disk has a master directory called the ROOT directory.
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The <B>DD.DIR </B>value in LSN 0 (identification sector) specifies the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
starting sector of the ROOT directory.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>The RBF Manager Definitions of the Path<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Descriptor<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
As stated earlier in this chapter, the PD.FST section of the path
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor is reserved for and defined by the file manager. The
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
following table describes the use of this section by the RBF man
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ager. For your convenience, it also includes the other sections of
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the PD.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000011.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000012.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-5<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000013.JPG" WIDTH="302" HEIGHT="1">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes) </B>Use<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Universal Section (Same for all file managers and device drivers)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.PD $00 1  Path number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.MOD $01 1  Access mode<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1 = read,<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2 = write,<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3 = update<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.CNT $02 1 Number of open images (paths<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
using this PD)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DEV $03 2 Address of the associated<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device table entry<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.CPR $05 1  Current process ID<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.RGS $06 2 Address of the caller's 6809<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
register stack<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.BUF $08 2 Address of the 256-byte data<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
buffer (if used)<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Relative  Size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Name Address (Bytes) Use<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The RBF manager Path Descriptor Definitions (PD.FST Section)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SMF $OA 1  State flag:<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 0 = current buffer is<BR>
     
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
altered<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 1 = current sector is in<BR>
     
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the buffer<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 2 = descriptor sector is<BR>
     
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in the buffer<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.CP $OB 4 Current logical file position<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(byte address)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SIZ $OF 4  File size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD. SBL $13 3 Segment beginning logical sec<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tor number (LSN)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SBP $16 3 Segment beginning physical<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sector number (PSN)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-6<BR>
<IMG SRC="file:///C:\CH5~1\GR000014.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000015.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000016.JPG" WIDTH="20" HEIGHT="3">
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager / 5<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000017.JPG" WIDTH="22" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000018.JPG" WIDTH="12" HEIGHT="3">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Relative Size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Name Address (Bytes) Use<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD . SSZ $19 3 Segment size<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>PD.DSK $1C 2 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Disk ID (for internal use only)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DTB $lE 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>2  </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Address of drive table<BR>
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Relative Size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Name Address (Bytes) Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The RBF manager Option Section Definitions (PD.OPT Section)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(Copied from the device descriptor)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DTP 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>$20 1<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000019.JPG" WIDTH="18" HEIGHT="19">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Device class:<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0=SCF<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1 = RBF<BR>
 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>2 = PIPE<BR>
 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3=SBF<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DRV 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>$21 1 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Drive number (On)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.STP 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>$22 1 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Step rate<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.TYP $23 1 Device type<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DNS $24 1 Density capability<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.CYL $25 2 Number of cylinders (tracks)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SID $27 1 Number of sides (surfaces)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.VFY $28 1 0 = verify disk writes<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SCT $29 2 Default number of sectors per<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
track<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.TOS $2B 2 Default number of sectors per<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
track (Track 0)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.ILV $2D 1 Sector interleave factor<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.SAS $2E 1 Segment allocation size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.TFM $2F 1 DMA transfer mode<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.EXTEN $30 2 Path extension for record<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
locking<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.STOFF $32 1 Sector/track offsets<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-7<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes) </B>Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(Not copied from the device descriptor):<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.ATT $33 1 File attributes<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(DSPEPWPREWR)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.FD $34 3 File descriptor PSN<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DFD $37 3 Directory file descriptor PSN<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.DCP $3A 4 File's directory entry pointer<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PS.DVT $3E 2 Address of the device table<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
entry<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Any values not determined by this table default to zero.<BR>
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<B>RBF-Type Device Descriptor Modules<BR>
</B>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This section describes the use of the initialization table con<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tained in the device descriptor modules for RBF-type devices.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The following values are those the I/0 manager copies from the<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device descriptor to the path descriptor.<BR>
<IMG SRC="file:///C:\CH5~1\GR000020.JPG" WIDTH="22" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000021.JPG" WIDTH="22" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000022.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-8<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager / 5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
 </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes) </B>Use<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
r~1$0-$11  Standard device descriptor<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
module header<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>IT.DTP $12 1 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Device type:
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0=SCF
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1 = RBF
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2 = PIPE
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3 = SBF
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT. DRV $13 1 Drive number
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT. STP $14 1 Step rate
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT.TYP $15 1 Device type (see RBF path
</UL>
</UL>
<BR>
   <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor)
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT.DNS $16 1 Media density:
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Always 1 (double)
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(see following information)
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>IT. CYL $17 2 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Number of cylinders (tracks)
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT. SID $19 1 Number of sides
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT.VFY $lA 1 0 = Verify disk writes
</UL>
</UL>
<BR>
    <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1 = no verify
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>IT.SCT $1B 2 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Default number of sectors per
</UL>
</UL>
<BR>
   <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
track
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT. TOS $1 D 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>2 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Default number of sectors per
</UL>
</UL>
<BR>
   <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
track (Track 0)
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
IT.ILV $1 F 1 Sector interleave factor
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>IT.SAS $20 1 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Minimum size of segment allo
</UL>
</UL>
<BR>
   <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cation (number of sectors to be
</UL>
</UL>
<BR>
   <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
allocated at one time)
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>IT.DRV </B>is used to associate a 1-byte integer with each drive
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
-- that a controller handles. Number the drives for each controller<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
as 0 to 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>n-1, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
where 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>n is </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the maximum number of drives the con
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
troller can handle.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-9
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000023.JPG" WIDTH="129" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>IT.TYP </B>specifies the device type (all types).<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 0 0 = 5-inch floppy diskette<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 5 0<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 6 0<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 7 0<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1<BR>
<IMG SRC="file:///C:\CH5~1\GR000024.JPG" WIDTH="10" HEIGHT="93">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Non-Color Computer format<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Color Computer format<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Standard OS-9 format<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Non-standard format<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Floppy diskette<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Hard disk<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>IT.DNS </B>specifies the density capabilities (floppy diskette only).<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 0 0<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Single-bit density (FM)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Double-bit density (MFM)<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit 1 0 = Single-track density (5-inch, 48 tracks per
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
inch)
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1 = Double-track density (5-inch, 96 tracks per
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
inch)
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>IT.SAS specifies </B>the minimum number of sectors allowed at one
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
time.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
RBF Record Locking<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Record locking is a general term that refers to methods designed
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to preserve the integrity of files that can be accessed by more
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
than one user or process. The OS-9 implementation of record
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
locking is designed to be as invisible as possible. This means
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
that existing programs do not have to be rewritten to take
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
advantage of record locking facilities. You can usually write new
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
programs without special concern for multi-user activity.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Record locking involves detecting and preventing conflicts during
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
record access. Whenever a process modifies a record, the system
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
locks out other procedures from accessing the file. It defers
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
access to other procedures until it is safe for them to write to the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
record. The system does not lock records during reads; so, multi
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ple processes can read the record at the same time.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-10<BR>
<IMG SRC="file:///C:\CH5~1\GR000025.JPG" WIDTH="26" HEIGHT="6">
<IMG SRC="file:///C:\CH5~1\GR000026.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///C:\CH5~1\GR000027.JPG" WIDTH="20" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Block File Manager / 5<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000028.JPG" WIDTH="26" HEIGHT="19">
<IMG SRC="file:///C:\CH5~1\GR000029.JPG" WIDTH="18" HEIGHT="2">
<IMG SRC="file:///C:\CH5~1\GR000030.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///C:\CH5~1\GR000031.JPG" WIDTH="25" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Record Locking and Unlocking<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>To detect conflicts, OS-9 must recognize when a record is being<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>updated. The RBF manager provides true record locking on a<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>byte basis. A typical record update sequence </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
is:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OS9 I$Read<BR>
<IMG SRC="file:///C:\CH5~1\GR000032.JPG" WIDTH="6" HEIGHT="23">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OS9 I$Seek<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OS9 I$Write<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>program reads record<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RECORD IS LOCKED<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>program updates record<BR>
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>reposition to record<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>record is rewritten<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>RECORD IS RELEASED<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>When a file is opened in update mode, any read causes locking</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>of the record being accessed. This happens because the RBF</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>manager cannot determine in advance if the record is to be</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>updated. The record stays locked out until the next read, write,</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>or close.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>However, when a file is opened in the read or execute modes, the</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>system does not lock accessed records because the records cannot</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>be updated in these two modes.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>A subtle but important problem exists for programs that interro</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>gate a data base and occasionally update its data. If you neglect</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>to release a record after accessing it, the record might be locked</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>up indefinitely. This problem is characteristic of record locking</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>systems and you can avoid it with careful programming.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Only one portion of a file can be locked out at a time. If an</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>application requires more than one record to be locked out, open</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>multiple paths to the same file and lock the record accessed by</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>each path. RBF notices that the same process owns both paths</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>and keeps them from locking each other out.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
5-11<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Non-Shareable Files<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Sometimes (although rarely), you must create a file that can
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
never be accessed by more than one user at a time. To lock the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
file, you set the single-user (s) bit in the file's attribute byte. You
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
can do this by using the proper option when the file is created,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or later using the OS-9 ATTR command. Once the single-user
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
bit is set, only one user can open the file at a time. If other users
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
attempt to open the file, Error 253 is returned. Note however,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
that non-shareable means only one path can be opened to a file
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
at one time. Do not allow two processes to concurrently access a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
non-shareable file through the same path.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
More commonly, you need to declare a file as single-user only
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
during the execution of a specific program. You can do this by
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
opening the file with the single-user bit set. For example, sup
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
pose a process is sorting a file. With the file's single-user bit set,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS-9 treats the file exactly as though it had a single-user attrib
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ute. If another process attempts to open the file, OS-9 returns
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Error 253.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can duplicate non-shareable files by using the I$Dup system
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
call. This means that it can be inherited, and therefore accessi
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ble to more than one process at a time. Single-user means only
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
that the file can be opened only once.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>End-of-File Lock<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
A special case of record locking occurs when a user reads or
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
writes data at the end of a file, creating an 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>EOF Lock. </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
An EOF
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Lock keeps the end of the file locked out until a process performs
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a READ or WRITE that is not at the end of the file. It prevents
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
problems that might otherwise occur when two users want to
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
simultaneously extend a file. The EOF Lock is the only case in
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
which a WRITE call automatically causes portions of a file to be
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
locked out. An interesting and useful side effect of the EOF Lock
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
function occurs if a program creates a file for sequential output.
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
As soon as the program creates the file, E OF Lock is set and no
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
other process can pass the writer in processing the file. For
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
example, if an assembler redirects a listing to a disk file, and a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
spooler utility tries to print a line from the file before it is writ
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ten, record locking makes the spooler wait and stay at least one
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
step behind the assembler.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
5-12<BR>
<IMG SRC="file:///C:\CH5~1\GR000033.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000034.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000035.JPG" WIDTH="16" HEIGHT="2">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Random Block File Manage</U>r <U>/ 5
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Deadlock Detection<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A deadly embrace, </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
or deadlock, typically occurs when two pro
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cesses attempt to gain control of two or more disk areas at the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
same time. If each process gets one area (locking out the other
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
process), both processes become permanently stuck. Each waits
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
for a segment that can never become free. This situation is is not
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
restricted to any particular record locking scheme or operating
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
system.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When a deadly embrace occurs, RBF returns a deadlock error
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(Error 254) to the process that caused OS-9 to detect the dead
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
lock. To avoid deadlocks, make sure that processes always access
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
records of shared files in the same sequence.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When a deadlock error occurs, it is not sufficient for a program
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to retry the operation that caused the error. If all processes use
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
this strategy, none can ever succeed. For any process to proceed,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
at least one must cancel operation to release its control over a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
requesting segment.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<B>RBF-Type Device Driver Modules<BR>
</B>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
An RBF-type device driver module contains a package of subrou
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tines that perform sector-oriented I/O to or from a specific hard
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ware controller. Such a module is usually re-entrant. Because of
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
this, one copy of one device driver module can simultaneously
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
run several devices that use identical I/O controllers.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The I/O manager allocates a permanent memory area for each
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device driver. The size of the memory area is given in the device
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
driver module header. The I/O manager and the RBF manager
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
use some of this area. The device driver can use the rest in any
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
manner. This area is used as follows:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>The RBF Device Memory Area Definitions<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes)</B>Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.PAGE $00 1 Port extended address bits<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
A20-A16<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.PORT $01 2 Device base address (defined<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
by the I/O manager)<BR>
<IMG SRC="file:///C:\CH5~1\GR000036.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000037.JPG" WIDTH="304" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-13<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Name Address (Bytes)</B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V.LPRC $03 1 ID of the last active process<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
(not used by RBF device<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
drivers)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V.BUSY $04 1 ID of the current process using<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
driver (defined by RBF)<BR>
    
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
0 = no current process<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V.WAKE $05 1 ID of the process waiting for<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
I/O completion (defined by the<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
device driver)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V.USER $06 0 Beginning of file manager spe<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
cific storage<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V.NDRV $06 1 Maximum number of drives<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the controller can use (defined<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
by the device driver)<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
$07 8 Reserved<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
DRVBEG $OF 0 Beginning of the drive tables<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
TABLES $OF DAN*N Space for number of tables<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
reserved (n)<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
FREE  0 Beginning of space available<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
for driver<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
These values are defined in files in the DEFS directory on the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Development Package disk.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>TABLES. </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
This area contains one table for each drive that the<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
controller handles. (The RBF manager assumes that there are as<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
many tables as indicated by V.NDRV.) Some time after the<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
driver Init routine is called, the RBF manager issues a request<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
for the driver to read LSN 0 from a drive table by copying the<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
first part of LSN 0 (up to DD.SIZ) into the table. Following is<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the format of each drive table: 
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
,--~.<BR>
<IMG SRC="file:///C:\CH5~1\GR000038.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
5-14<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager / 5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes)</B>Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.TOT $00 3 Number of sectors.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.TKS $03 1 Track size (in sectors).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.MAP $04 2 Number of bytes in the alloca<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tion bit map.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.BIT $06 2 Number of sectors per bit<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(cluster size).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.DIR $08 3 Address (LSN) of the ROOT<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directory.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.OWN $OB 2 Owner's user number.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.ATT $OD 1 Disk access attributes<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(DSPEPWPREWR).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.DSK $OE 2 Disk ID (a pseudo-random<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number used to detect diskette<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
swaps).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DDYMT $10 1 Media format.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.SPT $11 2 Number of sectors per track.<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(Track 0 can use a different<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
value specified by IT.TOS in<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the device descriptor.)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.RES $13 2 Reserved for future use.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DD.SIZ $15 0 Minimum size of device<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.TRAK $15 2 Number of the current track<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(the track that the head is on,<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and the track updated by the<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
driver).<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.BMB $17 1 Bit-map use flag:<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0 = Bit map is not in use.<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(Disk driver routines<BR>
    
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
must not alter V.BMB.)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.FILEHD $18 2 Open file list for this drive.<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-15
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000039.JPG" WIDTH="22" HEIGHT="7">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000040.JPG" WIDTH="306" HEIGHT="3">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative Size<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Name Address (Bytes) </B>Use<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.DISKID $lA 2  Disk ID.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.BMAPSZ $1C<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.MAPSCT $1D<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.RESBIT $ lE<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Size of bitmap.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Lowest reasonable bitmap<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sector.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Reserved bitmap sector.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.SCTKOF $1F 1  Sector/track byte.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.SCOFST $20 1 Sector offset split from byte<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
above.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
V.TKOFST $22 4  Reserved for future use.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
DRVMEN $26 Size of each drive table.<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The format attributes (DD.FMT) are these:
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit BO
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit B 1
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Bit B2
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
0
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000041.JPG" WIDTH="12" HEIGHT="108">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Number of sides<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Single-sided<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Double-sided<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Density<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Single-density<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Double-density<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Track density<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Single (48 tracks per inch)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Double (96 tracks per inch)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>RBF Device Driver Subroutines<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Like all device driver modules, RBF device drivers use a stan<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
dard executable memory module format.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The execution offset address in the module header points to a<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
branch table that has six 3-byte entries. Each entry is typically<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a long branch (LBRA) to the corresponding subroutine. The<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
branch table is defined as follows:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-16<BR>
<IMG SRC="file:///C:\CH5~1\GR000042.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000043.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000044.JPG" WIDTH="18" HEIGHT="2">
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager / 5
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ENTRY LBRA INIT Initialize drive<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LBRA READ Read sector<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
,~.  LBRA WRITE Write sector<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LBRA GETSTA Get status<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LBRA SETSTA Set status<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
LBRA TERM Terminate device<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Ensure that each subroutine exists with the C bit of the condi
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tion code register cleared if no error occurred. If an error occurs,
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
set the C bit and return an appropriate error code Register B.
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The rest of this chapter describes the RFB device driver subrou
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tines and their entry and exit conditions.
</UL>
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000045.JPG" WIDTH="18" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-17<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Init </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B><U>Initializes a device and the device's memory
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</U></B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>area.
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000046.JPG" WIDTH="20" HEIGHT="4">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Entry Conditions:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = address of the device descriptor<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = address of the device memory area<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(if any)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
If you want OS-9 to verify disk writes, use the Request
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Memory system call (F$SRqMem) to allocate a 256-byte
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
buffer area in which a sector can be read back and verified
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
after a write.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
You must initialize the device memory area. For floppy
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
diskette controllers, initialization typically consists of:
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. Initializing V.NDRV to the number of drives with which
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the controller works
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
2. Initializing DD.TOT (in the drive table) to a non-zero
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
value so that Sector 0 can be read or written
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
3. Initializing V.TRAK to $FF so that the first seek finds
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Track 0
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
4. Placing the IRQ service routine on the IRQ polling list,
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
using the Set IRQ system call (F$IRQ)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
5. Initializing the device control registers (enabling inter
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
rupts if necessary)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Prior to being called, the device memory area is cleared (set
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
to zero), except for V.PAGE and V.PORT. (These areas con
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tain the 24- bit device address.) Ensure the driver initial
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
izes each drive table appropriately for the type of diskette
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
that the driver expects to be used on the corresponding
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
drive.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
5-18
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000047.JPG" WIDTH="18" HEIGHT="4">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager l 5
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Read </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Reads a 256-byte sector from a disk and
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>,,~ places it in a 256-byte sector buffer.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Entry Conditions:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
B = M
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>SB of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the disk's LSN
</UL>
</UL>
<BR>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = LSB </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the disk's LSN
</UL>
</UL>
<BR>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = address of the path descriptor
</UL>
</UL>
<BR>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U  = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the device memory area
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Exit Conditions:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
B 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= error code </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(if any)
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Additional Information:
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The following is a typical routine for using Read:
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1. Get the sector buffer address from PD.BUF in the path
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor.
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2. Get the drive number from <B>PD.DRV </B>in the path
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor.
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3. Compute the physical disk address from the logical sec
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tor number.
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
4. Initiate the Read operation.
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>5. Copy V.BUSY </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to VMAKE. The driver goes to sleep and
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
waits for the I/O to complete. (The IRQ service routine is
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
responsible for sending a wakeup signal.) After awaken
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ing, the driver tests VMAKE to see if it is clear. If it
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
isn't clear, the driver goes back to sleep.
</UL>
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Whenever you read LSN 0, you must copy the first part of
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
this sector into the proper drive table. (Get the drive num
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ber from PD. DRV in the path descriptor.) The number of
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
bytes to copy is in DD.SIZ. Use the drive number <B>(PD.DRV)
</UL>
</UL>
</UL>
</UL>
</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to compute the offset for the corresponding drive table as
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
follows:
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000048.JPG" WIDTH="300" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-19<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<U>OS'-9 </U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U><I>Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LDA PD.DRV,Y Get the drive number
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LDH #DRVMEN Get the Size of a
</UL>
<BR>
 <UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>drive table
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>MUL
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LEAX DRVHEG,U Get the address of
</UL>
<BR>
 <UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>the f ir5t table
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LEAX D,X Compute the address
</UL>
<BR>
 <UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>of the table
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000049.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000050.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000051.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///C:\CH5~1\GR000052.JPG" WIDTH="302" HEIGHT="1">
<BR>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>5-20<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</TT>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager l 5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
   
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Write </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Writes a 256-byte sector buffer to a disk.<BR>
   </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>Entry Conditions:<BR>
   </B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
B 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= MSB of the disk LSN<BR>
   </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = LSB </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the disk LSN<BR>
   </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the path descriptor<BR>
   </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the device memory area<BR>
   </I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Exit Conditions:<BR>
   </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
   
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
B 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= error code<BR>
   </I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Additional Information:<BR>
   </B>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Following is a typical routine for using Write:<BR>
   
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1. Get the sector buffer address from PD.BUF in the path<BR>
 
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
r  , 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
descriptor.<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2. Get the drive number from <B>PD.DRV </B>in the path descriptor.
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3. Compute the physical disk address from the logical sector
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
number.
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
4. Initiate the Write operation.
</UL>
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5. Copy V.BUSY to VMAKE. The driver then goes to sleep
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and waits for the I/O to complete. (The IRQ service routine
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sends the wakeup signal.) After awakening, the driver tests
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
VMAKE to see if it is clear. If it is not, the driver goes
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
back to sleep. If the disk controller cannot be interrupt-dri
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ven, it is necessary to perform a programmed I/O transfer.
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
6. If PF.VFY in the path descriptor is equal to zero, read the
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sector back in and verify that it is written correctly. Verifi
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cation usually does not involve a comparison of all of the
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
data bytes.
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If disk writes are to be verified, the Init routine must
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
request the buffer in which to place the sector when it is
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
read back. Do not copy LSN 0 into the drive table when
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
reading it back for verification.
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000053.JPG" WIDTH="302" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-21<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Use the drive number (PD.DRU) to compute the offset to
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the corresponding drive table as shown for the Read
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
routine.
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000054.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///C:\CH5~1\GR000055.JPG" WIDTH="22" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-22<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I><U>Random Block File Manager l 5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Getstats and Setstats</B>
</FONT>
</H2>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Reads or changes device's operating parameters.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Entry Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the device memory area<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the path descriptor<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = status code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(if any)<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Get/set the device's operating parameters (status) as speci
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
fied for the Get Status and Set Status system calls. Getsta
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
and Setsta are wild card calls.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
It might be necessary to examine or change the register
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
stack that contains the values of the 6809 register at the
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
time of the call. The address of the register stack is in
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
PD.RGS, which is located in the path descriptor. You can
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
use the following offsets to access any value in the register
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
stack:
</UL>
<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Relative<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Reg. <B>Addr. </B>Size <B>6809 Reg.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$CC $00 1 Condition<BR>
  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Code Reg.<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$D $01 2 Register D<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$A $Ol 1 Register A<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$B $02 1 Register B<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$DP $03 1 Register DP<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$X $04 2 Register X<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$Y $06 2 Register Y<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$U $08 2 Register U<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
R$PC $OA 2 Program Counter<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Register D overlays Registers A and B.<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-23
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000056.JPG" WIDTH="18" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
TerM 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Terminate a device.<BR>
<IMG SRC="file:///C:\CH5~1\GR000057.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = address of the device memory area<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code (if </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
This routine is called when a device is no longer in use in<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the system (when the link count 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
its device descriptor
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
module becomes zero).
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Following is a typical routine for using Term:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1. Wait until any pending I/O is completed.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2. Disable the device interrupts.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3. Remove the device from the IRQ polling list.
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
4. If the Init routine reserved a 256-byte buffer for verify
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ing disk writes, return the memory with the Return
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Sysmem system call (F$SRtMem).
</UL>
</UL>
<BR>
<IMG SRC="file:///C:\CH5~1\GR000058.JPG" WIDTH="18" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-24<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Random Block File Manager / 5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
IRQ Service Routine
</FONT>
</H2>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Services device interrupts.<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The <B>IRQ </B>Service routine sends a wakeup signal to the pro
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
cess indicated by the process ID in VMAKE when the I/O
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
is complete. It then clears VMAKE as a flag to indicate to
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the main program that the IRQ has indeed occurred.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
When the IRQ service routine finishes servicing an inter
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
rupt it must clear the carry and exit with an RTS
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
instruction.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Although this routine is not included in the device driver
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
module branch table and is not called directly by the RBF
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
manager, it is a key routine in interrupt-driven drivers. Its
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
function is to:
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1. Service the device interrupts (receive data from device or
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
send data to it). The IRQ service routine puts its data
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
into and get its data from buffers that are defined in the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
device memory area.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2. Wake up a process that is waiting for I/O to be com
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
pleted. To do this, the routine checks to see if there is a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
process ID in VMAKE (if the bit is non-zero); if so, it
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
sends a wakeup signal to that process.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3. If the device is ready to send more data, and the output
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
buffer is empty, disable the device's 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<I>ready to transmit</I>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
interrupts.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000059.JPG" WIDTH="14" HEIGHT="7">
<IMG SRC="file:///C:\CH5~1\GR000060.JPG" WIDTH="10" HEIGHT="45">
<IMG SRC="file:///C:\CH5~1\GR000061.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-25<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Boot (Bootstra~ Module)</B>
</FONT>
</H2>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Loads the boot </B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
ale 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>into </B>AM.<BR>
<IMG SRC="file:///C:\CH5~1\GR000062.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Entry Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
D = size 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>of the boot file </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(in bytes)<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address at which the boot file was loaded into memory<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
B  
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= error code </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(if any)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The Boot module is not part of the disk driver. It is a sepa
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
rate module that is stored on the boot track of the system
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
disk with OS9P1 and REL.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The bootstrap module contains one subroutine that loads
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the bootstrap file and related information into memory. It
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
uses the standard executable module format with a module
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
type of $C. The execution offset in the module header con
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tains the offset to the entry point of this subroutine.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The module gets the starting sector number and size of the
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9Boot file from LSN 0. OS-9 allocates a memory area
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
large enough for the Boot file. Then, it loads the Boot file
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
into this memory area.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Following is a typical routine for using Boot:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
1. Read LSN 0 from the disk into a buffer area. The Boot
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
module must pick its own buffer area. LSN 0 contains
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the values for DD.BT (the 24-bit LSN of the bootstrap
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
file), and DD.BSZ (the size of the bootstrap file in bytes).
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
2. Get the 24-bit LSN of the bootstrap file from DD.BT.
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
3. Get the size of the bootstrap file from DD.BSZ. The Boot
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
module is contained in one logically contiguous block
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
beginning at the logical sector specified in DD.BT and
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
extending for DD.BSZ/256 + 1 sectors.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-26<BR>
<IMG SRC="file:///C:\CH5~1\GR000063.JPG" WIDTH="20" HEIGHT="4">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Random Block </U>F<U>ile Manage</U>r <U>/ 5
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
4. Use the OS-9 Request Sysmem system call (F$SRqMem)
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
to request the memory area in which the Boot file is
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
,-- loaded.<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5. Read the Boot file into this memory area.
</UL>
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
6. Return the size of the Boot file and its location. Boot file
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
is loaded.
</UL>
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///C:\CH5~1\GR000064.JPG" WIDTH="18" HEIGHT="19">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
5-27<BR>
</FONT>
</BODY>
</HTML>
