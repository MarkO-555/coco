<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=us-ascii">
<TITLE>G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\Ch 8.htm</TITLE>
<META NAME="GENERATOR" CONTENT="ADOBE SYSTEMS, INC. - WORD FOR WORD">
</HEAD>

<BODY>
<BASEFONT SIZE="3">
<P ALIGN="CENTER">
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<U>Chapter 8</U>
</FONT>
</P>
<H2 ALIGN="CENTER">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>System Calls</B>
</FONT>
</H2>
<H2 ALIGN="LEFT">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000000.JPG" WIDTH="302" HEIGHT="1">
<H2 ALIGN="LEFT">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000001.JPG" WIDTH="18" HEIGHT="3">
</FONT>
</H2>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
r<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
System calls are used to communicate between the OS-9 operat
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ing system and assembly-language programs. There are two
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
major types of calls-I/O calls and function calls.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Function calls include user mode calls and system mode calls.
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Each system call has a mnemonic name. Names of I/O calls start
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
with I$. For example, the Change Directory call is I$ChgDir.
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Names of function calls start with F$. For example, the Allocate
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Bits call is F$Al1Bit. The names are defined in the assembler
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
input conditions equate file called OS9Defs.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
System mode calls are privileged. You can execute them only
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
while OS-9 is in the system state (when it is processing another
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
system call, executing a file manager or device driver, and so
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
on).
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
System mode calls are included in this manual primarily for pro
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
grammers writing device drivers and other system-level
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
applications.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>Calling Procedure<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
To execute any system calls, you need to use an SW12
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
instruction:
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. Load the 6809 registers with any appropriate parameters:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
2. Execute an SW12 instruction, followed immediately by a con
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
stant byte, which is the request code. In the references in
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
this chapter, the first line is the system call name (for exam
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ple Close Path) and the second line contains the call's mne
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
monic name (for example I$Close), the software interrupt
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Code 2 (103F), and the call's request code (for example, 8F)
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
in hexadecimal.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
3. After OS-9 processes the call, it returns any parameters in
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the 6809 registers. If an error occurs, the C bit of the condi
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tion code register is set, and Register B contains the appro
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
priate error code. This feature permits a BCS or BCC
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
instruction immediately following the system call to branch
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
either if there is an error or if no error occurs.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-1
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000002.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000003.JPG" WIDTH="26" HEIGHT="1">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
As an example, here is the Close system call:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LDA PATHNUM
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>SW12
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>FCB $8F
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>BCS ERROR
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
You can use the assembler's OS9 
</FONT>
<FONT SIZE="4" FACE="Garamond1" COLOR="#000000">
<I>directive </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
to simplify the call, as
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
follows.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>LDA PATHNUM
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>OS9 I$Clo5e
</UL>
<BR>
<UL>
</TT>
</FONT>
<FONT SIZE="2" FACE="Courier" COLOR="#000000">
<TT>BCS ERROR
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
</TT>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The ASM assembler allows any combination of upper- or lower
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
case letters. The RMA assembler, included in the OS-9 Level
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Two Development Pak, is case sensitive. The names in this man
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ual have been spelled with upper and lower case letters, match
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ing the defs for RMA.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>I/O System Calls<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
OS-9's I/O calls are easier to use than many other systems' I/O
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
calls. This is because the calling program does not have to allo
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
cate and set up 
</FONT>
<FONT SIZE="4" FACE="Garamond1" COLOR="#000000">
<I>file control blocks, sector buffers, </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
and so on.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Instead, OS-9 returns a 1-byte path number whenever a process
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
opens a path to a file or device. Until the path is closed, you can
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
use this path number in later I/O requests to identify the file or
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
device.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
In addition, OS-9 allocates and maintains its own data struc
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tures; so, you need not deal with them.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>System Call Descriptions<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The rest of this chapter consists of the system call descriptions.
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
At the top of each description is the system call name, followed
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
by its mnemonic name, the SW12 code and the request code.
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Next are the call's entry and exit conditions, followed by addi
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tional information about the code where appropriate.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
In the system call descriptions, registers not specified as entry
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
or exit conditions are not altered. Strings passed as parameters
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
are normally terminated with a space character and end-of-line
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
character, or with Bit 7 of the last character set.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-2<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000004.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000005.JPG" WIDTH="24" HEIGHT="6">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000006.JPG" WIDTH="18" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
S<U>ystem Calls / 8<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000007.JPG" WIDTH="304" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If an error occurs on a system call, the C bit of Register CC is<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
set, and Register B contains the error code. If no error occurs,<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the C bit is clear, and Register B contains a value of zero.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>User Mode System Calls (quick Reference<BR>
</B>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Following is a summary of the User Mode System Calls refer<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
enced in this chapter:<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Al1Bit </B>Sets bits in an allocation bit map<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Chain </B>Chains a process to a new module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$CmpNam </B>Compares two names<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$CpyMem </B>Copies external memory<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$CRC </B>Generates a cyclic redundancy check<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$De1Bit </B>Deallocates bits in an allocation bit map<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Exit </B>Terminates a process<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Fork </B>Starts a new process<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$GB1kMp </B>Gets a copy of a system block map<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$GModDr </B>Gets a copy of a module directory<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$GPrDsc </B>Gets a copy of a process descriptor<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Icpt </B>Sets a signal intercept trap<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
F$ID Returns a process ID<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Link </B>Links to a memory module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Load </B>Loads a module from mass storage<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Mem </B>Changes a process's data area size<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$NMLink </B>Links to a module; does not map the mod<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ule into the user's address space<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$NMLoad </B>Loads a module but does not map it into the<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
user's address space<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Perr </B>Prints an error message<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$PrsNam </B>Parses a pathlist name<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SchBit </B>Searches a bit map<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-3
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000008.JPG" WIDTH="20" HEIGHT="4">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Send </B>Sends a signal to a process<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Sleep </B>Suspends a process<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SPrior </B>Sets a process's priority<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SSWI </B>Sets a software interrupt vector<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$STime </B>Sets the system time<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
F$SUser Sets the user ID number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Time </B>Returns the current time<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$UnLink </B>Unlinks a module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$UnLoad </B>Unlinks a module by name<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Wait </B>Waits for a signal<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Attach </B>Attaches an I/O device<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Chgdir </B>Changes a working directory<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Close </B>Closes a path<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Create </B>Creates a new file<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Delete </B>Deletes a file<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$DeletX </B>Deletes a file from the execution directory<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Detach </B>Detaches an I/O device<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Dup </B>Duplicates a path<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$GetStt </B>Gets a device's status<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$MakDir </B>Creates a directory file<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Open </B>Opens a path to an existing <B>file<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Read </B>Reads data from a device<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$ReadLn </B>Reads a line of data from a device -<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Seek </B>Positions a file pointer<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$SetStt </B>Sets a device's status<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$Write </B>Writes data to a device<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>I$WritLn </B>Writes a data line to a device<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-4<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000009.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000010.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000011.JPG" WIDTH="26" HEIGHT="1">
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><U>System Calls l 8
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<B>System Mode Calls (quick Reference<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Following is a summary of the System Mode Calls referenced in<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
this chapter:<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Alarm </B>Sets up an alarm<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$All64 </B>Allocates a 64-byte memory block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Al1HRAM </B>Allocates high <B>RAM<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Al1Img </B>Allocates image RAM blocks<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$AllPrc </B>Allocates a process descriptor<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Al1RAM </B>Allocates RAM blocks<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Al1Tsk </B>Allocates a process task number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$AProc </B>Enters active process queue<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Boot </B>Performs a system bootstrap<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$BtMem </B>Performs a memory request bootstrap<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$C1rBlk </B>Clears the specified block of memory<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$DATLog </B>Converts a DAT block offset to a logical<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
address<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$DelImg </B>Deallocates image RAM blocks<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$De1Prc </B>Deallocates a process descriptor<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$De1RAM </B>Deallocates RAM blocks<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$De1Tsk </B>Deallocates a process task number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$ELink </B>Links modules using a module directory<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
entry<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$FModul </B>Finds a module directory entry<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Find64 </B>Finds a 64-byte memory block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$FreeHB </B>Gets a free high block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$FreeLB </B>Gets a free low block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$GCMDir </B>Compacts module directory entries<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$GProcP </B>Gets a process's pointer<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-5
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000012.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000013.JPG" WIDTH="18" HEIGHT="2">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Tec</U>hnical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000014.JPG" WIDTH="227" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$IODeI </B>Deletes an I/O module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$IOQu </B>Puts an entry into an I/D queue<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$IRQ </B>Makes an entry into IRfa polling table<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$LDABX </B>Loads Register A from O,X in Task B<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$LDAXY </B>Loads A[X,[Y]]<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$LDDDXY </B>Loads D[D + X,[Y]]<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$MapBlk </B>Maps the specified block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Move </B>Moves data to a different address space<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$NProc </B>Starts the next process<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Re1Tsk </B>Releases a task number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$ResTsk </B>Reserves a task number<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$Ret64 </B>Returns a 64-byte memory block<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SetImg </B>Sets a process DAT image<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SetTsk </B>Sets a process's task DAT registers<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SLink  </B>Performs a system link<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SRqMem </B>Performs a system memory request<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SRtMem </B>Performs a system memory return<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$SSvc </B>Installs a function request<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$STABX </B>Stores Register A at O,x in Task B<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$VIRQ </B>Makes an entry in a virtual IRQ polling<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
table<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>F$VModul  </B>Validates a module<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000015.JPG" WIDTH="20" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000016.JPG" WIDTH="26" HEIGHT="7">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000017.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000018.JPG" WIDTH="275" HEIGHT="2">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-6<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>User System Calls l 8
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="5" FACE="Times Roman" COLOR="#000000">
User System Calls
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Allocate Bits  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Sets bits in an<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9 F$Al1Bit 103E 13  allocation bit map<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
D 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= number </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the first bit to set<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = starting address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the allocation bit map<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = number of bits to set<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code (if </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Bit numbers range from 0 to n-1, where n is the number of
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
bits in the allocation bit map.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Warning: Do not issue the Allocate Bits call with Register
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Y set to 0 (a bit count of 0).
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000019.JPG" WIDTH="18" HEIGHT="19">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-7<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Chain
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
OS9 F$Chain 103E 05<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
A<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
B<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
X<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Y<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000020.JPG" WIDTH="16" HEIGHT="9">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Loads and executes a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
new primary module
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
without creating a new
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
process
</FONT>
</P>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= language/type code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= size of the data area </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(in pages); must be at<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= address of the module name or filename<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= parameter area size </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(in pages); defaults to zero if not<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
specified<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>= starting address of the parameter area; </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
must be at<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
least one page<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
B = error 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>code (if </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
~ Chain loads and executes a new primary module, but does
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
not create a new process. A Chain system call is similar to
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
a Fork followed by an Exit, but it has less processing over
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
head. Chain resets the calling process program and data
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
memory areas and begins executing a new primary module.
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
It does not affect open paths. This is a user mode system
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
system call.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Warning: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Make sure that the hardware stack pointer (Reg
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
ister SP) is located in the direct page before Chain exe
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
cutes. Otherwise the system might crash or return a
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
suicide attempt error. This precaution also prevents a sui
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
cide in the event that the new module requires a smaller
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
data area than that in use. Allow approximately 200 bytes
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
of stack space for execution 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
the Chain system call.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Chain performs the following steps:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. It causes OS-9 to unlink the process's old primary
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
module.
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000021.JPG" WIDTH="10" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-8<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000022.JPG" WIDTH="28" HEIGHT="1">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000023.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000024.JPG" WIDTH="24" HEIGHT="7">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000025.JPG" WIDTH="18" HEIGHT="2">
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<B>User System Calls / 8
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond11" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>2. OS-9 </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
parses the name string of the new process's pri
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
mary module (the program that is to be executed first).
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Then, it causes OS-9 to search the system module
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
directory to see if a module with the same name, type,
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
and language is already in memory.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
3. If the module is in memory, it links to it. If the module
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
is not in memory, it uses the name string as the path
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
list of a file to load into memory. Then, it links to the
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
first module in this file. (Several modules can be loaded
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
from a single file.)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
4. It reconfigures the data memory area to the size speci
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
fied in the new primary module's header.
</UL>
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
5. It intercepts and erases any pending signals.
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The following diagram shows how Chain sets up the
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
data memory area and registers for the new module.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Y (highest address)
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Parameter Area
</UL>
</UL>
<BR>
 <UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
X,SP
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Data Area
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Direct Page
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V,DP (lowest address)
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>D = parameter area size<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>PC = module entry point absolute address<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = F = 0, I = 0; others are undefined<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Registers Y and U (the top-of-memory and bottom-of-memory
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
pointers, respectively) always have values at page boundaries. If
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the parent process does not specify a size for the parameter area,
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the size (Register D) defaults to zero. The data area must be at
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
least one page long.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
(For more information, see the Fork system call.)<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-9
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000026.JPG" WIDTH="17" HEIGHT="2">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Compare Names 
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Compares two strings<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
OS9 F$CmpNam 103E 11 for a match<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>B = length of stringl<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>X = address of stringl<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Y = address of string2<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = carry clear if the strings match<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
The Compare Names call compares two strings and indi
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
cates whether they match. Use this call with the Parse
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Name system call. The second string must have the most
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
significant bit (Bit 7) of the last character set.
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000027.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000028.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>8-10<BR>
</I>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
User System Calls / 8<BR>
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Copy External
</FONT>
</H2>
<H2 ALIGN="LEFT">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Memory
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
OS9 F$CpyMem<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
103E 1B<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>D = DAT image pointer<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = offset in block to begin copy<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = byte count<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U  = caller's destination buffer<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = C bit set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = appropriate error code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Reads external memory<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
into the user's buffer<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
for inspection<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000029.JPG" WIDTH="22" HEIGHT="5">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000030.JPG" WIDTH="18" HEIGHT="3">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000031.JPG" WIDTH="10" HEIGHT="5">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
You can view any system memory through the use of the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Copy External Memory call. The call assumes X is the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
address of the 64K space described by the DAT image
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
given.
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
If you pass the entire DAT image of a process, place a value
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
in the X Register that equals the address in the process
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
space. If you pass a partial DAT image (the upper half),
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
then place a value in Register X that equals the offset from
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the beginning of the DAT image ($8000).
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The support module for this call is OS9p2.<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000032.JPG" WIDTH="10" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000033.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
8-11<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000034.JPG" WIDTH="179" HEIGHT="3">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
CRC
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9 F$CRC 103E 17<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
X<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Y<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
U<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000035.JPG" WIDTH="8" HEIGHT="24">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Calculates the CRC of<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
a module<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>starting byte address<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>number </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>bytes<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>address of the </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>3-byte CRC accumulator<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Updates the CRC accumulator.<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The CRC call calculates the CRC (cyclic redundancy count)
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
for use by compilers, assemblers, or other module
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
generators.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; The calculation begins at the 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>starting byte address </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
and con<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
tinues over the specified 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>number </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>bytes.<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; You need not cover an entire module in one call, since the
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CRC can be accumulated over several calls. The CRC accu
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
mulator can be any 3-byte memory area. You must initial
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ize it to $FFFFFF before the first CRC call.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The updated accumulator does not include the last three
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
bytes of the module. The three CRC bytes are stored there.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
0 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
Be sure to initialize the CRC accumulator only once for<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
each module checked by CRC.<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000036.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-12<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000037.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000038.JPG" WIDTH="20" HEIGHT="5">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000039.JPG" WIDTH="24" HEIGHT="5">
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>User Syste</U>m <U>C</U>alls l 8
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Deall<U>ocate </U>Bits </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>Clears allocation map<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9 F$De1Bit 103E 14  bits<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>D = number of the first bit to set<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>X = starting address of the allocation bit map<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>Y = number of bits to set<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Exit Conditions: 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; The Deallocate Bits call clears bits in the allocation bit
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
map pointed to by Register X. Bit numbers are in the
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
range 0 to 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>n-1, </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
where 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>n is </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
the number of bits in the alloca
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
tion bit map.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Warning: Do not call Deallocate Bits with Register Y set
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
to 0 (a bit count of 0).
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-13<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000040.JPG" WIDTH="44" HEIGHT="1">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Exit
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9 F$Exit 103E 06<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<I>B = status code to return to the parent<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The process is terminated.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000041.JPG" WIDTH="14" HEIGHT="7">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Terminates the calling<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
process<BR>
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
The Exit system call is the only way a process can termi
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
nate itself. Exit deallocates the process's data memory
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
area, and unlinks the process's primary module. It also
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
closes all open paths automatically.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; The Wait system call always returns to the parent the sta
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
tus code passed by the child in its Exit call. Therefore, if
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the parent executes a Wait and receives the status code, it
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
knows the child has died. This is a user mode system call.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Exit unlinks only the primary module. Unlink any module
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
that is loaded or linked to by the process before calling
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Exit.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-14<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000042.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000043.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000044.JPG" WIDTH="18" HEIGHT="3">
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>User System Calls l 8
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Fork  
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Creates a child process<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
OS9 F$Fork 103E 03<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = language/type code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = size of the optional data area </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(in pages)<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the module name or filename </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(See the follow
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ing example.)
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = size of the parameter area </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(in pages); defaults to zero if
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
not specified
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = starting address of the parameter area; </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
must be at
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
least one page
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the last byte of the name + 1 </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(See the fol
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
lowing example)
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
A = new process IO number<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000045.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(if any)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Fork creates a new process, a child of the calling process.
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Fork also sets up the child process's memory and 6809 reg
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
isters and standard 1/O paths.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Before the Fork call:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
T E S T $OD
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
X
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000046.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-15<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
After the Fork call:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
T 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<U>E ]_S ] </U>T <U>$OD]
</UL>
<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
X
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; This is the sequence of Fork's operations:<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. OS-9 parses the name string of the new process's pri
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
mary module (the program that OS-9 executes first).
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Then, it searches the system module directory to see if
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the program already is in memory.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
2a. The next step depends on whether or not the program is
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
already in memory. If the program is in memory, OS-9
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
links the module to the process and executes it.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
b. If the program is not in memory, OS-9 uses the name
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
as the pathlist of the file that is to be loaded into mem
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ory. Then, the first module in this file is linked to and
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
executed. (Several modules can be loaded from one file.)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
3. OS-9 uses the primary module's header to determine
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the initial size of the process's data area. It then tries
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
to allocate a contiguous RAM area of that size. (This
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
area includes the parameter passing area, which is cop
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
ied from the parent process's data area.)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
4. The new process's data memory area and registers are
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
set up as shown in the following diagram. OS-9 uses
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the execution offset given in the module header to set
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the program counter to the module's entry point.
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Y
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Parameter Area X ,SP (highest address)
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Data Area
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000047.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000048.JPG" WIDTH="22" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000049.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Direct Page<BR>
 
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
V,DP (lowest address)<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-16<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000050.JPG" WIDTH="285" HEIGHT="2">
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>User System Calls / 8
</UL>
</UL>
</UL>
</UL>
<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>D = size of the parameter area<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>PC = module entry point absolute address<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>CC = F = 0, I = 0, other condition code flags are undefined<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Registers Y and U (the top-of-memory pointer and bottom</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>of-memory pointer, respectively) always have values at page</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>boundaries.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>As stated earlier, if the parent does not specify the size of</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>the parameter area, the size defaults to zero. The minimum</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>overall data area size is one page.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>When the shell processes a command line, it passes a</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>string in the parameter area. This string is a copy of the</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>parameter part of the command line. To simplify string</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>oriented processing, the shell also inserts an end-of-line</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>character at the end of the parameter string.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Register X points to the start byte of the parameter string.</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>If the command line includes the optional memory size</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>specification </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>(#n </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
or 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>#nK), </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>the shell passes that size as the</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<B>requested memory size when executing the Fork.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>If any of the preceding operations is unsuccessful, the Fork</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>is terminated and OS-9 returns an error to the caller.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>The child and parent processes execute at the same time</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>unless the parent executes a Wait system call immediately</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>after the Fork. In this case, the parent waits until the child</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>dies before it resumes execution. </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Be careful when recursively calling a program that uses</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>the Fork system call. Another child can be created with</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>each new execution. This continues until the process table</B>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>becomes full.</B>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Do not fork a process with a memory size of 0.<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000051.JPG" WIDTH="24" HEIGHT="7">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000052.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>8-17<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Get System 
</FONT>
<FONT SIZE="4" FACE="Garamond1" COLOR="#000000">
Gets a copy of the<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Block Map 
</FONT>
<FONT SIZE="4" FACE="Garamond1" COLOR="#000000">
system block map<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Garamond" COLOR="#000000">
OS9 F$GB1kMp 103E 19<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Garamond" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = pointer to the 1024-byte buffer<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Garamond" COLOR="#000000">
Exit Conditions:<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>D = number of bytes per block </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
($2000) (MMU block size
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
dependent)
</UL>
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = system memory block map size<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Garamond" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code (if </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Garamond" COLOR="#000000">
Additional Information:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Get System Block Map call copies the system's memory
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
block map into the user's buffer for inspection. The OS-9
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
MFREE command uses this call to find out how much free
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
memory exists.
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The support module for this call is OS9p2.<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000053.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000054.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-18<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>User System Calls / 8<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Get Module
</FONT>
</H2>
<H2 ALIGN="LEFT">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Directory
</FONT>
</H2>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
F$GModDr 103E 1A<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
X<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Y<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
U<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Gets a copy of the<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
system module<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
directory<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000055.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>pointer to the 2048-byte buffer<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>end of copied module directory<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>start address of system module directory<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code (if </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Get Module Directory call copies the system's module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directory into the user's buffer for inspection. The OS-9<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
MDIR command uses this call to read the module<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directory.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The support module for this call is OS9p2.<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000056.JPG" WIDTH="18" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000057.JPG" WIDTH="20" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-19<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000058.JPG" WIDTH="50" HEIGHT="3">
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000059.JPG" WIDTH="306" HEIGHT="3">
<BR>
<H2 ALIGN="LEFT">
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Get Process</B>
</FONT>
</H2>
<H2 ALIGN="LEFT">
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Descriptor</B>
</FONT>
</H2>
</B><FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
F$GPrDsc 103E 18<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
A<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
X<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Gets a copy of the<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
process's process<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
descriptor<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000060.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>requested process ID<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>pointer to a 512 -byte buffer<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set on error<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = error code (if </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
any)<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The Get Process Descriptor call copies a process descriptor<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
into the calling process's buffer for inspection. The data in<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the process descriptor cannot be changed. The OS-9 PROCS<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
command uses this call to get information about each exist<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ing process.<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The support module for this call is OS9p2.<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000061.JPG" WIDTH="22" HEIGHT="5">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-20<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000062.JPG" WIDTH="36" HEIGHT="3">
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B><U>User System Calls / 8
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
<B>Intercept  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Sets a signal intercept<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>OS9 F$Ic t 103E 09  trap<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Entry Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the intercept routine<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = starting address of the routine's memory area<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Signals sent to the process cause the intercept routine to be
</FONT>
</P>
<P ALIGN="JUSTIFY">
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
called instead of the process being killed.
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Intercept tells OS-9 to set a signal intercept trap. Then,
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
whenever the process receives a signal, OS-9 executes the
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
process's intercept routine.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Store the address of the signal handler routine in Register
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
X and the base address of the routine's storage area in
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Register U.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Once the signal trap is set, OS-9 can execute the intercept
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
routine at any time because a signal can occur at any
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
time.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Terminate the intercept routine with an RTI instruction.<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
If a process has not used the Intercept system call to set a
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
signal trap, the process terminates if it receives a signal.
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
This is the order in which F$Icpt operates:
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. When the process receives a signal, OS-9 sets Registers
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
U and B as follows:
</UL>
</UL>
<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = starting address of the intercept routine's
</UL>
</UL>
<BR>
 <UL>
<UL>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>memorv area
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="1" FACE="Times Roman" COLOR="#000000">
V
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
B = signal 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>code </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(process's termination status)
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<B>Note: </B>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
The value of Register DP cannot be the
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
same as it was when the Intercept call was
</UL>
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
made.
</UL>
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
2. After setting the registers, OS-9 transfers execution to
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
the intercept routine.
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000063.JPG" WIDTH="18" HEIGHT="2">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000064.JPG" WIDTH="302" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-21<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Garamond" COLOR="#000000">
Get ID 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Return's a caller's<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>OS9 F$ID 103E OC process ID and user ID<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Entry Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
None<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = process ID<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = user ID<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>process ID is </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
a byte value in the range 1 to 255. OS-9
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
assigns each process a unique process ID.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
The 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>user ID </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
is an integer from 0 to 65535. It is defined in
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the system password file, and is used by the file security
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
system and a few other functions. Several processes can
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
have the same user ID.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
On a single user system (such as the Color Computer 3 ),
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
the user ID is inherited from CC3go, which forks the initial
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
shell.
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000065.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000066.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-22<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>Use</U>r Sy<U>ste</U>m <U>C</U>a<U>lls </U>/ <U>8
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="6" FACE="Times Roman" COLOR="#000000">
Link 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Links to a memory<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>OS9 F$Link 103E 00 module that has the<BR>
  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>specified name,<BR>
  </B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>language, and type<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Entry Conditions:<BR>
 </B>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = type/language byte<BR>
<UL>
<UL>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the module name </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(See the following
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
example.)
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Exit Conditions:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = type/language code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = attributes / revision level (if </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
no error)<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the last byte of the module name + 1 </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
(See
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
the following example.)
</UL>
</UL>
</UL>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = module entry point absolute address<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = module header absolute address<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000067.JPG" WIDTH="18" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Error Output:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
CC = C bit set 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>if </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
error encountered<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<B>Additional Information:<BR>
</B>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; The module's link count increases by one whenever Link
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
references its name. Incrementing in this manner keeps
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
track 
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
how many processes are using the module.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
If the module requested is not shareable (not re-entrant),
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
only one process can link to it at a time.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
Before the Link call:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
T E S T 
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<U>$OD]
</UL>
<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Garamond1" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
t _
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
X
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
After the Link call:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
T E S T $OD<BR>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
X
</UL>
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000068.JPG" WIDTH="56" HEIGHT="6">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000069.JPG" WIDTH="221" HEIGHT="1">
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
8-23<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I><U>OS-9 Technical Reference<BR>
</U></I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; This is the order in which the Link call operates:<BR>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
1. OS-9 searches the module directory for a module that
</UL>
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
has the specified name, language, and type.
</UL>
</UL>
<BR>
<BR>
<P ALIGN="JUSTIFY">
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
2. If OS-9 finds the module, the address of the module's
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
header is returned in Register U, and the absolute
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
address of the module's execution entry point is
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
returned in Register Y. (This, and other information is
</UL>
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
contained in the module header.)
</UL>
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<P ALIGN="JUSTIFY">
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; If OS-9 doesn't find the module-or if the type/language
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
codes in the entry and exit conditions don't match-OS-9
</UL>
</FONT>
</P>
<P ALIGN="JUSTIFY">
<UL>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
returns one of the following errors:
</UL>
</FONT>
</P>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Module not found
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Module busy (not shareable and in use)
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
&middot; Incorrect or defective module header
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000070.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000071.JPG" WIDTH="20" HEIGHT="4">
<BR>
</FONT>
<FONT SIZE="3" FACE="Garamond" COLOR="#000000">
8-24<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
<U>User System C</U>alls' l 8
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Load  
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Loads a module or<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
OS9 F$Load 103E Ol  modules from a file<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Entry Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = language/type code; 0 = any </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
language/type<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the pathlist (filename) </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(See the following
</UL>
</UL>
<BR>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
example.)
</UL>
</UL>
</UL>
<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Exit Conditions:<BR>
<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>A = language/type code<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>B = attributes l revision level (if </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
no error)<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>X = address of the last byte of the pathlist </I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(filename) + 1<BR>
 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
(See the following example.)<BR>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>Y = primary module entry point address<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>U = address </I>
</FONT>
<FONT SIZE="3" FACE="Tahoma1" COLOR="#000000">
<I>of </I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<I>the module header<BR>
</I>
</FONT>
<FONT SIZE="2" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Error Output:<BR>
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
CC = carry set if error encountered<BR>
<BR>
</FONT>
<FONT SIZE="4" FACE="Times Roman" COLOR="#000000">
Additional Information:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The Load call loads one or more modules from the file spec
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
ified by a complete pathlist or from the working execution
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
directory (if an incomplete pathlist is given).
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; The file must have the execute access mode bit set. It also
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
must contain one or more with proper module headers.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; OS-9 adds all modules loaded to the system module direc
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
tory. It links the first module read. The exit conditions
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
apply only to the first module loaded.
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Before the Load call:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
/ D 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>10 </U>/ A 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
C C T S R C V <U>$OD]
</UL>
<BR>
</U>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000072.JPG" WIDTH="246" HEIGHT="22">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000073.JPG" WIDTH="42" HEIGHT="117">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-25<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<I>OS-9 Technical Reference<BR>
</I>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
After the Load call:<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
/ D 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
<U>10 </U>/ A 
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
C C T S R C ZT $OD
</UL>
<BR>
<BR>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
X
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
Possible errors:
</UL>
<BR>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Module directory full
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Memory full
</UL>
<BR>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
&middot; Errors that occur on the Open, Read, Close, and Link
</UL>
<BR>
<UL>
<UL>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
system calls
</UL>
</UL>
<BR>
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000074.JPG" WIDTH="20" HEIGHT="4">
<IMG SRC="file:///G:\MYDOCU~1\RTSIOC~1\OS-9\OS9_6X09\MANUALS\LEVEL2~1\TECHIN~1\HTML\CH8~1\GR000075.JPG" WIDTH="18" HEIGHT="3">
<BR>
</FONT>
<FONT SIZE="3" FACE="Times Roman" COLOR="#000000">
8-26<BR>
</FONT>
</BODY>
</HTML>
