---                                  COMPUTERWARE MACRO ASSEMBLER  PAGE 1                                                                                               0001 * 6809 MAC Assembler code                0002 * RELEASED TO PUBLIC DOMAIN -- Use at your own risk                0003 * CoCo IR Remote Control input code                0004 *   Assumes RS #276-137 Infrared Detector Module wired to                0005 *   a joystick button input.                0006 * RL Hawkins    DELPHI BHAWKINS                0007 * Original: March 1991                0008 * Modified: Jan   1992                0009 *FF00            0010 FIRE2  EQU                  $FF00   PIA address for "fire" button.                0011 * BASIC USR INTERFACE:B3ED            0012 USRFRM EQU                  $B3ED   Get USR argB4F4            0013 USRTO  EQU                  $B4F4   Return USR val                0014 *                0015 * Note -- RTMAX must be less than 256:00C9            0016 RTMAX  EQU                  201     Max number of entries (bytes) in run-length table.5000            0017 BUFST  EQU                  $5000        Raw data buffer --7000            0018 BUFEND EQU                  $7000              -- past end of raw data buffer7100            0019 RUNTBL EQU                  $7100   Run-length table0021            0020 TABLEN EQU                  33      Expected table length = 2*16 bits + STOP pulse003C            0021 HILO   EQU                  60      Count that divides "short" from "long"                0022 *   Note -- this is 1 for the right joystick. To use the left                0023 *   joystick, change it to 2:0001            0024 FIREBIT EQU                 1       Mask for "fire" button's bit in the PIA byte.                0025 *7400            0026        ORG   $7400             Relocatable code, but tables are fixed for speed.                0027 *                0028 *                0029 * CODE BEGINS:                0030 * Read IR input, determine run lengths, store at RUNTBL.7400 F7FFD8     0031 REMOTE STB   $FFD8             Assure slow (0.895 MHz) speed7403 8E5000     0032        LDX   #BUFST           Byte block address. Should have 8K or so available.7406 8D13       0033        BSR   IRRAW             Raw sampled data.7408 8E5000     0034        LDX   #BUFST           Point to start of sample.740B 8D28       0035        BSR   MARK               Mark end of valid sample with 0 byte.740D 8E5000     0036        LDX   #BUFST           Point to start of sample.7410 8D3A       0037        BSR   RUNS               Generate run-length table from sample.7412 8D6D       0038        BSR   MKWORD           Generate 16-bit word from run-length table7414 EC8D009A   0039        LDD   WORDHI,PCR   Get word7418 7EB4F4     0040        JMP   USRTO             Back to BASIC                0041 *                0042 * ***********************************************************************                0043 * IR remote raw input                0044 * Reads and stores PIA byte as fast as possible, for later analysis.                0045 *  IN:  X <- Starting address of the byte block. (Block ends at #BUFEND.)                0046 *USES:  A, Y.                0047 *741B 108EFF00   0048 IRRAW  LDY   #FIRE2           PIA address. Held in Y for speed (one cycle!)741F 3401       0049        PSHS  CC                  Save interrupts.7421 1A50       0050        ORCC  #$50              Disable interrupts.                0051 * Wait for IR signal to start.7423 A6A4       0052 IRWAIT LDA   ,Y                   (4~)7425 8501       0053        BITA  #FIREBIT      (2~)    (9~) overhead = 0.01 mSec7427 26FA       0054        BNE   IRWAIT           (3~)                0055                 0056 * Read and store PIA status:7429 A6A4       0057 IRREAD LDA   ,Y                   (4~)742B A780       0058        STA   ,X+                 (6~)---                                  COMPUTERWARE MACRO ASSEMBLER  PAGE 2                                                                                               0059 * Note: the end-of-buffer address is hard-coded as an IMMEDIATE value                0060 *   for maximum speed in the sample loop.742D 8C7000     0061        CMPX  #BUFEND        (4~)    (17~) overhead = 0.019 mSec7430 2DF7       0062        BLT   IRREAD           (3~)            (or 5263 loops in 0.1 sec)7432 3501       0063        PULS  CC                  Restore interrupts.7434 39         0064        RTS                0065 *                0066 * Determine the number of actual data bytes in the byte buffer at BUFST,                0067 *    Mark end with a 0 byte.                0068 * End of data is assumed to be more than 255 bytes of "off".7435 A680       0069 MARK   LDA   ,X+7437 8501       0070        BITA  #FIREBIT7439 27FA       0071        BEQ   MARK               Look for an "off" (high bit 0) byte.                0072 * Got an "off":743B 5F         0073        CLRB                         Consecutive off-byte counter.743C 1F12       0074        TFR   X,Y                 Save X in case this the end of data.743E 5C         0075 MRKLOP INCB743F 2708       0076        BEQ   ENDMRK           256th "off" byte -- end of data.                0077 *7441 A680       0078        LDA   ,X+                 Next byte.7443 8501       0079        BITA  #FIREBIT7445 26F7       0080        BNE   MRKLOP           Loop while "off".                0081 * Found an "on" byte -- so go back and look for another "off":7447 20EC       0082        BRA   MARK7449 6F3F       0083 ENDMRK CLR   -1,Y               Mark end of data with a zero byte.744B 39         0084        RTS                0085 *                0086 * Fill RUNTBL with run lengths.                0087 *  IN: X <- address of the byte table. Byte table is 0-terminated.                0088 * USE: A, B, Y744C 8D13       0089 RUNS   BSR   CLRTBL           Initialize744E 108E7100   0090        LDY   #RUNTBL7452 A680       0091 RUNSLP LDA   ,X+7454 270A       0092        BEQ   RUNSEN           0 byte marks end of byte table.7456 8D17       0093        BSR   RUN                 Get next run length in B7458 6CA4       0094        INC   ,Y                   Increment run table index745A A6A4       0095        LDA   ,Y                   Get incremented index745C E7A6       0096        STB   A,Y                 Store run length in table at index745E 20F2       0097        BRA   RUNSLP           Do it again7460 39         0098 RUNSEN RTS                0099 *                0100 * Clear the run-length table7461 108E7100   0101 CLRTBL LDY   #RUNTBL7465 4F         0102        CLRA7466 5F         0103        CLRB7467 A7A5       0104 CLRLOP STA   B,Y7469 5C         0105        INCB746A C1C9       0106        CMPB  #RTMAX          End of table yet?746C 26F9       0107        BNE   CLRLOP746E 39         0108        RTS                0109 *                0110 * Get one run-length. Number of identical bytes, starting at X.                0111 *  IN: X -> address of byte block.                0112 *      A -> byte value which must be matched.                0113 * OUT: X <- address of first different byte.                0114 *      B <- number of identical bytes.746F 5F         0115 RUN    CLRB7470 A78D000C   0116        STA   BYTE1,PCR     Byte value for comparison7474 A680       0117 RUNLOP LDA   ,X+---                                  COMPUTERWARE MACRO ASSEMBLER  PAGE 3                                                                               7476 5C         0118        INCB7477 A18D0005   0119        CMPA  BYTE1,PCR747B 27F7       0120        BEQ   RUNLOP747D 301F       0121        LEAX  -1,X              Adjust back to first different byte.747F 39         0122        RTS                0123 *7480            0124 BYTE1  RMB                  1       Scratch storage.                0125 *                0126 * Generate a 16-bit word from the run table:7481 6F8D002D   0127 MKWORD CLR   WORDHI,PCR7485 6F8D002A   0128        CLR   WORDLO,PCR7489 F67100     0129        LDB   RUNTBL748C C121       0130        CMPB  #TABLEN        748E 2621       0131        BNE   DONE               Wrong table length -- error                0132 * Correct table length -- continue:7490 8E7100     0133        LDX   #RUNTBL7493 3002       0134        LEAX  2,X                Index of first "off" gap                0135 * High byte:7495 C608       0136        LDB   #8                   Bits per byte7497 863C       0137        LDA   #HILO             For comparison7499 A184       0138 HILOOP CMPA  ,X                  Set carry if > HILO749B 698D0013   0139        ROL   WORDHI,PCR   Roll in carry bit749F 3002       0140        LEAX  2,X                Skip to next "off" gap74A1 5A         0141        DECB74A2 26F5       0142        BNE   HILOOP                0143 * Low byte:74A4 C608       0144        LDB   #874A6 A184       0145 LOLOOP CMPA  ,X74A8 698D0007   0146        ROL   WORDLO,PCR74AC 3002       0147        LEAX  2,X74AE 5A         0148        DECB74AF 26F5       0149        BNE   LOLOOP74B1 39         0150 DONE   RTS74B2            0151 WORDHI RMB                  174B3            0152 WORDLO RMB                  1                0153 *7400            0154        END   REMOTE         NO ERROR(S) DETECTED   SYMBOL TABLE:BUFEND 7000     BUFST  5000     BYTE1  7480     CLRLOP 7467     CLRTBL 7461     DONE   74B1     ENDMRK 7449     FIRE2  FF00     FIREBI 0001     HILO   003C     HILOOP 7499     IRRAW  741B     IRREAD 7429     IRWAIT 7423     LOLOOP 74A6     MARK   7435     MKWORD 7481     MRKLOP 743E     NARG   0000     REMOTE 7400     RTMAX  00C9     RUN    746F     RUNLOP 7474     RUNS   744C     RUNSEN 7460     RUNSLP 7452     RUNTBL 7100     TABLEN 0021     USRFRM B3ED     USRTO  B4F4     WORDHI 74B2     WORDLO 74B3                     0155 *         NO ERROR(S) DETECTED   SYMBOL TABLE:---                                  COMPUTERWARE MACRO ASSEMBLER  PAGE 4                                                                               BUFEND 7000     BUFST  5000     BYTE1  7480     CLRLOP 7467     CLRTBL 7461     DONE   74B1     ENDMRK 7449     FIRE2  FF00     FIREBI 0001     HILO   003C     HILOOP 7499     IRRAW  741B     IRREAD 7429     IRWAIT 7423     LOLOOP 74A6     MARK   7435     MKWORD 7481     MRKLOP 743E     NARG   0000     REMOTE 7400     RTMAX  00C9     RUN    746F     RUNLOP 7474     RUNS   744C     RUNSEN 7460     RUNSLP 7452     RUNTBL 7100     TABLEN 0021     USRFRM B3ED     USRTO  B4F4     WORDHI 74B2     WORDLO 74B3     CMD=REMOTE/PY                                                  