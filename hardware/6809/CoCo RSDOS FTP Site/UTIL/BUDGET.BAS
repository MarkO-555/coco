10 ' BUDGET PROGRAM20 ' 30 ' THE OBJECT OF THIS PROGRAM IS TO BUILD THREE DIRECT ACCESS40 ' FILES: ONE, A LISTING OF A BALANCED BUDGET, ANOTHER, A LISTING50 ' OF TRANSACTIONS, AND THE THIRD, A LISTING OF THE UPDATED60 ' BUDGET.  THE PROGRAM ALLOWS FOR CARRYOVER FROM THE PREVIOUS70 ' PERIOD'S BUDGET. A JOURNAL CAN BE PRINTED OUT GIVING A LIST80 ' OF THE BUDGET, EXPENSES, AND BALANCES. (NOTE: AS WRITTEN, 90 ' THIS PROGRAM REQUIRES A PRINTER ON WHICH TO OUTPUT THE JOURNAL.100 ' A PRINTER120 '130 '140 ' MAIN MODULE OF PROGRAM150 '160 CLS170 PRINT @ 106, "SELECTIONS:"180 PRINT @ 165, "1) BUILD BUDGET"190 PRINT @ 197, "2) UPDATE AN ACCOUNT"200 PRINT @ 229, "3) PRINT OUT A JOURNAL"210 PRINT @ 261, "4) END JOB"220 PRINT @ 329, "1,2,3,OR 4?"230 AN$=INKEY$240 IF AN$="" THEN 230250 ON VAL(AN$) GO SUB 360, 910, 1410, 1940260 GOTO 160270 '280 ' THIS SUBROUTINE BUILDS THE BUDGET FILE (CALLED290 ' BUDGET/ORG), AND BUILDS OR UPDATES THE FILE BUDGET/UPD.300 ' IT ALLOWS YOU TO INPUT THE START DATE OF THE BUDGET310 ' AND THE TOTAL AMOUNT YOU HAVE TO DIVIDE UP TO ACCOUNTS.320 ' TENTATIVE AMOUNTS ARE ENTERED FOR EACH ACCOUNT AND A330 ' RUNNING BALANCE IS KEPT TO ADVISE YOU OF THE AMOUNT340 ' LEFT IN YOUR TOTAL BUDGET.350 '360 OPEN "D", #1, "BUDGET/ORG", 5370 OPEN "D", #2, "BUDGET/UPD", 5380 FIELD #1, 5 AS OAMT$390 FIELD #2, 5 AS UPDAMT$400 GOSUB 1780410 IF LOF(2) = 0 THEN 470420 FOR I = 1 TO 9430 GET #2,I440 AMT (I) = CVN(UPDAMT$)450 PTOT = PTOT+ AMT(I)460 NEXT I470 CLS480 PRINT @ 130, "DATE(MM/DD/YY):"490 PRINT @ 96500 INPUT "DATE (MM/DD/YY):"; DATE$510 PRINT @ 162, "PROJECTED INCOME FROM:"520 INPUT " SALARY:"; SAL530 INPUT " OTHER:";OTHER540 BTOT = SAL + OTHER550 CLS560 PRINT @ 9, "CURRENT BUDGET"570 PRINT " ACCT# DESCRIPTION BALANCE"580 SUMBUD = 0590 FOR I = 1 TO 9600 PRINT USING "####% % %        %####.##-";ACNO(I); SPACE$;DESC$(I);AMT(I)610 SUMBUD=SUMBUD+AMT(I)620 NEXTI630 REMPRINT@86,USING"$####.##-";AMT(1)640 PRINT@385,USING"%             %$$####.##";"REMAINING MONEY:";BTOT-(SUMBUD-PTOT)650 PRINT@451,"ENTER ACCT# OF ITEM TO BE"660 INPUT"  CHANGED (000 TO QUIT)";AN670 IF AN=0 THEN 750680 CLS690 N = AN / 100700 PRINT@105,ACNO (N)710 PRINT@138, DESC$(N)720 PRINT@170,"$";AMT(N)730 PRINT:INPUT"       NEW     AMOUNT";AMT(N)740 GOTO 550750 DATE=VAL(LEFT$(DATE$,2)+MID$(DATE$,4,2)+RIGHT$(DATE$,2))760 LSET OAMT$=MKN$(DATE)770 PUT #1,1780 FORI=1TO9790 LSET OAMT$=MKN$(AMT(I))800 LSET UPDAMT$=MKN$(AMT(I))810 PUT #1, I+1820 PUT #2, I830 NEXTI840 CLOSE850 RETURN860 '870 ' THIS SUBROUTINE BUILDS A TRANSACTION FILE CALLED TFILE/DAT880 ' THAT CONTAINS ANY UPDATES TO THE BUDGET, AND UPDATES THE890 ' FILE BUDGET/UPD.900 '910 OPEN "D", #1, "BUDGET/UPD",5920 OPEN "D", #2,"TFILE/DAT", 36930 FIELD#1, 5 AS UPDAMT$940 FIELD#2, 3 AS ACNO$, 8 AS DATE$, 20 AS DESC$, 5 AS TAMT$950 FOR I =1TO9960 GET#1,I970 AMT(I)=CVN(UPDAMT$)980 NEXT I990 GOSUB 17801000 CLS1010 SUMBUD=01020 PRINT@9,"CURRENT BUDGET"1030 PRINT"ACCT# DESCRIPTION  BALANCE"1040 FOR I=1TO91050 PRINTUSING"####% % %             %####.##-";ACNO(I);SPACES$;DESC$(I);AMT(I)1060 SUMBUD=SUMBUD+AMT(I)1070 NEXTI1080 PRINT@86,USING"$####.##-";AMT(1)1090 PRINT @ 387,USING "%               %$$###.##";"TOTAL BALANCE";SUMBUD1100 PRINT@451, "ENTER ACCT# OF ITEM TO BE"1110 INPUT"   UPDATED (000 TO QUIT)";AN1120 IF AN=0THEN13101130 CLS1140 N=AN/1001150 PRINT@ 95, AN1160 PRINT DESC$ (N)1170 PRINT USING "%               %$$###.##";"CURRENT BALANCE";AMT (N)1180 PRINT:INPUT "DATE(MM/DD/YY)";DT$1190 PRINT"DESCRIPTION OF TRANSACTION:"1200 INPUT DS$1210 PRINT"AMOUNT OF TRANSACTION:"1220 PRINT"(NEGATIVE NUMBER FOR A CREDIT)"1230 INPUT TRANS1240 AMT(N)=AMT(N)-TRANS1250 LSET ACNO$=RIGHT$(STR$(AN),3)1260 LSET DATE$=DT$1270 LSET DESC$=DS$1280 LSET TAMT$=MKN$(TRANS)1290 PUT #2, LOF (2)+11300 GOTO10001310 FOR I=1TO91320 LSET UPDAMT$=MKN$(AMT(I))1330 PUT #1, I1340 NEXT I1350 CLOSE1360 RETURN1370 '1380 'THIS SUBROUTINE DISPLAYS A JOURNAL LISTING THE1390 BUDGET, TRANSACTIONS, AND BALANCES1400 '1410 OPEN "D", #1, "BUDGET/ORG", 51420 FIELD #1, 5 AS AMT$1430 OPEN "D", #2, "TFILE/DAT", 361440 FIELD #2, 3 AS TACNO$, 8 AS TDATE$, 20 AS TRDESC$, 5 AS TMT$1450 GOSUB17801460 CLS1470 PRINT@172,"ONE MOMENT...":FOR ZZ=1 TO 500:NEXTZZ1480 GET #1, 11490 DATE$=STR$(CVN(AMT$))1500 IF LEN(DATE$) <6 THEN DATE$=" "+DATE$1510 DATE$=LEFT$(DATE$,2)+"/"+MID$(DATE$,3,2)+"/"+RIGHT$(DATE$,2)1520 PRINT"BUDGET FOR THE PEROID"1530 PRINT"STARTING ";DATE$1540 PRINT:PRINT1550 PRINT"ACCOUNT OR"1560 PRINT"ACCOUNT","TRANSACTION"1570 PRINT"NUMBER","DATE","DESCRIPTION","TRANSACTION","BALANCE"1580 FOR I=2 TO LOF(1)1590 GET #1,11600 PRINT1610 PRINTACNO(I-1),DATE$,DESC$(I-1),CVN(AMT$)1620 BAL=CVN(AMT$)1630 IF LOF(2) <1  THEN17101640 FOR J=1 TO LOF(2)1650 GET #2,J1660 IF ACNO(I-1) <> VAL(TACNO$)THEN 17001670 BAL=BAL-CVN(TMT$)1680 IF CVN(TMT$) <0 THEN CR$="CR" ELSE CR$=""1690 PRINTTDATE$,TRDESC$,ABS(CVN(TMT$)),CR$,BAL1700 NEXT J1710 NEXT I1720 CLOSE1730 RETURN1740 '1750 ' THIS SUBROUTINE SETS THE VALUES OF THE ACCOUNT RUMBERS,1760 ' ACNO(I) AND ACCOUNT DESCRIPTORS,DESC$(I).1770 '1780 FOR I=1TO91790 ACNO(I)=I*1001800 NEXT I1810 DESC$(1)="FOOD"1820 DESC$(2)="RENT"1830 DESC$(3)="CAR"1840 DESC$(4)="UTILITIES"1850 DESC$(5)="INSURANCE"1860 DESC$(6)="PILLS"1870 DESC$(7)="CLOTHING"1880 DESC$(8)="ENTERTAINMENT"1890 DESC$(9)="MISCELLANEOUS"1900 RETURN1910 '1920 ' THE PROGRAM TERMINATES HERE1930 '1940 END9999 SAVE"BUDGET.BAS"