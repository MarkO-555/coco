10 'FMTscsi    fmt14.bas20 '93/08/23 13:2030 'FORMAT PROGRAM FOR SCSI DRIVES35 GOTO 9000100 ' WAIT FOR TARGET TO ASSERT REQ ************105 TI=1000110 TI=TI-1 : IF TI=0 THEN 2000120 IF PEEK(BA+1)<128 THEN 110130 RETURN200 ' WRITE DATA BLOCK *************************202 BM = ( BL(0) *  &H100) + BL(1) -1205 FOR I=0 TO BM210 GOSUB 100215 BD = I AND &HFF220 POKE BA+3,BD230 NEXT I299 RETURN300 ' COMMAND **********************************310 POKEBA+3,1 'SEL 1320 POKEBA+2,0330 FOR I = 0 TO CL340 GOSUB 100350 A = C(I) ' COMMAND BLOCK355 POKEBA+3,A360 NEXT I399 RETURN400 GOSUB 100 ' STATUS ************************410 S1=PEEK(BA+3)420 GOSUB 100430 S2=PEEK(BA+3)440 IF S1=0 AND S2=0 THEN S=0 ELSE S=1450 ' IF S=0 THEN NO ERROR S=1 DRIVE ERROR499 RETURN500 ' DATA  ************************************530 FOR I = 0 TO DL540 GOSUB 100550 A = D(I) ' DATA BLOCK555 POKEBA+3,A560 NEXT I599 RETURN600 'BL LEN ************************************610 I = ( BL(0) *  &H100) + BL(1)620 PRINT630 PRINT "BLOCK LENGTH = ", I640 PRINT650 IF BN = 0 THEN RETURN660 PRINT #BN670 PRINT #BN, "BLOCK LENGTH = ", I680 PRINT #BN690 RETURN700 'READ  *************************************705 BM = ( BL(0) *  &H100) + BL(1) -1710 FOR I = 0 TO BM720 GOSUB 100725 BD = I AND &HFF730 IF PEEK(BA+3)<> BD THEN 2400740 NEXT I799 RETURN900 ' WAIT FOR KEY PRESS ***********************910 ATTR 2,1920 LOCATE 40,23 : PRINT " WAITING FOR KEY";930 A$=INKEY$ : IFA$="" THEN 930 ELSE GOTO 940940 ATTR 3,2950 LOCATE 0,23 : PRINT960 RETURN1100 IF PEEK(BA+1)<128 THEN 1100 ELSE RETURN1999 ' ERROR STOPS2000 PRINT"ERROR - rel wait timeout"2010 STOP2100 PRINT "ERROR - STATUS CHECK AFTER MODE SELECT"2110 STOP2200 PRINT "ERROR - STATUS CHECK AFTER FORMAT"2210 STOP2300 PRINT "ERROR - STATUS CHECK AFTER WRITE SECTOR"2310 STOP2400 PRINT "ERROR - DATA MIS-COMPARE ON READ DATA"2410 STOP2500 PRINT "ERROR - STATUS CHECK AFTER READ SECTOR"2510 STOP9000 ' START UP DISPLAY **************************************************9010 '9020 WIDTH 40 : ATTR 3,2 : RGB : VERIFY ON9030 CLEAR9040 DIM SD(30), MS(267), C(15), D(40)9050 FD = 09060 '9100 CLS : PRINT : PRINT : PRINT : PRINT"     FORMATER FOR SCSI DRIVES"9110 PRINT : PRINT : PRINT : PRINT"   HIT ANY KEY TO CONTINUE"9120 A$=INKEY$:IFA$=""THEN 91209125 REM9130 CLS : BA=&HFF50 ' CHANGE TO &HFF58 FOR THE 4 IN 1 ADAPTER9140 PRINT : PRINT : PRINT : PRINT9150 PRINT "   WHAT SLOT IS THE HARD DISK ADAPTER?" : PRINT9155 PRINT"     0 TO 3: (0 FOR NO MULTIPAK)"9160 INPUT X: IF X>4 OR X<0 THEN 9160 ELSE POKE &HFF7F,X9165 WIDTH 809170 POKE BA+1,0 :'RESET SCSI DRIVE9175 ATTR 3,3,B : PRINT : PRINT : PRINT9180 PRINT"     WARNING! TO CONTINUE WILL ERASE ALL THAT IS ON THE HARD DISK"9185 ATTR 3,2   : PRINT :PRINT9190 PRINT"     DO YOU WANT TO CONTINUE (Y/N)"9195 INPUT A$ :IF A$="Y" THEN 9200 ELSE END9200 '9205 PRINT : PRINT : PRINT9210 PRINT " 0 - RESET CONTROLLER        "9220 PRINT " 1 - SET BLOCK LENGTH        "9230 PRINT " 2 - MODE SELECT             "9240 PRINT " 3 - REQUEST EXTENDED SENSE  "9250 PRINT " 4 - WRITE BLOCK             "9260 PRINT " 5 - READ  BLOCK             "9270 PRINT " 6 - INQUIRY                 "9280 PRINT " 7 - FORMAT DRIVE            "9290 PRINT " 8 - MODE SENSE              "9300 PRINT " 9 - READ DEFECT LIST        "9500 PRINT "10 - SET DATA FILE NAME      "9505 PRINT "11 - DUMP MS ARRAY           "9506 PRINT "12 - CLEAR MS ARRAY       "9507 PRINT9510 PRINT " 99 - QUIT, END, STOP & FINIS "9515 BN = 0 : GOSUB 6009520 PRINT " INPUT OPTION (0-9)          "9530 INPUT US9534 IF US = 99 THEN END9536 IF US > 12 OR US < 0 THEN 92009540 US = US + 19550 ON US GOTO 10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,10500, 10600, 107009600 PRINT " ERROR - GOTO NOT TAKEN, LINE 9550 "9610 STOP10000 ' RESET CONTROLLER10010 POKE BA+1, 010020 GOTO 920010500 ' SET DATA FILE NAME10510 PRINT " INPUT DATA FILE NAME"10520 INPUT FB$10530 OPEN "O", #1, FB$10540 FD = 110550 GOTO 920010600 GOSUB 3000010610 GOTO 920010700 FOR I = 0 TO 25610710 MS(I) = 010720 NEXT I10730 ML = 010740 GOTO 920011000 ' SET BLOCK LENGTH11010 CLS11015 PRINT " 0 - USE CURRENTLY FORMATED LENGTH"11020 PRINT " 1 - LENGTH = 256            "11030 PRINT " 2 - LENGTH = 512            "11040 PRINT " 3 - LENGTH = 1024           "11050 PRINT : PRINT "   INPUT  LENGTH CODE "11060 INPUT BC : IF BC <0 OR BC >3 THEN 1100011070 BL(1) = 011075 IF BC = 0 THEN BL(0)= 0 : ' USE CURRENT11080 IF BC = 1 THEN BL(0)= 1 : '  256 BYTES11090 IF BC = 2 THEN BL(0)= 2 : '  512 BYTES11100 IF BC = 3 THEN BL(0)= 4 : ' 1024 BYTES11110 BN = FD : GOSUB 60011120 GOTO 920012000 ' MODE SELECT12005 CL = 512010 C(0)=&H15   : ' OPCODE12020 C(1)=0      : ' LUN, PF, SP ALL ZERO OR IGNORED12030 C(2)=0      : ' RESERVED12040 C(3)=0      : ' RESERVED12050 C(4)=1212060 C(5)=0      : ' CONTROL BYTE, FLAG = LINK = 012070 DL = 1112080 D(0) = 0          :' RESERVED12090 D(1) = 0          :' MEDIUM TYPE12100 D(2) = 0          :' RESERVED12110 D(3) = 8          :' BLOCK DESCRIPTOR LENGTH12120 I = 412130 D(I+0) = 0          :' RESERVED12140 D(I+1) = 0          :' NUMBER OF BLOCKS   (MSB)12150 D(I+2) = 0          :' NUMBER OF BLOCKS12160 D(I+3) = 0          :' NUMBER OF BLOCKS   (LSB)12170 D(I+4) = 0          :' RESERVED12180 D(I+5) = 0          :' BLOCK LENGTH       (MSB)12190 D(I+6) = BL(0)      :' BLOCK LENGTH12200 D(I+7) = BL(1)      :' BLOCK LENGTH       (LSB)12202 I = I + 812204 '         FORMAT PARAMETERS  FOR 256 BYTES ONLY12206 D(I+0) = 3          :' PAGE CODE = 0312208 D(I+1) = 22         :' PAGE LENGTH12210 D(I+2) = 0          :' HEADS PER DRIVE (MSB)12212 D(I+3) = 6          :' HEADS PER DRIVE (LSB)12214 D(I+4) = 0          :' SPAIR SECTORS PER CYLINDER (MSB)12216 D(I+5) = 1          :' SPAIR SECTORS PER CYLINDER (LSB)12218 D(I+6) = 0          :' RESERVED12254 GOSUB 300 :' SEND COMMAND12256 GOSUB 500 :' SEND DATA12258 ' IS STATUS OK12260 GOSUB 400 : IF S <> 0 THEN 1226412262 GOTO 920012264 PRINT : PRINT" ERROR - MODE SELECT REJECTED "12270 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"12275 INPUT A$: IF A$ = "Y" THEN 1300012280 GOTO 920013000 ' EXTENDED SENSE13005 CL = 513010 C(0)=&H03   : ' OPCODE13020 C(1)=0      : ' LUN, ZERO13030 C(2)=0      : ' RESERVED13040 C(3)=0      : ' RESERVED13050 C(4)=&H1B   : ' ALLOCATION LIST LENGTH 27 DECIMAL13060 C(5)=0      : ' CONTROL BYTE, FLAG = LINK = 013070 GOSUB 30013200 ' READ EXTENDED SENSE13210 FOR I = 0 TO 2713220 GOSUB 10013230 IF (PEEK(BA+1) AND 64 ) <> 0 THEN 1327413240 SD(I) = PEEK(BA+3)13245 REM PRINT I,  SD(I)13250 NEXT I13255 '13260 ' CHECK STATUS13270 GOSUB 40013272 GOTO 1327613274 PRINT "DATA PHASE ENDED EARLY FOR EXTENDED SENSE, I= ";I13275 GOSUB 41013276 IF S <> 0 THEN 1330013280 GOTO 1333013300 PRINT : PRINT" ERROR - EXTENDED SENSE REJECTED "13310 PRINT : PRINT" S1 = ";S1, "S2 = ";S213320 STOP13330 GOSUB 20000        ;' REPORT EXTENDED STATUS13800 GOSUB 900    ;' WAIT FOR KEYPRESS13810 GOTO 9200    ;' TOP OF MAIN LOOP14000 ' WRITE A SECTOR **************************************************14010 CL = 514020 C(0)=10       :' OPCODE14030 C(1)=0        :' LUN - LOGICAL BLOCK ADDRESS (MSB)14040 C(2)=0        :' LOGICAL BLOCK ADDRESS14050 C(3)=1        :' LOGICAL BLOCK ADDRESS       (LSB)14060 C(4)=1        :' TRANSFER LENGTH14070 C(5)=0        :' FLAG - LINK14080 GOSUB 30014090 PRINT:PRINT"WRITING TEST DATA"14100 GOSUB 20014110 ' IS STATUS OK14120 GOSUB 400 : IF S <> 0 THEN 1415014130 GOTO 920014140 PRINT14150 PRINT : PRINT" ERROR - WRITE SECTOR"14160 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"14170 INPUT A$: IF A$ = "Y" THEN    1300014180 GOTO 920015000 'READ SECTOR **************************************************15010 CL = 515020 C(0)=8         :' OPCODE15030 C(1)=0         :' LOGICAL BLOCK ADDRESS (MSB)15040 C(2)=0         :' LOGICAL BLOCK ADDRESS15050 C(3)=1         :' LOGICAL BLOCK ADDRESS (LSB)15060 C(4)=1         :' TRANSFER LENGTH15070 C(6)=0         :' FLAG - LINK15080 GOSUB 30015100 PRINT : PRINT : PRINT "READING TEST DATA"15110 GOSUB 70015120 ' IS STATUS OK15130 GOSUB 400 : IF S <> 0 THEN 1516015140 GOTO 920015160 PRINT : PRINT" ERROR - READ REPORTED ERROR"15170 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"15180 INPUT A$: IF A$ = "Y" THEN    1300015190 GOTO 920016000 ' INQUIRY *****************************************************16005 CL = 516010 C(0)=&H12   : ' OPCODE16020 C(1)=0      : ' LUN, ZERO16030 C(2)=0      : ' RESERVED16040 C(3)=0      : ' RESERVED16050 C(4)=&HC8   : ' ALLOCATION LIST LENGTH 200 DECIMAL16060 C(5)=0      : ' CONTROL BYTE, FLAG = LINK = 016070 GOSUB 30016200 ' READ INQUIRY DATA16210 FOR I = 0 TO 20016220 GOSUB 10016222 IF (PEEK(BA+1) AND 64)  <>  0 THEN 1627416230 MS(I) = PEEK(BA+3)16235 REM PRINT I,  MS(I)16240 NEXT I16250 '16260 ' CHECK STATUS16270 GOSUB 40016272 GOTO 1627616274 PRINT "DATA PHASE FOR INQUIRY ENDED EARLY, I= ";I16275 GOSUB 41016276 IF S <> 0 THEN 1630016280 GOTO 1640016300 PRINT : PRINT" ERROR - INQUIRY REJECTED "16310 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"16315 INPUT A$: IF A$ = "Y" THEN 1300016320 PRINT : PRINT" S1 = ";S1, "S2 = ";S216330 STOP " CONTINUE FOR INQUIRY DATA"16400 GOSUB 21000 ;' REPORT INQUITY DATA16750 GOSUB 900   ;' WAIT FOR KEYPRESS16760 GOTO 9200   ;' TOP OF MAIN LOOP16900 REM **********************************************************17000 ' SEND FORMAT COMMAND17010 CL = 517020 C(0)=4     :' OPCODE17030 C(1)=0     :' FMT DATA - CMP LIST17040 C(2)=0     :' RESERVED17050 C(3)=0     :' INTERLEAVE (MSB)17060 C(4)=10    :' INTERLEAVE (LSB)17070 C(5)=0     :' FLAG - LINK17080 GOSUB 30017090 ATTR 3,2,B17100 PRINT : PRINT : PRINT "FORMATING DRIVE PLEASE WAIT"17120 ATTR 3,217130 ' WAIT FOR END17140 GOSUB 110017150 ' IS STATUS OK17160 GOSUB 400 : IF S <> 0 THEN 1718017170 GOTO 920017180 PRINT : PRINT" ERROR - FORMAT REPORTED ERROR"17190 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"17200 INPUT A$: IF A$ = "Y" THEN    1300017210 GOTO 920018000 PRINT ; ' MODE SENSE18005 PRINT "     MODE SENSE PAGE CONTROL " : PRINT18010 PRINT " 0 - REPORT CURRENT   VALUES "18015 PRINT " 1 - REPORT CHANGABLE VALUES "18020 PRINT " 2 - REPORT DEFAULT   VALUES "18025 PRINT " 3 - REPORT SAVED     VALUES "18030 '18035 PRINT18040 PRINT " INPUT VALUES OPTION (0-3)          "18045 INPUT CV : IF CV > 3 OR CV < 0 THEN 1800518050 PRINT18055 PRINT "     MODE SENSE PAGE CODE         " : PRINT18060 PRINT " 0  - OPERATING PARAMETERS         "18065 PRINT " 1  - ERROR RECOVERABLE PARAMETERS "18070 PRINT " 2  - DISCONNECTION PARAMETERS     "18075 PRINT " 3  - FORMAT PARAMETERS            "18080 PRINT " 4  - GEOMETRY PARAMETERS          "18085 PRINT "      RESERVED 5 - 31              "18090 PRINT " 32 - DRIVE SERIAL NUMBER          "18095 PRINT "      RESERVED 33 - 47             "18097 PRINT " 48 - CUSTOMER ID                  "18098 PRINT "      RESERVED 49 - 59             "18100 PRINT " 60 - SOFT ID                      "18105 PRINT "      RESERVED 61 - 62             "18110 PRINT " 63 - ALL PAGES                    "18115 '18120 PRINT18125 PRINT " INPUT PAGE CODE OPTION (0-63)          "18130 INPUT PC : IF PC > 63 OR PC < 0 THEN 1805018135 PRINT18140 CL = 518145 C(0)=&H1A   : ' OPCODE18150 C(1)=0      : ' LUN, ZERO18155 C(2)=(CV*64)+PC ' PAGE CONTROL AND PAGE CODE18160 C(3)=0      : ' RESERVED18165 C(4)=&HFE   : ' ALLOCATION LIST LENGTH 254 DECIMAL18170 C(5)=0      : ' CONTROL BYTE, FLAG = LINK = 018175 GOSUB 30018180 ' READ MODE SENSE DATA18185 FOR I = 0 TO 25418190 GOSUB 10018195 IF (PEEK(BA+1) AND 64)  <>  0 THEN 1823518200 MS(I) = PEEK(BA+3)18205 REM PRINT I,  MS(I)18210 NEXT I18215 '18220 ' CHECK STATUS18225 GOSUB 40018230 GOTO 1824518235 PRINT "DATA PHASE FOR MODE SENSE ENDED EARLY, I= ";I18240 GOSUB 41018245 IF S <> 0 THEN 1825518250 GOTO 1828018255 PRINT : PRINT" ERROR - MODE SENSE REJECTED "18260 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"18265 PRINT : PRINT  " S1 = ";S1, "S2 = ";S218270 STOP " CONT FOR MODE SENSE DATA"18280 GOSUB 22000 ;' REPORT MODE SENSE DATA18290 GOTO 9200   ;' TOP OF MAIN LOOP19000 'READ DEFECT LIST19010 PRINT ; ' READ DEFECT LIST19020 PRINT "     READ DEFECT LIST " : PRINT19030 PRINT " 0 - MANUFACTURES & GROWN    "19040 PRINT " 1 - ILLEGAL                 "19050 PRINT " 2 - MANUFACTURES LIST ONLY  "19060 PRINT " 3 - MAN+HOST ADDED+REASSIGN "19070 '19080 PRINT19090 PRINT " INPUT LIST OPTION (0-3) " ;19100 INPUT CV : IF CV > 3 OR CV < 0 THEN 1900019110 IF CV = 1 THEN GOTO 1900019120 PRINT19130 CL = 1019140 C(0)=&H37     :' OPCODE19150 C(1)=0        :' LUN19160 C(2)=CV*8     :' P AND G BIT19170 C(3)=0        :' RESERVED19180 C(4)=0        :' RESERVED19190 C(5)=0        :' RESERVED19200 C(6)=0        :' RESERVED19210 C(7)=1        :' ALLOCATION LENGTH  (MSB)19220 C(8)=0        :' ALLOCATION LENGTH  (MSB)19230 C(9)=0        :' FLAG - LINK19240 GOSUB 30019250 J = 0 : ' READ DEFECT LIST HEADER19260 FOR I = 0 TO 319270 GOSUB 10019280 IF (PEEK(BA+1) AND 64)  <>  0 THEN 1980019290 MS(I) = PEEK(BA+3)19295 J = J + 119300 REM PRINT I,  MS(I)19310 NEXT I19320 GOSUB 26000  ;' PRINT DEFECT LIST HEADER19370 ' READ DEFECT ENTRY19380 FOR II = 1 TO 999919385 GOSUB 90019390 FOR I = 0 TO 319400 GOSUB 10019410 IF (PEEK(BA+1) AND 64)  <>  0 THEN 1980019420 MS(I) = PEEK(BA+3)19435 J = J + 119440 REM PRINT I,  MS(I)19450 NEXT I19460 GOSUB 24000  :' PRINT DEFECT ENTRY19510 IF MS(0) = &HFF THEN GOTO 1960019520 NEXT II19600 ' READ REASSIGNED ENTRY19610 FOR II = 1 TO 999919620 GOSUB 90019630 FOR I = 0 TO 819640 GOSUB 10019650 IF (PEEK(BA+1) AND 64)  <>  0 THEN 1980019660 MS(I) = PEEK(BA+3)19675 J = J + 119680 REM PRINT I,  MS(I)19690 NEXT I19700 GOSUB 25000 :' PRINT REASSIGNED ENTRY19790 NEXT II19800 ' END OF DEFECT LIST, CHECK STATUS19805 PRINT " BYTES READ = " ; J  : GOSUB 90019810 GOSUB 41019820 IF S <> 0 THEN 1984019830 GOTO 920019840 PRINT : PRINT" ERROR - READ DEFECT REJECTED "19850 PRINT : PRINT" DO YOU WANT EXTENDED SENSE (Y/N)"19860 INPUT A$: IF A$ = "Y" THEN 1300019870 GOTO 920020000 ' REPORT EXTENDED STATUS20010 '20020 BN = 0  : 'SCREEN20030 GOSUB 2010020040 IF FD = 0 THEN RETURN20050 BN = FD :' FILE20060 GOSUB 2010020070 RETURN20100 '20110 PRINT #BN, "        EXTENDED SENSE" : PRINT #BN20120 PRINT #BN, "ERROR CLASS, ERROR CODE MUST = 112" ; SD(0)20130 PRINT #BN, "RESERVED                          " ; SD(1)20140 PRINT #BN, "RESERVED                          " ; SD(2)20150 PRINT #BN, "LOGICAL BLOCK ADDRESS MSB         " ; SD(3)20160 PRINT #BN, "LOGICAL BLOCK ADDRESS             " ; SD(4)20170 PRINT #BN, "LOGICAL BLOCK ADDRESS             " ; SD(5)20180 PRINT #BN, "LOGICAL BLOCK ADDRESS LSB         " ; SD(6)20190 PRINT #BN, "ADDITIONAL SENSE LENGTH           " ; SD(7)20200 '20210 PRINT #BN, "RESERVED                          " ; SD(8)20220 PRINT #BN, "RESERVED                          " ; SD(9)20230 PRINT #BN, "RESERVED                          " ; SD(10)20240 PRINT #BN, "RESERVED                          " ; SD(11)20250 PRINT #BN, "ADDITIONAL SENSE CODE             " ; SD(12)20260 PRINT #BN, "RESERVED                          " ; SD(13)20270 PRINT #BN, "RESERVED                          " ; SD(14)20280 PRINT #BN, "RESERVED                          " ; SD(15)20290 PRINT #BN, "RESERVED                          " ; SD(16)20300 PRINT #BN, "RETRY COUNT                       " ; SD(17)20310 PRINT #BN, "PHYSICAL CYLINDER (MSB)           " ; SD(18)20320 PRINT #BN, "PHYSICAL CYLINDER (LSB)           " ; SD(19)20330 PRINT #BN, "PHYSICAL HEAD                     " ; SD(20)20340 PRINT #BN, "PHYSICAL SECTOR                   " ; SD(21)20350 RETURN21000 ' REPORT INQUIRY DATA21010 '21020 BN = 0  : 'SCREEN21030 GOSUB 2110021040 IF FD = 0 THEN RETURN21050 BN = FD : 'FILE21060 GOSUB 2110021070 RETURN21100 '21110 PRINT #BN, "        INQUIRY DATA" : PRINT21120 PRINT #BN, "DEVICE TYPE CODE              (00)" ; MS(0)21130 PRINT #BN, "DEVICE TYPE QUALIFIER         (00)" ; MS(1)21140 PRINT #BN, "ISO - ECMA - ANSI             (01)" ; MS(2)21150 PRINT #BN, "RESPONSE DATA FORMAT          (01)" ; MS(3)21160 PRINT #BN, "ADDITIONAL LENGTH             (3D)" ; MS(4)21170 PRINT #BN, "RESERVED                          " ; MS(5)21180 PRINT #BN, "RESVERED                          " ; MS(6)21190 PRINT #BN, "RESERVED                          " ; MS(7)21200 PRINT #BN, "MAKER    IN ASCII        " ;21210 FOR I = 8 TO 1521220 PRINT #BN, CHR$(MS(I));21230 NEXT I21240 PRINT #BN21250 PRINT #BN, "PRODUCT IDENTIFIER ASCII " ;21260 FOR I = 16 TO 3121270 PRINT #BN, CHR$(MS(I));21280 NEXT I21290 PRINT #BN21300 PRINT #BN, "HARDWARE REVISION LEVEL           " ; MS(32)21310 PRINT #BN, "FIRMWARE REVISION LEVEL           " ; MS(33)21320 PRINT #BN, "ROM      REVISION LEVEL           " ; MS(34)21330 PRINT #BN, "RESERVED                          " ; MS(35)21340 PRINT #BN, "SERIAL NUMBER            " ;21360 FOR I = 36 TO 4421370 PRINT #BN, MS(I);21380 NEXT I21390 PRINT #BN21400 PRINT #BN, "CUSTOMER IDENTIFIER      " ;21410 FOR I = 45 TO 6521420 PRINT #BN, CHR$(MS(I));21430 NEXT I21432 PRINT #BN21435 PRINT #BN, "--------------*********---------------"21440 PRINT #BN21450 RETURN22000 ' REPORT MODE SENSE DATA22010 '22020 BN = 0  : 'SCREEN22030 GOSUB 2210022040 IF FD = 0 THEN RETURN22050 BN = FD :' FILE22060 GOSUB 2210022070 RETURN22100 '22105 I = 022110 PRINT #BN : PRINT #BN, "        MODE SENSE DATA    "22112 IF CV = 0 THEN PRINT #BN, " 0 - REPORT CURRENT   VALUES "22114 IF CV = 1 THEN PRINT #BN, " 1 - REPORT CHANGABLE VALUES "22116 IF CV = 2 THEN PRINT #BN, " 2 - REPORT DEFAULT   VALUES "22118 IF CV = 3 THEN PRINT #BN, " 3 - REPORT SAVED     VALUES "22119 PRINT #BN22120 PRINT #BN, "SENSE DATA LENGTH                 " ; MS(I+0)22130 PRINT #BN, "MEDIUM TYPE                   (00)" ; MS(I+1)22140 PRINT #BN, "RESERVED                          " ; MS(I+2)22150 PRINT #BN, "BLOCK DESCRIPTOR LENGTH           " ; MS(I+3) : K = MS(I+3)22160 I = 422170 PRINT #BN, "DENSITY CODE                      " ; MS(I+0)22180 PRINT #BN, "NUMBER OF BLOCKS (MSB)            " ; MS(I+1)22190 PRINT #BN, "NUMBER OF BLOCKS                  " ; MS(I+2)22200 PRINT #BN, "NUMBER OF BLOCKS (LSB)            " ; MS(I+3)22210 PRINT #BN, "RESERVED                          " ; MS(I+4)22220 PRINT #BN, "BLOCK LENGTH     (MSB)            " ; MS(I+5)22230 PRINT #BN, "BLOCK LENGTH                      " ; MS(I+6)22240 PRINT #BN, "BLOCK LENGTH     (LSB)            " ; MS(I+7)22250 I = I + K     :' THIS CODE PRINTS ONLY 1 BLOCK DESCRIPTOR22260 PC = MS(I+0) AND NOT &H8022270 IF BN = 0 THEN PRINT #BN, " PC = "; PC , "I = ";I;  :'DEBUG PRINTOUT22280 IF BN = 0 THEN GOSUB 900 ;' WAIT FOR KEYPRESS22290 '22300 IF I >= MS(0) THEN GOTO 23660   :'END OF PAGES22305 PRINT #BN22310 PC = PC AND NOT &H8022320 IF PC <> 0 THEN GOTO 2239022330 PRINT #BN, "   OPERATING PARAMETERS    " : PRINT #BN22340 PRINT #BN, "PAGE CODE = 00               (128)" ; MS(I+0)22350 PRINT #BN, "PAGE LENGTH                  (002)" ; MS(I+1)  : K = MS(I+1)22360 PRINT #BN, "USGE UNIT ATN                     " ; MS(I+2)22370 PRINT #BN, "DEVICE TYPE QUALIFIER             " ; MS(I+3)22374 J = MS(I+0) + MS(I+1) + MS(I+2) + MS(I+3) : IF J = 0 THEN GOTO 2366022380 I = I + K + 2 : GOTO 2226022390 PC = PC AND NOT &H8022400 IF PC <> 1 THEN GOTO 2251022410 PRINT #BN, "   ERROR RECOVERY PARAMETERS" : PRINT #BN22420 PRINT #BN, "PAGE CODE = 01               (129)" ; MS(I+0)22430 PRINT #BN, "PAGE LENGTH                  (006)" ; MS(I+1)  : K = MS(I+1)22440 PRINT #BN, "TB PER DTE DCR                    " ; MS(I+2)22450 PRINT #BN, "RESERVED                          " ; MS(I+3)22460 PRINT #BN, "RESERVED                          " ; MS(I+4)22470 PRINT #BN, "RESERVED                          " ; MS(I+5)22480 PRINT #BN, "RESERVED                          " ; MS(I+6)22490 PRINT #BN, "RESERVED                          " ; MS(I+7)22500 I = I + K + 2 : GOTO 2226022510 PC = PC AND NOT &H8022520 IF PC <> 2 THEN GOTO 2267022530 PRINT #BN, "   DISCONNECTION PARAMETERS " : PRINT #BN22540 PRINT #BN, "PAGE CODE = 02               (130)" ; MS(I+0)22550 PRINT #BN, "PAGE LENGTH                  (010)" ; MS(I+1)  : K = MS(I+1)22560 PRINT #BN, "RESERVED                          " ; MS(I+2)22570 PRINT #BN, "RESERVED                          " ; MS(I+3)22580 PRINT #BN, "RESERVED                          " ; MS(I+4)22590 PRINT #BN, "RESERVED                          " ; MS(I+5)22600 PRINT #BN, "RESERVED                          " ; MS(I+6)22610 PRINT #BN, "RESERVED                          " ; MS(I+7)22620 PRINT #BN, "RESERVED                          " ; MS(I+8)22630 PRINT #BN, "RESERVED                          " ; MS(I+9)22640 PRINT #BN, "RESERVED                          " ; MS(I+10)22650 PRINT #BN, "RESERVED                          " ; MS(I+11)22660 I = I + K + 2 : GOTO 2226022670 PC = PC AND NOT &H8022680 IF PC <> 3 THEN GOTO 2296022690 PRINT #BN, "   FORMAT PARAMETERS        " : PRINT #BN22700 PRINT #BN, "PAGE CODE = 03               (131)" ; MS(I+0)22710 PRINT #BN, "PAGE LENGTH                  (022)" ; MS(I+1)  : K = MS(I+1)22720 PRINT #BN, "HEADS PER DRIVE (MSB)             " ; MS(I+2)22730 PRINT #BN, "HEADS PER DRIVE (LSB)             " ; MS(I+3)22740 PRINT #BN, "SPAIR SECTORS PER CYLINDER (MSB)  " ; MS(I+4)22750 PRINT #BN, "SPAIR SECTORS PER CYLINDER (LSB)  " ; MS(I+5)22760 PRINT #BN, "RESERVED                          " ; MS(I+6)22770 PRINT #BN, "RESERVED                          " ; MS(I+7)22780 PRINT #BN, "SPAIR CYLINDERS PER DRIVE  (MSB)  " ; MS(I+8)22790 PRINT #BN, "SPAIR CYLINDERS PER DRIVE  (LSB)  " ; MS(I+9)22800 PRINT #BN, "SECTORS PER TRACK          (MSB)  " ; MS(I+10)22810 PRINT #BN, "SECTORS PER TRACK          (LSB)  " ; MS(I+11)22820 PRINT #BN, "BYTES PER PHYSICAL SECTOR  (MSB)  " ; MS(I+12)22830 PRINT #BN, "BYTES PER PHYSICAL SECTOR  (LSB)  " ; MS(I+13)22840 PRINT #BN, "INTERLEAVE                 (MSB)  " ; MS(I+14)22850 PRINT #BN, "INTERLEAVE                 (LSB)  " ; MS(I+15)22860 PRINT #BN, "RESERVED                          " ; MS(I+16)22870 PRINT #BN, "RESERVED                          " ; MS(I+17)22880 PRINT #BN, "RESERVED                          " ; MS(I+18)22890 PRINT #BN, "RESERVED                          " ; MS(I+19)22900 PRINT #BN, "SSEC HSEC                         " ; MS(I+20)22910 IF BN = 0 THEN GOSUB 900 ;' WAIT FOR KEYPRESS22920 PRINT #BN, "RESERVED                          " ; MS(I+21)22930 PRINT #BN, "RESERVED                          " ; MS(I+22)22940 PRINT #BN, "RESERVED                          " ; MS(I+23)22950 I = I + K + 2 : GOTO 2226022960 PC = PC AND NOT &H8022970 '22980 IF PC <> 4 THEN GOTO 2321022990 PRINT #BN, "   GEOMETRY PARAMETERS      " : PRINT #BN23000 PRINT #BN, "PAGE CODE = 04               (132)" ; MS(I+0)23010 PRINT #BN, "PAGE LENGTH                  (018)" ; MS(I+1)  : K = MS(I+1)23020 PRINT #BN, "NUMBER OF CYLINDERS  (MSB)        " ; MS(I+2)23030 PRINT #BN, "NUMBER OF CYLINDERS               " ; MS(I+3)23040 PRINT #BN, "NUMBER OF CLYINDERS  (LSB)        " ; MS(I+4)23050 PRINT #BN, "NUMBER OF HEADS                   " ; MS(I+5)23060 PRINT #BN, "RESERVED                          " ; MS(I+6)23070 PRINT #BN, "RESERVED                          " ; MS(I+7)23080 PRINT #BN, "RESERVED                          " ; MS(I+8)23090 PRINT #BN, "RESERVED                          " ; MS(I+9)23100 PRINT #BN, "RESERVED                          " ; MS(I+10)23110 PRINT #BN, "RESERVED                          " ; MS(I+11)23120 PRINT #BN, "RESERVED                          " ; MS(I+12)23130 PRINT #BN, "RESERVED                          " ; MS(I+13)23140 PRINT #BN, "RESERVED                          " ; MS(I+14)23150 PRINT #BN, "RESERVED                          " ; MS(I+15)23160 PRINT #BN, "RESERVED                          " ; MS(I+16)23170 PRINT #BN, "RESERVED                          " ; MS(I+17)23180 PRINT #BN, "RESERVED                          " ; MS(I+18)23190 PRINT #BN, "RESERVED                          " ; MS(I+19)23200 I = I + K + 2 : GOTO 2226023210 PC = PC AND NOT &H8023220 IF PC <> 32 THEN GOTO 2341023230 PRINT #BN, "   DRIVE SERIAL NUMBER      " : PRINT #BN23240 PRINT #BN, "PAGE CODE = $20              (160)" ; MS(I+0)23250 PRINT #BN, "PAGE LENGTH                  (009)" ; MS(I+1)  : K = MS(I+1)23260 FOR J = I+2 TO  I+K+123270 PRINT #BN, "DRIVE SERIAL NUMBER               " ; MS(J)23280 NEXT J23350 PRINT #BN : PRINT #BN, "SERIAL NUMBER                     " ;23360 FOR J = I+2 TO I+K+123370 PRINT #BN, CHR$(MS(J));23380 NEXT J23390 PRINT #BN23400 I = I + K + 2 : GOTO 2226023410 PC = PC AND NOT &H8023420 IF PC <> 48 THEN GOTO 2352023430 PRINT #BN, "   CUSTOMER ID              " : PRINT23440 PRINT #BN, "PAGE CODE = $30              (048)" ; MS(I+0)23450 PRINT #BN, "PAGE LENGTH                  (021)" ; MS(I+1)  : K = MS(I+1)23460 PRINT #BN : PRINT #BN, "CUSTOMER ID = " ;23470 FOR J = I+2 TO I+K+123480 PRINT #BN, CHR$(MS(J));23490 NEXT J23500 PRINT #BN23510 I = I + K + 2 : GOTO 2226023520 PC = PC AND NOT &H8023530 IF PC <> 60 THEN GOTO 2359023540 PRINT #BN, "   SOFT ID                  " : PRINT23550 PRINT #BN, "PAGE CODE = $3C              (188)" ; MS(I+0)23560 PRINT #BN, "PAGE LENGTH                  (001)" ; MS(I+1)  : K = MS(I+1)23570 PRINT #BN, "ENBL SCSI ID                      " ; MS(I+2)23580 I = I + K + 2 : GOTO 2226023590 PRINT #BN, "   PAGE CODE NOT RECOGNIZED " : PRINT #BN23600 PRINT #BN, "PAGE CODE                         " ; MS(I+0)23610 PRINT #BN, "PAGE LENGTH                       " ; MS(I+1)  : K = MS(I+1)23620 FOR J = I+2 TO I+K+123630 PRINT #BN, "                                  " ; MS(J)23640 NEXT J23650 I = I + K + 2 : GOTO 2226023660 '23665 PRINT #BN, "**************---------***************"23670 RETURN24000 '***************************************************24010 '24020 BN = 0  : 'SCREEN24030 GOSUB 2410024040 IF FD = 0 THEN RETURN24050 BN = FD : 'FILE24060 GOSUB 2410024070 RETURN24100 '24110 PRINT #BN, "        DEFECT ENTRY " : PRINT24120 PRINT #BN, "CYLINDER      (MSB)               " ; MS(0)24130 PRINT #BN, "CYLINDER      (LSB)               " ; MS(1)24140 PRINT #BN, "HEAD                              " ; MS(2)24150 PRINT #BN, "SECTOR                            " ; MS(3)24160 RETURN24900 RETURN25000 ' ********************************************25010 '25020 BN = 0  ; 'SCREEN25030 GOSUB 2510025040 IF FD = 0 THEN RETURN25050 BN = FD ; FILE25060 GOSUB 2510025070 RETURN25100 '25110 PRINT #BN, "        REASSIGNED ENTRY " : PRINT25120 PRINT #BN, "LOGICAL BLOCK ADDRESS    (MSB)    " ; MS(0)25130 PRINT #BN, "LOGICAL BLOCK ADDRESS             " ; MS(1)25140 PRINT #BN, "LOGICAL BLOCK ADDRESS             " ; MS(2)25150 PRINT #BN, "LOGICAL BLOCK ADDRESS    (LSB)    " ; MS(3)25160 PRINT #BN, "CYLINDER                 (MSB)    " ; MS(4)25170 PRINT #BN, "CYLINDER                 (LSB)    " ; MS(5)25180 PRINT #BN, "HEAD                              " ; MS(6)25190 PRINT #BN, "SECTOR                            " ; MS(7)25200 RETURN26000 ' PRINT DEFECT LIST HEADER26010 '26020 BN = 0  : 'SCREEN26030 GOSUB 2610026040 IF FD = 0 THEN RETURN26050 BN = FD : 'FILE26060 GOSUB 2610026070 RETURN26100 '26110 ' PRINT DEFECT LIST HEADER26120 PRINT "        DEFECT LIST HEADER " : PRINT26122 IF CV = 0 THEN PRINT #BN, " 0 - MANUFACTURES & GROWN    "26124 IF CV = 1 THEN PRINT #BN, " 1 - ILLEGAL                 "26126 IF CV = 2 THEN PRINT #BN, " 2 - MANUFACTURES LIST ONLY  "26128 IF CV = 3 THEN PRINT #BN, " 3 - MAN+HOST ADDED+REASSIGN "26130 PRINT #BN, "RESERVED                          " ; MS(0)26140 PRINT #BN, "P - G BITS                        " ; MS(1)26150 PRINT #BN, "DEFECT LIST LENGTH    (MSB)       " ; MS(2)26160 PRINT #BN, "DEFECT LIST LENGTH    (LSB)       " ; MS(3)26170 RETURN30000 ' DUMP MS ARRAY30010 '30020 BN = 0  30030 GOSUB 3010030040 IF FD = 0 THEN RETURN30050 BN = FD 30060 GOSUB 3010030070 RETURN30100 '30110 ' DUMP MS ARRAY30120 PRINT #BN, "        DUMP MS ARRAY" 30140 S=16:M$=" MS "  30150 PRINT #BN, M$ ; T$ : PRINT #BN, " " : L=230160 FOR I=0 TO 255 STEP S30170 PRINT #BN, M$;30180 IF LEN(HEX$(I))<4 THEN FOR P=LEN(HEX$(I))+1 TO 4 : PRINT #BN, "0"; : NEXT P30190 PRINT #BN, HEX$(I);" : ";30200 FOR SA=0 TO S-130210 PRINT #BN, " ";30220 IF LEN(HEX$(MS(I+SA)))<2 THEN PRINT #BN, "0";30230 PRINT #BN, HEX$(MS(I+SA));30235 NEXT SA30236 PRINT #BN, " ";30238 FOR SA=0 TO S-130240 IF MS(I+SA) > 31 AND MS(I+SA) < 127 THEN PRINT #BN, CHR$(MS(I+SA));  ELSE PRINT #BN, CHR$(32);30242 NEXT SA30250 PRINT #BN, " " : GOTO 3030030300 NEXT I30303 PRINT #BN, "                  ";30306 IF BN = 0 THEN GOSUB 90030310 RETURN