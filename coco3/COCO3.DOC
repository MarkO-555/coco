TRS-80 COLOUR COMPUTER 3 EMULATOR Ver. 1.6B (C) 1993-97 Jeff Vavasour
=====================================================================

(Visit http://www.vavasour.ca/jeff/trs80.html#coco3 for contact info.)

1. DESCRIPTION
--------------

This package is a complete emulator designed to make your PC imitate a
genuine CoCo 3 with either 128K or 512K of RAM and four disk drives.  The
emulator requirements are:

- Full VGA-compatibility.
- 333K of free low memory.
- MS-DOS 3.3.

Recommended:

- MS-DOS 5.0 with an additional 96K of free low memory, EMS 4.0 and 384K
  of free EMS memory.
- a fast CPU.

If you have the recommended memory requirements, the emulator will work as
a 512K CoCo 3.  Otherwise it will work as a 128K CoCo 3.

WARNING: For all but high-end computers, it is recommended that you EXIT
         Windows 3.1 or Windows 95 and run the CoCo emulator in DOS-only
         mode.  Performance may be adversely affected otherwise.  If you
         do attempt to run the emulator under Windows, do so in full-screen
         mode.  It will not appear correctly in a window.

You will also need a real CoCo 3 to obtain a copy of the "Super Extended
BASIC" ROM.  The transfer method is described in Section 2.  (If you intend
to work exclusively in OS/9 Level II you can avoid this by following the
instructions in Section 2.4.)

This program is copyrighted freeware.  IT IS NOT PERMISSIBLE TO RESELL OR
DISTRIBUTE THIS PACKAGE.  This package includes:

- The emulator itself:
        COCO3X.EXE
- Documentation:
        READ.ME - a brief overview
        COCO3.DOC - this file
        QUICK.DOC - quick start reference for people who already know the
                    CoCo 2 emulator
        WHATSNEW.TXT - a reference on new features in version 1.60 for
                       users of the older 1.4x and 1.5x releases.
- CoCo disk programs:
        DSKINI.EXE - formats CoCo disks on your PC.  Also can write the
                     emulator's "virtual disks" to a real CoCo disk.
        RETRIEVE.EXE - reads a CoCo disk and makes a "virtual disk" on your
                       hard drive.
        PORT.EXE - moves files between CoCo disks and your MS-DOS directory,
                   or between virtual disks and your MS-DOS directory.
- CoCo cassette programs:
        CASIN.EXE - a program to read CoCo cassettes on your PC through a
                    SoundBlaster or from a .WAV file sample.
        CASOUT.EXE - a program to make CoCo-compatible cassettes using a
                     SoundBlaster.
- Other programs:
        CAS2ROM.EXE - PC program to retrieve your CoCo's ROM by cassette.
        GET3ROM.BAS - CoCo program to retrieve your CoCo 3's ROM by disk.
        VGACHECK.EXE - a program to test your VGA board for compatibility
                       with the shareware CoCo 3 emulator.
        OS9BOOT.MOR - a replacement ROM file to boot OS/9 without needing the
                      CoCo ROMs.
        OS9UTIL.DSK - an OS-9 disk containing utilities and drivers for OS-9-
                      related enhancements.  See the read.me file on that
                      disk for details.

Please feel free to forward any comments to me at the email address above,
or the postal address given in the Section 9 below.  (Alternate email
addresses are given there as well, but they should only be used if my
primary email address fails.)


2. GETTING STARTED
------------------

The only thing that you will need that is not provided with the emulator
is the ROM of a genuine CoCo.  Naturally, this could not be included here
for copyright reasons.  This ROM must be provided by a CoCo 3, as it contains
Super Extended BASIC, not found in earlier CoCo models.

There are three methods to copy the ROM to your PC:
- by disk;  (You'll need a disk drive on your CoCo and a 5 1/4" drive on your
  PC.  Section 2.1 describes this method.)
- by cassette;  (You'll need a SoundBlaster on your PC.  See Section 2.2.)
- or, by serial port.  (You'll need to build a simple cable.  You'll also
  need a serial port in your PC.  See Section 2.3.)

Note that the CoCo 3 emulator must be installed in a NEW DIRECTORY on your PC.
It must NOT be in the same directory as the CoCo 2 emulator.


2.1 OBTAINING THE ROM VIA DISK
------------------------------

This section outlines how to use a disk-based transfer method to obtain the
ROMs from a CoCo 3.  This method uses the PORT.EXE program to transfer files
between MS-DOS and CoCo disks.  Section 4.3 includes more detailed information
on how to use this program, if needed.

1. Use the `PORT' program to write `GET3ROM.BAS' to a CoCo 3 disk.  (Before
   sending, press [F7] until a "BASIC" file type is selected, and then [F8]
   until an "ASCII" format is selected.)

2. Take the disk to your CoCo 3 and RUN the GET3ROM.BAS program on it.  This
   disk must have at least 43K of free space.

3. Bring the disk with the ROM back to your PC, and run the `PORT' program
   again.  MAKE SURE THE "ADD/STRIP LFS" AND "ADD/STRIP EOF BYTE" OPTIONS
   ARE SET TO "NO".  (Use the [F5] and [F6] keys to change these settings.)

4. With the settings specified in step 3, tell PORT to move the files
   "COCO3.ROM" and "DISK.ROM" from the CoCo disk to your MS-DOS directory.

The file "COCO3.ROM" should be 32258 bytes long, and "DISK.ROM" should be
8194 bytes long.  If these are correct, you may now run the emulator by typing
"COCO3X" at the MS-DOS prompt.

If you have trouble reading the CoCo disk on your PC, try formatting a new
one on the PC using the DSKINI.EXE program.  Then, use that disk for the
transfer process instead.  If the file lengths are wrong, check that settings
in step 3 are correct and that there was enough space on the disk.


2.2 OBTAINING THE ROM VIA CASSETTE
----------------------------------

This will require the use of the CASIN.EXE program to read CoCo cassette
files via the SoundBlaster (see Section 5.3) or from a .WAV recording (Section
5.4).  To save the ROM to the cassette port, enter the following commands on
your CoCo immediately after turning it on:

POKE &HFFDE,0
POKE &HFF90,&H8A
CSAVEM"COCO3",&H8000,&HFDFF,0

The Disk BASIC Pak must NOT be in your computer when you do this.

Make a virtual cassette file of this CSAVEM on your PC by following the steps
in Section 5.3 or 5.4.  Once the file has been completely read into your PC,
type the command:

CAS2ROM filename[.CAS]

at the MS-DOS prompt, where "filename" is the name you gave to the virtual
cassette containing the ROM.  This will create the COCO3.ROM file used by the
emulator.  The .CAS file can then be deleted.  You are now ready to run the
emulator.  (See section 3.)


2.3 OBTAINING THE ROM VIA THE SERIAL PORT
-----------------------------------------

This method requires at least version 1.1 of the CoCo BASIC ROM, a PC with a
serial port, and the cable described in the Appendix.

Once the cable is built and tested, connect your PC and CoCo together and
load your favourite terminal program on your PC, setting it to 2400 baud,
no parity, 1 stop bit, 8 bit word length.  Select the file capture option
and record all data received to the file "COCO3.ROM".  After first turning
on your CoCo 3, type the following commands:

POKE &HFFDE,0
POKE &HFF90,&H8A

The Disk BASIC Pak must NOT be in your computer when you do this.  Next, run
the following program on your CoCo:

10 POKE 150,18
20 PRINT#-2,CHR$(0);CHR$(128);
30 FOR X=&H8000 TO &HFDFF
40 PRINT#-2,CHR$(PEEK(X));
50 NEXT

Pay particular attention to the semicolons in this program.  Once the CoCo
is done and the "OK" prompt returns, close the captured file.  Check that
it should be 32258 bytes long in your MS-DOS directory.  You may now run
the emulator.  (See section 3.)

If the file is too long or too short, there may be a problem with your terminal
program and you should try another.  (The file is being transmitted as a binary
file so no filters should be used in your terminal program.)


2.4 USING OS/9 LEVEL II WITHOUT THE COCO ROMS
---------------------------------------------

OS/9 Level II requires the CoCo ROMs only so that you can execute the "DOS"
command.  You can bypass this requirement by installing the emulator's OS/9
boot loader, OS9BOOT.MOR.  This is done simply by typing the following command
at the MS-DOS prompt:

COPY OS9BOOT.MOR COCO3.ROM

Upon executing the emulator, the disk in the emulated CoCo's drive 0 (as 
specified in the virtual disk menu, see Section 4.1 for details) will now
automatically be booted.

You may still install the CoCo 3 ROMs at a later date by following any one of
the procedures in Sections 2.1 through 2.3.


2.5  SPECIAL NOTES ON USING ADOS-3 WITH THE EMULATOR
----------------------------------------------------

To use ADOS-3 with the emulator, first transfer your ROMs as described in
section 2.1, then locate your EPROM file for ADOS-3 and use the PORT program
to copy it to your MS-DOS directory.

Next, enter the following MS-DOS commands.  Note here that "EPROM.BIN" is
assumed to be the name of your EPROM file.  If your file has a different
name, substitute it for EPROM.BIN in the "DEBUG" command:

DEBUG EPROM.BIN [ENTER]
  (a "-" prompt will appear)
RCX [ENTER]
  (a hex number will appear followed by a ":" prompt)
4002 [ENTER]
  (the "-" prompt comes back)
A103 [ENTER]
  (a prompt of the form "____:0103" will appear)
DW C000 [ENTER]
  (a prompt of the form "____:0105" will appear)
[ENTER]
  (the "-" prompt will return)
N DISK.ROM [ENTER]
  (the "-" prompt returns again)
W 103 [ENTER]
  (you will see "Writing 4002 bytes" followed by the "-" prompt)
Q [ENTER]

ADOS-3 will now be in the MS-DOS file DISK.ROM.  (This overwrites the
DISK.ROM file obtained in section 2.1, but not the COCO3.ROM file.)
This file should be in your default directory for the CoCo 3 Emulator.

IMPORTANT: COCO3.ROM and DISK.ROM should be the ONLY files with the *.ROM
extension in the CoCo 3 Emulator's directory.

Next, run the new CoCo 3 Emulator, COCO3X.

Go to the [F6] Options Menu and change the "Timer" option to "60Hz/16kHz" (note
this should NOT be "60Hz only").  (If you would prefer the speed of your
emulator to be restrained to that of the original CoCo 3, you can set the
Timer option to "sync lock" instead.  Sync lock will only slow down the
computer if it is running too fast, however, it does not guarantee any
performance on PCs which are not fast enough for the emulator.)

ADOS-3 should now work under the CoCo 3 Emulator.


3. RUNNING THE EMULATOR
-----------------------

With COCO3.ROM in the default directory (and DISK.ROM if applicable), type
"COCO3X" at the MS-DOS prompt and press ENTER.  The emulator will start, with
a title banner and list of function keys appearing.

This banner will indicate whether the emulator is operating as a 128K or 512K
CoCo 3.  Also, for quicker reference, the background colour of the banner will
also reflect the RAM size (blue if 128K, or green if 512K).  Pressing any key
will begin the operation of the emulator.  This help screen may be redisplayed
at any time by pressing [F10].

To exit the emulator either press [F1] or [F6] followed by "Q" and then "Y" to
confirm.

The special function keys are summarised as follows:

[F1] Activates the 6809 debugger.  See section 8 for details on its use.  If
     you enter this option accidentally, press "C" to return to the emulator.
     Pressing "Q" will quit the emulator and return to MS-DOS.  You will be
     prompted to enter "Y" to confirm if you attempt to quit.

[F2] The virtual disk menu.  If you obtained the ROM from a CoCo with Disk
     BASIC, this menu will allow you to specify what the emulator should use
     as drives 0, 1, 2, or 3.  See Section 4 for details on using CoCo disks
     with the emulator.

[F3] Snapshots.  The entire state of the emulator, such as a program or a
     game-in-play may be saved to an MS-DOS file, to be retrieved later
     (even if you exit the emulator or turn off the computer between
     sessions.)

     To save a snapshot, press "S" and then type in a name or select it from
     those already in the directory.  To load, press "L" and select a name
     as before.  ESC aborts this option.

     Snapshots may also be loaded when the emulator is first run at the
     MS-DOS prompt by typing "COCO3X filename[.PAK]" where "filename" is the
     name of the snapshot.

     Snapshots from the CoCo 2 emulator are NOT compatible, however, Program
     Pak images from the CoCo 2 emulator CAN be used with the CoCo 3 emulator.
     CoCo 3 snapshots will be either 129K or 513K in length depending on
     whether the emulated CoCo had 128K or 512K of RAM.  Section 6 describes
     how to transfer Program Pak images from your CoCo to the emulator.

[F4] The virtual cassette menu.  Cassette commands such as CSAVE, CLOAD, etc.
     can be rerouted to your PC's hard drive using this menu.  More can be
     found on cassette features in Section 5.

[F5] This turns the sound option on or off.  Sound output can either be routed
     to a SoundBlaster or the PC's feeble internal speaker, whichever is
     selected in the [F6] Options Menu below.

[F6] Options menu.  Pressing the right mouse button will also summon this menu.
     In the menu, pressing the letter associated with an option changes it.
     Also, the "+" and "-" keys speed up or slow down the emulator.  The "<"
     and ">" keys will adjust the SoundBlaster volume if it is selected.  The
     following options are available in this menu:

        [A] Select a keyboard layout.  This is the same as the [F7] key below.

        [B] Select what to use as the "left joystick" for the emulator.  The
            options are "Game A", "Game B", "Mouse", "Hi-res", or "None".
            Game A/B refer to the PC's game port adapter (also found in
            SoundBlasters).  Most PCs only have a single joystick, which is
            usually "Game A".  Be sure to calibrate a joystick for use with
            the emulator if you select one here or in option C.  Do not select
            "Game A" or "Game B" if there is no corresponding joystick, as the
            emulator will be slowed by unsuccessful attempts to read the
            non-existent joystick.

            The "mouse" mode makes the mouse act as a standard joystick,
            while "hi-res" makes the mouse act as a hi-res joystick which is
            designed only to work with programs that use the hi-res joystick
            interface add-on for the CoCo.  (One such program is CoCo Max
            III.)  At most, only one of the left or right joysticks ([B] or
            [C] options) should be set to "hi-res" at any given time.

        [C] Same thing for the CoCo's "right joystick".

        [D] Select sound source.  Your choices are "Internal" for the PC's
            internal speaker, "External" for the SoundBlaster, or "Off".

        [E] Colour set.  The colours on a CoCo RGB monitor are different than
            on its Composite TV output.  You may choose either the RGB colour
            set, or a crude approximation of the Composite colour set using
            this option.  Note that artifacting is not supported in the CoCo 3
            emulator.

        [F] Border colour.  Use this option to either force the screen border
            to be black, or to allow it to change to the colours used on the
            genuine CoCo 3.

        [G] Select printer mode.  The CoCo's serial port output is rerouted to
            the PC's printer in the emulator.  There are three options here:
            "CR only" which prints the data unmodified, "CR/LF" which adds
            linefeeds to the output as required by PC printers so all text
            does not appear on a single line, and "Disabled" which disables
            output to the printer.

        [H] Select clock frequency.  You can change the normal timer interrupt
            to be either 60Hz or 50Hz, conforming to either NTSC or PAL
            standards respectively.  Two other options are available, labelled
            "60Hz/16kHz" and "50Hz/16kHz".  These enable the horizontal sync
            and programmable timer interrupts in addition to the standard 60Hz
            or 50Hz interrupt.  BE WARNED THAT THIS MAY LOCK UP SLOW COMPUTERS
            OR HAVE ADVERSE EFFECTS ON SYSTEM PERFORMANCE.  If you find you can
            no longer run the emulator after changing this option, delete the
            file GENERALX.CC3 in the emulator's directory.

            Also, a special mode called "sync lock" will restrain the emulator's
            speed to match the speed of a real CoCo 3 (assuming your PC is fast
            enough to run the emulator at that speed).

        [I] Select disk drive mode.  If your PC has a 1.2Mb drive, you can
            use it as either a 40- or 80-track CoCo disk drive.  The initial
            setting is 40-track as is standard on most CoCo's.  Use this
            unless you have a customised CoCo with 80-track disks that you
            wish to read.

     In addition, the Options Menu offers several other commands:

        [K] Debug.  Same as the [F1] key.

        [L] Virtual Disk Menu. Same as the [F2] key.

        [M] Snapshot/Program Pak Menu.  Same as the [F3] key.

        [N] Modify keyboard layout.  Same as the [F8] key.

        [O] Calibrate joystick.  You must do this before using a joystick
            with the emulator.  You will be prompted to move the joystick to
            the upper-left corner and press the button, then to move it to the
            lower-right and press the button again.  ESC aborts.  This command
            must be issued once for each joystick connected to your PC.

        [P] File import/export utility.  Same at the [F9] key.

        [Q] Quit.  Press "Y" to confirm, or "N" to cancel.

        [R] Restart.  This is the same as rerunning "COCO3X".  Press "Y" to
            confirm, or "N" to cancel.

        [S] Shell to DOS.  Calls the MS-DOS prompt.  Type "EXIT" to return to
            the emulator.

        [T] Virtual Tape Menu.  Same as the [F4] key.

[F7] This changes the keyboard layout.  You have a choice between the PC,
     CoCo, a special OS-9 mode, or your own Custom layout.  In the CoCo
     layout, SHIFT-2 would be a quote while in the PC layout, SHIFT-2 is an
     "@".  Other keys may not be so obvious: ESC is the BREAK key, HOME is
     the CLEAR key, SCROLL LOCK is SHIFT-@, [F11] is the CoCo's F1, and [F12]
     is the CoCo's F2.  The arrow keys on the keypad also work.

     The PC layout is actually optimised for using CoCo's built-in BASIC.
     The OS-9 mode maps your PC keyboard layout more closely to OS-9, so
     that CAPS LOCK is equivalent to CTRL+0 (rather than SHIFT+0 in other
     modes), and that the _, ~, [, ], {, }, \, |, and ^ characters map
     correctly to their OS-9 counterparts.

[F8] Modify the custom keyboard layout.  The emulator includes a Custom layout
     which you can modify with this option.  Select the PC key you wish to
     modify by using the arrow keys to scroll through the list, then press
     [F1] to modify its unSHIFTed definition or [F2] to modify its SHIFTed
     definition.  Pressing [F4] will erase the custom layout and copy one of
     the two preset layouts ("BASIC PC", "OS-9 PC" or "CoCo") over it.  The
     custom keyboard layout is saved and is automatically reloaded next time
     your run the emulator.  You must select the "Custom" layout with [F7]
     during normal emulator operation (or with the Option Menu's option A) in
     order for the custom layout to take effect.

[F9] File import/export utility.  This runs the "PORT.EXE" program described
     in Section 4.3.

[F10] Print the help screen summarising these function key choices.

[CTRL-F10] Same as the CoCo's RESET button.


4. USING DISK FILES WITH THE EMULATOR
-------------------------------------

To use the emulator's CoCo disk functions, you will need to have copied the
Disk BASIC ROM to your PC.  This is done by using the method in Section 2.1.


4.1 USING THE VIRTUAL DISK MENU
-------------------------------

CoCo disks can be used with the emulator using two methods:  Either by
specifying a disk drive containing a CoCo disk in the [F2] menu, or by copying
the disk to a "virtual disk file" on your hard drive, and then telling the
emulator to find the files there.

In either case, this is accomplished by first selecting the [F2] Virtual Disk
Menu.  Then, select the CoCo drive number 0, 1, 2, or 3 to assign.  At the
prompt, enter a drive designation such as "A:" or "B:" to use a physical
drive,* or enter a "virtual disk" file name.  (You can create new virtual
disks by typing a name of one not found in the directory on the right.  All
virtual disks are given the ".DSK" extension, and are automatically formatted
for use with the CoCo's Disk BASIC.)

You may then use the CoCo's LOAD, SAVE, OPEN, etc. commands on the selected
CoCo disk or virtual disk file.

It is also possible to "write protect" a drive containing a virtual disk by
pressing SHIFT and the drive number in the Virtual Disk Menu.  Write protected
drives are indicated by a block over the drive number.  This will have no
effect on physical disks, which must be write protected in the usual manner.

*Note: If you are using Disk BASIC 2.0 or later, CoCo drives 0 and 1 will
 access the first side of a physical disk, while drives 2 and 3 will access
 the second side of a double-sided physical disk.  Virtual disks are always
 single sided.


4.2 MOVING DISK IMAGES BETWEEN REAL DISKS AND VIRTUAL DISK FILES
----------------------------------------------------------------

You may make virtual disk files from real CoCo disks (i.e. copy the entire
disk image to your hard drive) or vice versa using the RETRIEVE and DSKINI
commands respectively.

Any virtual disk file may be written to a 5 1/4" disk, readable by the
CoCo by entering:

DSKINI [/2] [/8] [d:] [diskname[.DSK]]

where "d:" is the destination drive and "diskname" is the source virtual disk
file.  At least one of these two parameters must be given.  (The default
drive for "d:" is A:.)  Paths may be included in the diskname parameter.
If "diskname" is omitted, a blank disk is formatted.  If the "/2" option
is specified, the second side of a double-sided disk will be used.  If the
"/8" option is specified AND YOU ARE USING A 1.2Mb DRIVE, the disk will be
formatted for 80-track drives.

CoCo disks may also be read back to virtual disk files using:

RETRIEVE [/2] [/4] [/8] [d:] diskname[.DSK]

The "/2" and "/8" options have the same meaning as for DSKINI.  The "/4"
tells RETRIEVE that the disk is a 40-track disk.  The default is 35 tracks.

Some CoCo disks may not be readible by the PC.  If you encounter sector
read errors using RETRIEVE, try the following transfer method:

1. Create a CoCo disk on your PC using DSKINI.EXE.

2. On your CoCo, use BACKUP or COPY to copy the files onto the disk you've
   just created in step 1.

3. Put the disk back in your PC and use RETRIEVE.EXE to make a virtual disk
   file from it.


4.3 MOVING COCO FILES TO AND FROM THE MS-DOS ENVIRONMENT
--------------------------------------------------------

The program PORT.EXE can move files between CoCo disks (Disk BASIC format only)
and the MS-DOS directory, or virtual disks and the MS-DOS directory.  At the
MS-DOS prompt, it is entered simply by typing "PORT".  If you are using this
program standalone (without the emulator) and wish to access 80-track CoCo
disks, you must instead type "PORT /H".

The PORT program may also be run from within the emulator by pressing [F9]
or selecting option P in the Options Menu.

You may exit the PORT program any time by pressing ESC.  Upon entering the
PORT program, you must tell it where to find the CoCo disk you will be using.
Either give a physical drive designation (e.g. "A:" or "B:") or enter the
name of a virtual disk.  The directory for the selected CoCo disk and your
current MS-DOS directory will be shown.

The following options are now available:

[F1] To select a new CoCo disk or virtual disk.  You must also select this
     option if you change the disk in the selected physical drive.

[F2] To select the direction in which you wish to move files.  This will
     either be "MS-DOS to CoCo" or "CoCo to MS-DOS".

[F3] If you are using a real CoCo disk and it is double-sided, this will allow
     you to select which side you are using.

[F4] Change maximum allowable number of tracks on the disk.  The choices are
     either 35, 40, or 80.  (If a disk is formatted for less than this maximum
     the displayed "free space" may not change when a higher track count is
     selected.)

[F5] When moving ASCII files, this option will select whether or not the PORT
     program changes the end-of-line characters in text files to match the
     format used by the destination computer.  (i.e. whether to change CR/LFs
     to CRs or back)  This has no effect on binary files.

[F6] When moving ASCII files, this will either add a CTRL-Z to the end of file
     if moving to MS-DOS, or remove it if moving to the CoCo.  Again, this has
     no effect on binary files.

[F7] When moving files to the CoCo, this tells PORT what file type to assign
     to it in the directory.  The choices are "BASIC", "Data", "EXEC", or
     "Editor".

[F8] When moving files to the CoCo, this tells PORT whether or not the file
     is ASCII, so it can set the CoCo's directory entry appropriately.  The
     choices are "ASCII" or "Binary".

You may also enter the name of a file to move, or click it from the directory
listings with the mouse.  (If you use the mouse, the direction is automatically
selected so it is moved from whichever enivronment it is in -- MS-DOS or CoCo
-- to the other one.)  The mouse may also be used to change any of the options
above by clicking on them.


5. USING COCO CASSETTES WITH THE EMULATOR
-----------------------------------------

Within the emulator, CLOAD, CSAVE and other cassette commands are rerouted
to disk files called "virtual cassette files".  If you have a SoundBlaster
you may then read or write real CoCo cassettes by using the external utilities
CASIN.EXE and CASOUT.EXE provided with the emulator.

Section 5.1 explains how to use virtual cassettes with the emulator while
Section 5.2 explains how to transfer them to a CoCo via the SoundBlaster,
and Sections 5.3 and 5.4 explain how to transfer from the CoCo to the PC.


5.1 THE VIRTUAL CASSETTE MENU
-----------------------------

The Virtual Cassette Menu is summoned within the emulator by pressing [F4] or
choosing option T of the Options Menu.  In it, you have the following options,
selected by pressing the appropriate key:

[N] Select the name of the virtual cassette file.  (All virtual cassettes end
    in the .CAS extension.)  You may choose a virtual cassette from the
    directory listing, or create new one by typing a new name.

[M] Select read/write mode.  Pressing this key toggles between "RECORD"
    (for CSAVE, CSAVEM, PRINT#, etc.) and "PLAYBACK" (for CLOAD, CLOADM,
    INPUT#, etc.)

[S] Rewinds the counter (shown in the upper-right corner of this menu) to the
    beginning of the file.

[R] Moves backwards through the virtual cassette file.  The counter will
    decrease.

[F] Move forward, the counter will increase.

[E] Moves to the end of the virtual cassette file.

Note that the counter represents the position in the virtual cassette file
in bytes.  A virtual cassette file cannot exceed 64K.  Be sure that the
virtual cassette menu is set correctly before entering a cassette command
at the emulated CoCo's "OK" prompt.


5.2 USING THE SOUNDBLASTER TO WRITE CASSETTES
---------------------------------------------

By connecting a cassette recorder to your SoundBlaster's output, you can
record CoCo files on cassette which may be loaded in a real CoCo using CLOAD,
CLOADM, etc.  Follow the instructions in your SoundBlaster manual on how to
properly connect a cassette recorder.

To create a .WAV file from a Virtual cassette file, use the command:

   CASOUT /W filename[.CAS]

at the MS-DOS prompt, where "filename" is the name of the virtual cassette
created within the emulator.  When prompted, give a name for the .WAV file
you will be creating.  You can then play this .WAV file on your PC and
record the audio to a cassette recorder connected to your SoundBlaster.

Alternatively, to output a cassette file directly via the SoundBlaster, do
the following: (*direct output will not work on modern Pentium systems.  For
such systems, use the /W option described above to generate a .WAV file and
then play that to a cassette.)

1. Press RECORD on your cassette recorder.

2. Use a command of the form:

   CASOUT [/Vn] filename[.CAS]

   at the MS-DOS prompt, where "filename" is the name of the virtual cassette
   created within the emulator.  The "/Vn" option sets the volume to "n" where
   n=7 is the loudest and n=0 is the quietest.  (It is usually sufficient to
   use the default setting of /V7.  You may wish to listen to a CoCo cassette
   tape and compare the volume levels to get it right.)

It is also possible to connect the black plug of your CoCo's cassette cable
directly to the SoundBlaster SKPR OUT jack, if your SoundBlaster is
configured to use its internal amplifier.  (Again, see your SoundBlaster's
instructions for details.)  Step 1 would then be to issue a CLOAD or CLOADM
command on your CoCo as appropriate, followed by the same step 2.


5.3 USING THE SOUNDBLASTER TO READ CASSETTES
--------------------------------------------

You can also load CoCo cassettes into your PC by connecting a cassette player
to your SoundBlaster.  See the SoundBlaster manual for details on how to
properly connect a player.

The preferred method is to record your cassette to a .WAV file and then
convert the .WAV file containing the recording into a .CAS file.  To convert,
use the command "CASIN /W filename[.CAS]" where "filename" is the name you
wish to give to the virtual cassette file in your PC's directory.  You will
be prompted to enter the name of the .WAV file.

To input a cassette directly via the SoundBlaster, follow these steps:
(*direct input will not work on modern Pentium systems.  For such systems,
record your cassette to a .WAV file and then use the /W option described
above to convert your recording to a .CAS virtual cassette file.)

1. At the MS-DOS prompt, issue a command of the form `CASIN filename[.CAS]',
   where "filename" is the name you wish to give the virtual cassette file
   in your PC's directory.

2. Press PLAY (or release the PAUSE) on your cassette player.

CASIN will initially display "Matching phase...".  Once it has synchronised
with the cassette input, "Ready..." will appear, and an asterisk will blink
in the upper-right hand corner to indicate data is being recorded.  When the
data stops for more than five seconds, CASIN will automatically end recording.
You can manually end recording by pressing ESC.

If you want to forgo using a cassette player as a go-between, connecting a
CoCo directly to your PC for use with CASIN is a little trickier:

1. On a CoCo 3, you should connect the SoundBlaster's LINE IN jack to the
   AUDIO OUT of the CoCo.  DO NOT CONNECT THE CASSETTE CABLE'S GREY PLUG TO 
   YOUR SOUNDBLASTER.

2. Then, type `POKE &HFF23,&H3C' on the CoCo.

3. Next, issue the CASIN command on your PC to get it ready to receive data
   (i.e. displaying the "Matching phase..." line).

4. Finally, issue the CSAVE or CSAVEM command on your CoCo, as appropriate,
   to send the file.


6. USING PROGRAM PAKS WITH THE EMULATOR
---------------------------------------

There are two ways to read a Program Pak on a CoCo while staying in BASIC.
Either you can cover up the pin on the cartridge that tells the CoCo to
auto-start it, or you can plug the cartridge in with the power on, after
starting the following program.

WARNING: THERE HAVE BEEN MANY HORROR STORIES OF AN IMPROPERLY INSERTED
         CARTRIDGE BLOWING THE UNPROTECTED CPU WHEN THE POWER IS ON.  If
         you elect to use the latter method, do so carefully and proceed
         at your own risk.

To transfer your Program Pak to a PC, you will need the same cable used for
the diskless ROM transfer.  Then, complete the following steps:

1. IF YOU ARE USING THE COVER-THE-PIN METHOD, take the cartridge you are
   going to use and pull the cover back to expose the pins.  Then, cover
   up the fourth pin position in on the left on the bottom (pin 8, the
   "CART" signal).  (IMPORTANT: Most cartridges have no contacts for the
   first three positions, so this may be the first plated-contact from the
   left.  In this case, you can usually see where the other three positions
   should be by the scratch marks from frequent use.)  If needed, you can
   also cover up the pin on the top side directly above this one, as well as
   the three pin positions to each of their lefts if necessary.  Be careful
   not to cover the fifth pins in as this will make the cartridge unreadable.

   Once this is done, insert the Pak into your CoCo with the power off, then
   turn on the computer.  If you are successful, the CoCo will power up into
   BASIC's "OK" prompt despite the cartridge being present.

2. Next, for both methods, type the following commands on your CoCo immediately
   after turning it on:

   POKE &HFFDE,0
   POKE &HFF90,&H88

3. Next, type in the following program in your CoCo:

   10 POKE 65315,54
   20 INPUT"INSERT PAK AND PRESS [ENTER] TO SEND";X$
   30 POKE 150,18
   40 PRINT#-2,CHR$(0);CHR$(&H20);      'Length of Pak ROM in bytes (LSB/MSB)
   50 PRINT#-2,CHR$(0);CHR$(&HC0);      'Start address of Pak (LSB/MSB)
   60 FOR X=&HC000 TO &HDFFF            'Loop for each byte in Pak
   70 PRINT#-2,CHR$(PEEK(X));
   80 NEXT X

   Note: You may omit lines 10 and 20 if using the covering-the-pin method.

4. Connect your PC to the CoCo and prepare a terminal capture program on your
   PC as described in section 2.2.  (Use the extension ".PAK" for Program
   Paks.)

5. Run the BASIC program on your CoCo.  If you are using the insert-with-
   power-on method, insert the cartridge when you are prompted to do so and
   then press ENTER.  This will begin transmission of the cartridge's data.

The resulting file on your PC should be 8196 bytes long.

To run the Program Pak in the emulator, simply use the Snapshot Menu, or type
"COCO3X pak_name" at the MS-DOS prompt when running the emulator.  To return to
BASIC, select "Restart" in the Options Menu.

It is also possible to save snapshots of what you are doing in a Program Pak
(such as a game-in-progress), but when reloading, you must first reload the
Program Pak's .PAK file before loading the snapshot's .PAK file.

For those who have copied their Program Paks to their PCs using some other
method, the general format of the file constructed by the above program is:

- 2 byte ROM length (LSB/MSB, usually 8192 decimal)
- 2 byte start address (LSB/MSB, usually C000H)
- ROM data (usually 8192 bytes)

Program Pak files created on earlier versions of the CoCo 2 emulator are also
compatible to this emulator.


7. COMPATIBILITY AND ENHANCEMENTS
---------------------------------

The following sections deal with common problems and also enhancements for
both BASIC users, OS-9 users, and assembly language programmers.


7.1 TROUBLESHOOTING
-------------------

If you are finding that a particular program is not working with the
emulator, try changing the Timer mode in the [F6] Options Menu to "sync
lock" and/or "60Hz/16kHz" (not the "60Hz only" setting).  Note that this
may slow down overall emulator response and is generally not recommended on
low end systems, or when running through Windows.  Conversely, if you are
experiencing frequent emulator lock-ups, this may be attributable to the
Timer setting being something other than "60Hz only" or "50Hz only".

Two programs are known to only function in the "sync lock" and/or
"60Hz/16kHz" modes: ADOS-3 and CoCo Max III.

Also, some games which rely on "page flipping" techniques and other
graphics-intensive animation programs will not function with the emulator,
due to the difficult timing involved in producing the graphics.  Other
programs may behave slightly unusually because of this, but otherwise work
correctly.  For example CoCo Max III's colour palette, which normally
displays 64 colours on the screen at once, will show the 8x8 colour grid,
but the colours will not be displayed correctly.  However, you can still use
the colour grid as usual, since once you select a colour at a grid point,
CoCo Max III WILL change to the colour that was supposed to be at the point.
(So, you can still choose any of the 64 colours, you just can't see what
you've chosen until you've done it.)


7.2 ENHANCEMENTS FOR BASIC USERS
--------------------------------

BASIC users can access a couple of their PC's features: the real time
clock and the mouse.  To read the mouse, use the following:

        X=PEEK(&HFF86)*256+PEEK(&HFF87) 'get X coordinate of mouse
        Y=PRINT PEEK(&HFF88)*256+PEEK(&HFF89) 'get Y coordinate of mouse

This will return the X and Y coordinate of the PC's mouse (regardless of
the joystick settings in the [F6] Options Menu).

To read the real-time clock, use the following:

        Y=PEEK(&HFFC0)*100+PEEK(&HFFC1) 'Year
        MO=PEEK(&HFFC2) 'Month
        D=PEEK(&HFFC3) 'Day
        DW=PEEK(&HFFC4) 'Day of week (0=Sunday, ... 6=Saturday)
        H=PEEK(&HFFC5) 'Hour
        MI=PEEK(&HFFC6) 'Minutes
        S=PEEK(&HFFC7) 'Seconds
        F=PEEK(&HFFC8) '100ths of a second

IMPORTANT: You *must* read PEEK(&HFFC0) first each time you want to
retrieve the current time.  This updates all the values at the other
PEEK addresses.  This is actually a feature :-) as it allows you to 
"lock-in" the time so that it doesn't change between reading the minutes
and seconds, for example.
  

7.3 ENHANCEMENTS FOR OS-9 USERS
-------------------------------

In addition to the auto-booting ROM, OS9BOOT.MOR, provided with the emulator
there are several additional features available to OS-9 users:

* 2Mb of RAM

  To activate this feature, first be sure to have at least 2Mb of EMS
  available.  (Consult your PC's DOS manual for more info.)  Then, at the
  MS-DOS prompt, issue the command:

        ECHO >2MEGS

  The next time you start the emulator, if all is well, the title screen
  will appear in red and indicate "2Mb" in the top-right.

* Virtual hard disk support

  Drivers for this feature may be found on the OS-9 formatted OS9UTIL.DSK
  virtual disk.  See the read.me file there for details on how to set up
  the virtual hard disk.  Technical specs on the VHD interface can be
  found on the OS9UTIL.DSK in the "source" directory's Tech.info file.

* Automatic time/date setting

  Add the "getclock" program (found in the CMDS directory of the OS-9
  utilities disk, OS9UTIL.DSK) to your startup, and it will automatically
  read your PC's real time clock and use it to set the date and time in OS-9.
  (See section 7.2 for details on how to read the PC's clock programmatically
  from inside the emulator.)

* Extended sectors/track counts for virtual disks

  You can create virtual disks that permit more than 18 sectors per track.
  This is done by creating a new MS-DOS file containing a single byte:
  a binary number between 1 and 255 specifying the SPT count you want for
  that disk.  255SPT.DSK is such a file, set to 255 sectors per track.
  You can COPY it to a new disk (e.g. "COPY 255SPT.DSK NEWDISK.DSK") and
  build your disk on the copy.  You will also need to make an OS-9 drive
  descriptor that is configured for the appropriate sector count, and then
  you will need to format your new disk using that drive.

* OS-9 keyboard support

  As mentioned in section 3, there is an "OS-9" keyboard layout that can
  be chosen that will make CAPS LOCK to CTRL+0 and many of the special
  symbol keys to the correct OS-9 CTRL sequence.


7.4 ENHANCEMENTS FOR ASSEMBLY LANGUAGE USERS
--------------------------------------------

In addition to the new readable registers described in section 7.2,
assembly language programmers can now directly embed 80x86 assembly code
into their 6809 code to execute natively inside the emulator.

You can enable 80x86 native code hooks by writing $4A to $FF86 and $56
to $FF87.  Once this is done, the 6809 opcodes 10 FE and 10 FF take on
special meaning.  Issuing a 10 FE will exit the emulator (equivalent to
the key sequence F6, Q, Y).  Issuing a 10 FF will switch into 80x86 mode.
In this mode, the code immediately following the 10 FF is executed as
80x86 code.  You must return to 6809 mode via an 80x86 RETF at the end of
your native code.  Upon entry and exit, 6809 and 80x86 registers are
mapped as follows:

        AH = DP
        BX = U
        BP = S
        CX = X
        DH = A
        DL = B
        DI = Y
        SI = PC

Note that this means you must load the 80x86 register SI with your
6809 re-entry address before issuing a RETF.  Upon entry into 80x86 mode,
DS: and ES: point to the segment containing the top 64K of CoCo RAM.
80x86 native code must not cross 8K MMU boundaries in the CS: segment
in which it is entered, though it is ok to access or branch to the top 64K
of CoCo RAM pointed to by DS:/ES:.


8. THE DEBUGGER
---------------

The debugger halts the emulator, displaying the current state of all the
registers in the "6809" CPU, and also includes a 128-byte memory map and
a disassembly of current instructions.  In the lower-left corner, the first
few entries on the U and S stacks are shown.  Several commands are available
to you, as summarised in the box on the lower-right:  (These commands are
probably best understood through experimentation.  [ESC] will cancel any
option except [E]DIT, which is immediate.)

[B] Sets a BREAKPOINT address.  The emulator will resume normal execution
    until the breakpoint is hit, at which time the debugger reappears.  Only
    one breakpoint can be set at a time.  The breakpoint is cleared the next
    the the debugger or another menu is displayed.

[C] CONTINUE emulation.  The breakpoint is cleared and the program returns
    to normal emulation.

[D] Change the start address of DISASSEMBLY.  A register or hexidecimal
    address can be specified.  If a register is given, the start address of
    the disassembly will always follow whatever is in that register.  The
    default for this prompt is the next byte after the last instruction
    displayed on the current disassembly.

[E] EDIT memory.  Places a cursor on the memory map with which you can
    directly modify memory.  Arrows, PG UP and PG DN work.  ROM and memory-
    mapped device addresses behave as in the genuine machine.  ESC or ENTER
    when done.

[F] Change the 6809 FLAG registers.  Press the letter of the flag to toggle
    its true (1) or false (0) value.  ESC to abort, ENTER to keep changes
    and return to main debugger options.

[L] LOCATE WORD.  Enter a 16-bit word and the debugger will search the
    current 6809 address space (i.e. only memory banks currently switched
    in by the MMU) for that word.  The search starts at the current memory
    address in the memory dump window.
    
[H] HEXIDECIMAL CALCULATOR.  Enter a hex number or register to start.  You
    then enter one of the following operations:

    [+], [-], [*], [/], [A]nd, [O]r, [X]or, [N]eg, [S]hift, [R]ot, [D]ecimal

    The first seven of these will prompt for a second number or register to
    operate with.  [N] will NEGate the current result.  [S] or [R] followed
    by the left or right arrows will shift or rotate the bit positions of
    the result as appropriate ([ESC] to return to calculator options).  [D]
    will display the decimal equivalent and/or allow you to enter a decimal
    value.  [ESC] will return to the main debugger options.

[M] Change the MEMORY DUMP start address.  Enter either a hex address or a
    register.  If a register is used, the start address of the memory dump
    will always follow that register's contents.

[O] STEP OVER.  Same as "SINGLE STEP" below, except if a JSR or BSR is
    encountered, the emulator will instead run until it reaches the return
    address (i.e. the address immediately following the JSR or BSR
    instruction).
    
[Q] QUIT EMULATOR.  Exits back to MS-DOS.  You must confirm this choice with
    a "Y".  An other reply will return to the main debugger options.

[R] Change REGISTER contents.  Select a register using the arrow keys
    followed by [ENTER], or by pressing its letter.  Then type a new hex
    value for its contents, or the name of another register to copy that
    register's contents to the currently selected register.

[S] SINGLE STEP.  Execute one 6809 instruction and return to the debugger.

[V] VIEW VIDEO.  Display the current CoCo screen and wait for a key to be
    pressed.  Pressing any key will return you to the debugger's main
    options.

Register names are just there 6809 names, without brackets, except for the
D register.  D is entered as "A/B" to distinguish it from the hex numbers
000D, 000A, 000B, and 00AB.


9. COMMENTS
-----------

Well, the CoCo 3 emulator has been out over two years at the time of this
release.  A number of compatibility problems have since been addressed,
and this release also features a few enhancements.  In particular I've
attempted to satisfy the OS-9 wish list, trying to make OS-9ers feel at
home in the emulator by giving it equivalents to some of the more popular
add-ons in the community.

The assembly language native hook described in section 7.4 allows end-user
control over this expandability.  Being able to tap into PC resources,
drivers could theoretically be written for direct printer or serial
communication.  (My apologies, but the timing issues involved in emulating
the RS-232 Pak did not make it a feasible endevour.)

I should mention that, despite debugging efforts, some compatibility issues
will remain:

1. Certain programs are timing sensitive and, if run on a slow (or sometimes
   too fast) machine, may not work properly.  For example, it was reported
   on one machine that MultiVue would not work unless the clock was at 50Hz
   instead of 60Hz (see the Options Menu).

2. DSKINI/RETRIEVE and the emulator's direct-disk-access capabilities are
   designed to operate with standard interfaces (FDC at 3F0H, DMA channel 2
   if that means anything).  If your PC refuses to read your CoCo disks,
   and DISKS FORMATTED BY DSKINI.EXE ON YOUR PC WILL NOT WORK ON YOUR COCO, 
   then I can only recommend trying another brand of PC if you have access to 
   one.  Use that computer to place all your CoCo disks onto virtual disk 
   .DSK files and then copy these files to the PC on which you wish to use 
   the emulator.

Furthermore, it's highly recommended that you not try to run the emulator
through the DOS shell of any Windows environment.  If feasible, shut down
Windows and run in DOS-only mode.

If you encounter video problems, run the VGACHECK program to ensure that
your PC's VGA card supports all the standard VGA features required by the
emulator.

THIS PACKAGE IS DISTRIBUTED AS-IS AND WITHOUT WARRANTY.  I have made an effort
to make the emulator as authentic and bug-free as possible, but a stray bug
or compatibility problem may have escaped my attention.

Please note that this is an emulator, not a genuine CoCo 3 so there are bound
to be some unsolvable compatibility problems if the program in question pulls
any nasty tricks.  For one, copy protected programs may not work in the
emulator.  Secondly, programs that perform undocumented functions like trying
to get the full 64-colour palette on the one CoCo screen or perform similar
timing-critical functions are simply beyond the reasonable capabilities of
hardware emulation.

Visit http://www.vavasour.ca/jeff/trs80.html#coco3 for contact info.

Please note, I CANNOT PROVIDE ROM IMAGES.  No exceptions.

For Internet users, there is an email discussion group for users of my
emulators.  To be included, send email to trs80-request@cs.ubc.ca with the
body containing simply the line:

subscribe your@email.address

(Obviously, substitute the correct email address in there.)  The subject
line is not important and should be left blank.  To unsubscribe, do the
same thing, but replace "subscribe" with "unsubscribe".  To post a message
to everyone on the list, send it to trs80@cs.ubc.ca.  Please, do not
post binaries.

Disclaimer:  This package is provided as-is and without warranty.  I assume
no responsibility for any damage that may result.

Acknowledgements:  Thanks to Rick Cooper, Tika Carr, Mike McKenzie, George 
Phillips, and Alan DeKok their helpful references in developing and debugging
this package.


APPENDIX: THE SERIAL CABLE
--------------------------

For diskless users, you will need a cable to link the serial port of your
PC to the CoCo's built-in serial port.  There are two kinds of serial
connectors on most PCs - the 9-pin and the 25-pin versions.

To start you will need a connector to mate with your PC's serial port.  For
those not used to hardware, it's best to get the "crimping" version.  No
soldering is necessary.

You'll also need a male 4-pin DIN connector.  Though Radio Shack has
discontinued this part, many other electronics stores may still stock them
stocks these parts.  Also some Radio Shacks may still have a dusty unit
or two in stock.

The cable itself is very simple.  The pin numbers on the 9-pin and 25-pin
PC serial connectors are actually visible on the connector itself, next to
each pin.  For the 4-pin DIN connector, I will use the convention of the
CoCo's technical reference manual.  Looking at the serial I/O port on the
back of the computer itself, the pins are numbered as shown:

     _____
   /  |_|  \                    Pin names: 1 = CD
4 | o     o | 1                            2 = RS232 IN
  |         |                              3 = GND
3 |  o   o  | 2                            4 = RS232 OUT
   \ _____ /


Three wires must be connected in this cable, listed below.  (The names of
the pins are also given for the reference of those interested.)  Be sure
to select the column appropriate to your PC serial connector.

From CoCo       To PC's        To PC's
4-pin DIN       9-pin          25-pin
=========       =======        =======
Pin 2 --------> Pin 4   - or - Pin 20
(RS232 IN)      (DTR*)         (DTR*)

Pin 3 --------> Pin 5   - or - Pin 7
(GND)           (GND)          (GND)

Pin 4 --------> Pin 2   - or - Pin 3
(RS232 OUT)     (RD)           (RD)

Once the cable is assembled, it may be tested by loading a terminal program
on your PC and selecting the appropriate COM: port with the settings:
2400 baud, 1 stop bit, 8 word length, no parity.  Next, power on your CoCo
and type the following:

POKE 150,18
PRINT#-2,"THIS IS A TEST"

If the cable is working properly you should see the message "THIS IS A TEST"
on your PC.  If no message appears on the PC, but the "OK" prompt returns
on your CoCo, check the line connected to the CoCo's pin 4 (RS232 OUT).
(A ohmmeter or continuity checker would be useful for this.)  If the "OK"
prompt fails to return, check pin 2 (RS232 IN).  Also, it is a good idea
to check the GND line in both cases.
